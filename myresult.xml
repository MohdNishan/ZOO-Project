<?xml version="1.0" encoding="utf-8"?>
<wps:Capabilities xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsGetCapabilities_response.xsd" service="WPS" version="1.0.0" xml:lang="en-US">
  <ows:ServiceIdentification>
    <ows:Title>The ZOO-Project OGC WPS Developement Server</ows:Title>
    <ows:Abstract>Developement version of ZOO-Project OGC WPS. See http://www.zoo-project.org</ows:Abstract>
    <ows:Keywords>
      <ows:Keyword>WPS</ows:Keyword>
      <ows:Keyword>GIS</ows:Keyword>
      <ows:Keyword>buffer</ows:Keyword>
    </ows:Keywords>
    <ows:ServiceType>WPS</ows:ServiceType>
    <ows:ServiceTypeVersion>1.0.0</ows:ServiceTypeVersion>
    <ows:Fees>None</ows:Fees>
    <ows:AccessConstraints>none</ows:AccessConstraints>
  </ows:ServiceIdentification>
  <ows:ServiceProvider>
    <ows:ProviderName>ZOO-Project</ows:ProviderName>
    <ows:ProviderSite xlink:href="http://www.zoo-project.org"/>
    <ows:ServiceContact>
      <ows:IndividualName>Gerald FENOY</ows:IndividualName>
      <ows:PositionName>Developer</ows:PositionName>
      <ows:ContactInfo>
        <ows:Phone>
          <ows:Voice>False</ows:Voice>
          <ows:Facsimile>False</ows:Facsimile>
        </ows:Phone>
        <ows:Address>
          <ows:DeliveryPoint>1280, avenue des Platanes</ows:DeliveryPoint>
          <ows:City>Lattes</ows:City>
          <ows:AdministrativeArea>False</ows:AdministrativeArea>
          <ows:PostalCode>34970</ows:PostalCode>
          <ows:Country>fr</ows:Country>
          <ows:ElectronicMailAddress>gerald.fenoy@geolabs.fr</ows:ElectronicMailAddress>
        </ows:Address>
      </ows:ContactInfo>
    </ows:ServiceContact>
  </ows:ServiceProvider>
  <ows:OperationsMetadata>
    <ows:Operation name="GetCapabilities">
      <ows:DCP>
        <ows:HTTP>
          <ows:Get xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
          <ows:Post xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
        </ows:HTTP>
      </ows:DCP>
    </ows:Operation>
    <ows:Operation name="DescribeProcess">
      <ows:DCP>
        <ows:HTTP>
          <ows:Get xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
          <ows:Post xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
        </ows:HTTP>
      </ows:DCP>
    </ows:Operation>
    <ows:Operation name="Execute">
      <ows:DCP>
        <ows:HTTP>
          <ows:Get xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
          <ows:Post xlink:href="http://zookernel/cgi-bin/zoo_loader.cgi"/>
        </ows:HTTP>
      </ows:DCP>
    </ows:Operation>
  </ows:OperationsMetadata>
  <wps:ProcessOfferings>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>display</ows:Identifier>
      <ows:Title>Print Cheetah templates as HTML</ows:Title>
      <ows:Abstract>Print Cheetah templates as HTML.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>hellor</ows:Identifier>
      <ows:Title>HelloWorld Service in R</ows:Title>
      <ows:Abstract>Output and Hello Wolrd string</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>hellojs1</ows:Identifier>
      <ows:Title>HelloWorld Service in JavaScript</ows:Title>
      <ows:Abstract>Output and Hello Wolrd string</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>hellojs</ows:Identifier>
      <ows:Title>HelloWorld Service in JavaScript</ows:Title>
      <ows:Abstract>Output and Hello Wolrd string</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.33</ows:Identifier>
      <ows:Title>Import Single Raster Band from PostGIS</ows:Title>
      <ows:Abstract>Imports grids from a PostGIS database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.0</ows:Identifier>
      <ows:Title>List PostgreSQL Connections</ows:Title>
      <ows:Abstract>Lists all PostgreSQL sources.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.15</ows:Identifier>
      <ows:Title>Import Table from SQL Query</ows:Title>
      <ows:Abstract>Import a SQL table from a PostgreSQL database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.12</ows:Identifier>
      <ows:Title>Import Table</ows:Title>
      <ows:Abstract>Imports a table from a PostgreSQL database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.11</ows:Identifier>
      <ows:Title>List Table Fields</ows:Title>
      <ows:Abstract>Loads table information from PostgreSQL data source.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.30</ows:Identifier>
      <ows:Title>Import Raster from PostGIS</ows:Title>
      <ows:Abstract>Imports grids from a PostGIS database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.23</ows:Identifier>
      <ows:Title>Import Shapes with Joined Data from PostGIS (GUI)</ows:Title>
      <ows:Abstract>Imports shapes with joined data from a PostGIS database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.16</ows:Identifier>
      <ows:Title>Import Table from SQL Query (GUI)</ows:Title>
      <ows:Abstract>Import a SQL table from a PostgreSQL database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.20</ows:Identifier>
      <ows:Title>Import Shapes from PostGIS</ows:Title>
      <ows:Abstract>Imports shapes from a PostGIS database.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_pgsql.10</ows:Identifier>
      <ows:Title>List Tables</ows:Title>
      <ows:Abstract>Lists all tables of an PostgreSQL data source.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ihacres.0</ows:Identifier>
      <ows:Title>IHACRES Calibration (2)</ows:Title>
      <ows:Abstract>Calibration Tool for the Model IHACRES &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Reference: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Jakeman, A.J. / Hornberger, G.M. (1993). &amp;lt;br/&amp;gt;How Much Complexity Is Warranted in a Rainfall-Runoff Model? &amp;lt;br/&amp;gt;Water Resources Research, (29), NO. 8 (2637-2649) &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Croke, B. F. W., W. S. Merritt, et al. (2004).&amp;lt;br/&amp;gt;A dynamic model for predicting hydrologic response to land cover changes in gauged and ungauged catchments. &amp;lt;br/&amp;gt;Journal Of Hydrology 291(1-2): 115-131.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ihacres.1</ows:Identifier>
      <ows:Title>IHACRES Version 1.0</ows:Title>
      <ows:Abstract>The Rainfall-Runoff Model IHACRES &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Reference: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Jakeman, A.J. / Hornberger, G.M. (1993). &amp;lt;br/&amp;gt;How Much Complexity Is Warranted in a Rainfall-Runoff Model? &amp;lt;br/&amp;gt;Water Resources Research, (29), NO. 8 (2637-2649) &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Croke, B. F. W. et al.(2004).&amp;lt;br/&amp;gt;A dynamic model for predicting hydrologic response to land cover changes in gauged and ungauged catchments. &amp;lt;br/&amp;gt;Journal Of Hydrology 291(1-2): 115-131.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ihacres.3</ows:Identifier>
      <ows:Title>IHACRES Elevation Bands</ows:Title>
      <ows:Abstract>The Rainfall-Runoff Model IHACRES &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Reference: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Jakeman, A.J. / Hornberger, G.M. (1993). &amp;lt;br/&amp;gt;How Much Complexity Is Warranted in a Rainfall-Runoff Model? &amp;lt;br/&amp;gt;Water Resources Research, (29), NO. 8 (2637-2649) &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Croke, B. F. W., W. S. Merritt, et al. (2004).&amp;lt;br/&amp;gt;A dynamic model for predicting hydrologic response to land cover changes in gauged and ungauged catchments. &amp;lt;br/&amp;gt;Journal Of Hydrology 291(1-2): 115-131.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ihacres.4</ows:Identifier>
      <ows:Title>IHACRES Elevation Bands Calibration</ows:Title>
      <ows:Abstract>The Rainfall-Runoff Model IHACRES &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Reference: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Jakeman, A.J. / Hornberger, G.M. (1993). &amp;lt;br/&amp;gt;How Much Complexity Is Warranted in a Rainfall-Runoff Model? &amp;lt;br/&amp;gt;Water Resources Research, (29), NO. 8 (2637-2649) &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Kokkonen, T. S. et al. (2003). &amp;lt;br/&amp;gt;Predicting daily flows in ungauged catchments:model regionalization from catchment descriptorsat the Coweeta Hydrologic Laboratory, North Carolina &amp;lt;br/&amp;gt; Hydrological Processes (17), 2219-2238 &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Croke, B. F. W., W. S. Merritt, et al. (2004).&amp;lt;br/&amp;gt;A dynamic model for predicting hydrologic responseto land cover changes in gauged andungauged catchments. &amp;lt;br/&amp;gt;Journal Of Hydrology 291(1-2): 115-131.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ihacres.2</ows:Identifier>
      <ows:Title>IHACRES Basin</ows:Title>
      <ows:Abstract>The Rainfall-Runoff Model IHACRES &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Reference: &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Jakeman, A.J. / Hornberger, G.M. (1993). &amp;lt;br/&amp;gt;How Much Complexity Is Warranted in a Rainfall-Runoff Model? &amp;lt;br/&amp;gt;Water Resources Research, (29), NO. 8 (2637-2649) &amp;lt;br/&amp;gt; &amp;lt;br/&amp;gt;Croke, B. F. W., W. S. Merritt, et al. (2004).&amp;lt;br/&amp;gt;A dynamic model for predicting hydrologic response to land cover changes in gauged and ungauged catchments. &amp;lt;br/&amp;gt;Journal Of Hydrology 291(1-2): 115-131.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.6</ows:Identifier>
      <ows:Title>Real Surface Area</ows:Title>
      <ows:Abstract>Calculates real (not projected) cell area</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.5</ows:Identifier>
      <ows:Title>Hypsometry</ows:Title>
      <ows:Abstract>Calculates the hypsometric curve for a given DEM.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The hypsometric curve is an empirical cumulative distribution function of elevations in a catchment or of a whole planet. The tool calculates both the relative (scaled from 0 to 100 percent) and absolute (minimum to maximum values) distributions. The former scales elevation and area by the maximum values. Such a non-dimensional curve allows one to asses the similarity of watersheds as differences in hypsometric curves arise from different geomorphic processes shaping a landscape.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In case the hypsometric curve should not be calculated for the whole elevation range of the input dataset, a user-specified elevation range can be specified with the classification constant area.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The output table has two attribute columns with relative height and area values, and two columns with absolute height and area values. In order to plot the non-dimensional hypsometric curve as diagram, use the relative area as x-axis values and the relative height for the y-axis. For a diagram with absolute values, use the absolute area as x-axis values and the absolute height for the y-axis.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.21</ows:Identifier>
      <ows:Title>Terrain Surface Convexity</ows:Title>
      <ows:Abstract>Terrain surface convexity as proposed by Iwahashi &amp; Pike (2007) for subsequent terrain classification.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.24</ows:Identifier>
      <ows:Title>Valley and Ridge Detection (Top Hat Approach)</ows:Title>
      <ows:Abstract>Calculating fuzzy valley and ridge class memberships using the Top Hat approach. Based on the AML script 'tophat' by Jochen Schmidt, Landcare Research. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Rodriguez, F., Maire, E., Courjault-Rad'e, P., Darrozes, J. (2002): The Black Top Hat function applied to a DEM: a tool to estimate recent incision in a mountainous watershed. (Estib`ere Watershed, Central Pyrenees). Geophysical Research Letters, 29(6), 9-1 - 9-4.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.22</ows:Identifier>
      <ows:Title>Terrain Surface Classification (Iwahashi and Pike)</ows:Title>
      <ows:Abstract>Terrain surface classification as proposed by Iwahashi &amp; Pike (2007).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.28</ows:Identifier>
      <ows:Title>Multi-Scale Topographic Position Index (TPI)</ows:Title>
      <ows:Abstract>Topographic Position Index (TPI) calculation as proposed by Guisan et al. (1999).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;This implementation calculates the TPI for different scales and integrates these into one single grid. The hierarchical integration is achieved by starting with the standardized TPI values of the largest scale, then adding standardized values from smaller scales where the (absolute) values from the smaller scale exceed those from the larger scale. This integration scheme has been proposed by N. Zimmermann.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.14</ows:Identifier>
      <ows:Title>Relative Heights and Slope Positions</ows:Title>
      <ows:Abstract>The tool allows one to calculate several terrain indices from a digital elevation model.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;General information on the computational concept can be found in:&amp;lt;br/&amp;gt;- Boehner, J. and Selige, T. (2006): Spatial prediction of soil attributes using terrain analysis and climate regionalisation. In: Boehner, J., McCloy, K.R., Strobl, J. [Ed.]: SAGA - Analysis and Modelling Applications, Goettinger Geographische Abhandlungen, Goettingen: 13-28. (&amp;lt;a target="_blank" href="http://downloads.sourceforge.net/saga-gis/gga115_02.pdf"&amp;gt;pdf&amp;lt;/a&amp;gt;)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.17</ows:Identifier>
      <ows:Title>Vector Ruggedness Measure (VRM)</ows:Title>
      <ows:Abstract>Vector Ruggedness Measure (VRM)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.25</ows:Identifier>
      <ows:Title>Fuzzy Landform Element Classification</ows:Title>
      <ows:Abstract>Algorithm for derivation of form elements according to slope, maximum curvature, minimum curvature, profile curvature, tangential curvature, based on a linear semantic import model for slope and curvature and a fuzzy classification Based on the AML script 'felementf' by Jochen Schmidt, Landcare Research. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.9</ows:Identifier>
      <ows:Title>Downslope Distance Gradient</ows:Title>
      <ows:Abstract>Calculation of a new topographic index to quantify downslope controls on local drainage. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Hjerdt, K.N., McDonnell, J.J., Seibert, J. Rodhe, A. (2004):   'A new topographic index to quantify downslope controls on local drainage',   Water Resources Research, 40&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.0</ows:Identifier>
      <ows:Title>Slope, Aspect, Curvature</ows:Title>
      <ows:Abstract>Calculates the local morphometric terrain parameters slope, aspect and if supported by the chosen method also the curvature. Besides tangential curvature also its horizontal and vertical components (i.e. plan and profile curvature) can be calculated.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.7</ows:Identifier>
      <ows:Title>Morphometric Protection Index</ows:Title>
      <ows:Abstract>This algorithm analyses the immediate surrounding of each cell up to an given distance and evaluates how the relief protects it.&amp;lt;br/&amp;gt;It is equivalent to the positive openness described in: Visualizing Topography by Openness: A New Application of Image Processing to Digital Elevation Models, Photogrammetric Engineering and Remote Sensing(68), No. 3, March 2002, pp. 257-266.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.15</ows:Identifier>
      <ows:Title>Wind Effect (Windward / Leeward Index)</ows:Title>
      <ows:Abstract>The 'Wind Effect' is a dimensionless index. Values below 1 indicate wind shadowed areas whereas values above 1 indicate areas exposed to wind, all with regard to the specified wind direction. Wind direction, i.e. the direction into which the wind blows, might be either constant or variying in space, if a wind direction grid is supplied.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.26</ows:Identifier>
      <ows:Title>Upslope and Downslope Curvature</ows:Title>
      <ows:Abstract>This tool first calculates the local curvature of a cell as sum of the gradients (i.e. tangens of slope) to its neighbour cells. This is a simple estimation of the general curvature and is strongly correlated with general curvatures calculated with other methods (e.g. Zevenbergen &amp; Thorne 1987). Then upslope curvature is calculated as the distance and flow proportional weighted average local curvature over a cell's upslope contributing area following the multiple flow direction algorithm after Freeman (1991). In a similar way the downslope curvature is calculated by summarizing the curvatures of all hydrologically downslope connected cells. The local upslope/downslope curvatures just take the immediately neighboured cells into account. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.12</ows:Identifier>
      <ows:Title>Diurnal Anisotropic Heat</ows:Title>
      <ows:Abstract>This tool calculates a rather simple approximation of the anisotropic diurnal heat (Ha) distribution using the formula:&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;Ha = cos(amax - a) * arctan(b)&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;where &amp;lt;i&amp;gt;amax&amp;lt;/i&amp;gt; defines the aspect with the maximum total heat surplus, &amp;lt;i&amp;gt;a&amp;lt;/i&amp;gt; is the slope aspect and &amp;lt;i&amp;gt;b&amp;lt;/i&amp;gt; is the slope angle. For more details see Boehner &amp; Antonic (2009).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.18</ows:Identifier>
      <ows:Title>Topographic Position Index (TPI)</ows:Title>
      <ows:Abstract>Topographic Position Index (TPI) calculation as proposed by Guisan et al. (1999). This is literally the same as the difference to the mean calculation (residual analysis) proposed by Wilson &amp; Gallant (2000). The bandwidth parameter for distance weighting is given as percentage of the (outer) radius.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.11</ows:Identifier>
      <ows:Title>Effective Air Flow Heights</ows:Title>
      <ows:Abstract>Effective Air Flow Heights</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.1</ows:Identifier>
      <ows:Title>Convergence Index</ows:Title>
      <ows:Abstract>Reference:&amp;lt;br/&amp;gt;Koethe, R. &amp; Lehmeier, F. (1996): SARA - System zur Automatischen Relief-Analyse. User Manual, 2. Edition [Dept. of Geography, University of Goettingen, unpublished]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.23</ows:Identifier>
      <ows:Title>Morphometric Features</ows:Title>
      <ows:Abstract>Uses a multi-scale approach by fitting quadratic parameters to any size window (via least squares) to derive slope, aspect and curvatures (optional output) for subsequent classification of morphometric features (peaks, ridges, passes, channels, pits and planes). This is the method as proposed and implemented by Jo Wood (1996) in LandSerf and GRASS GIS (r.param.scale). &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Optional output is described in the following. Generalised elevation is the smoothed input DEM. Slope is the magnitude of maximum gradient. It is given for steepest slope angle and measured in degrees. Aspect is the direction of maximum gradient. Profile curvature is the curvature intersecting with the plane defined by the Z axis and maximum gradient direction. Positive values describe convex profile curvature, negative values concave profile. Plan curvature is the horizontal curvature, intersecting with the XY plane. Longitudinal curvature is the profile curvature intersecting with the plane defined by the surface normal and maximum gradient direction. Cross-sectional curvature is the tangential curvature intersecting with the plane defined by the surface normal and a tangent to the contour - perpendicular to maximum gradient direction. Minimum curvature is measured in direction perpendicular to the direction of of maximum curvature. The maximum curvature is measured in any direction. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Wood, J. (1996): The Geomorphological characterisation of Digital Elevation Models. Diss., Department of Geography, University of Leicester, U.K. &amp;lt;a target="_blank" href="http://www.soi.city.ac.uk/~jwo/phd/"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Wood, J. (2009): Geomorphometry in LandSerf. In: Hengl, T. and Reuter, H.I. [Eds.]: Geomorphometry: Concepts, Software, Applications. Developments in Soil Science, Elsevier, Vol.33, 333-349.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.landserf.org/"&amp;gt;LandSerf Homepage&amp;lt;/a&amp;gt;.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.16</ows:Identifier>
      <ows:Title>Terrain Ruggedness Index (TRI)</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;Riley, S.J., De Gloria, S.D., Elliot, R. (1999): A Terrain Ruggedness that Quantifies Topographic Heterogeneity. Intermountain Journal of Science, Vol.5, No.1-4, pp.23-27. &amp;lt;a href="http://www.fw.msu.edu/~rileysh2/Terrain%20Ruggedness%20Index.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.13</ows:Identifier>
      <ows:Title>Land Surface Temperature</ows:Title>
      <ows:Abstract>Temperature estimation at each grid point as a function of temperature, temperature lapse rate and elevation for a reference station. Further optional input is the Leaf Area Index (LAI) and the short-wave radiation ratio, which relates the irradiance including terrain effects to that calculated for a flat, horizontal plane. See Wilson &amp; Gallant (2000) for more details. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.27</ows:Identifier>
      <ows:Title>Wind Exposition Index</ows:Title>
      <ows:Abstract>This tool calculates the average 'Wind Effect Index' for all directions using an angular step. Like the 'Wind Effect Index' it is a dimensionless index. Values below 1 indicate wind shadowed areas whereas values above 1 indicate areas exposed to wind.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.20</ows:Identifier>
      <ows:Title>Terrain Surface Texture</ows:Title>
      <ows:Abstract>Terrain surface texture as proposed by Iwahashi &amp; Pike (2007) for subsequent terrain classification.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.19</ows:Identifier>
      <ows:Title>TPI Based Landform Classification</ows:Title>
      <ows:Abstract>Topographic Position Index (TPI) calculation as proposed by Guisan et al. (1999). This is literally the same as the difference to the mean calculation (residual analysis) proposed by Wilson &amp; Gallant (2000). The bandwidth parameter for distance weighting is given as percentage of the (outer) radius.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.3</ows:Identifier>
      <ows:Title>Surface Specific Points</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;Peucker, T.K. and Douglas, D.H., 1975:&amp;lt;br/&amp;gt;'Detection of surface-specific points by local parallel processing of discrete terrain elevation data',&amp;lt;br/&amp;gt;Computer Graphics and Image Processing, 4, 375-387&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.10</ows:Identifier>
      <ows:Title>Mass Balance Index</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Friedrich, K. (1996): Digitale Reliefgliederungsverfahren zur Ableitung bodenkundlich relevanter Flaecheneinheiten. Frankfurter Geowissenschaftliche Arbeiten D 21, Frankfurt/M., &amp;lt;a href="http://user.uni-frankfurt.de/~relief/fga21/"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Friedrich, K. (1998): Multivariate distance methods for geomorphographic relief classification. in Heinecke, H., Eckelmann, W., Thomasson, A., Jones, J., Montanarella, L., Buckley, B. (eds.): Land Inforamtion Systems - Developments for planning the sustainable use of land resources. European Soil Bureau - Research Report 4, EUR 17729 EN, Office for oficial publications of the European Communities, Ispra, pp. 259-266, &amp;lt;a href="http://eusoils.jrc.it/ESDB_Archive/eusoils_docs/esb_rr/n04_land_information_systems/contents.html"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Moeller, M., Volk, M., Friedrich, K., Lymburner, L. (2008): Placing soil-genesis and transport processes into a landscape context: A multiscale terrain-analysis approach. Journal of Plant Nutrition and Soil Science, 171, pp. 419-430, DOI: 10.1002/jpln.200625039&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.8</ows:Identifier>
      <ows:Title>Multiresolution Index of Valley Bottom Flatness (MRVBF)</ows:Title>
      <ows:Abstract>Calculation of the 'multiresolution index of valley bottom flatness' (MRVBF) and the complementary 'multiresolution index of the ridge top flatness' (MRRTF). </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.4</ows:Identifier>
      <ows:Title>Curvature Classification</ows:Title>
      <ows:Abstract>Surface curvature based terrain classification.&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Dikau, R. (1988):&amp;lt;br/&amp;gt;'Entwurf einer geomorphographisch-analytischen Systematik von Reliefeinheiten',&amp;lt;br/&amp;gt;Heidelberger Geographische Bausteine, Heft 5&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;0 - V  / V&amp;lt;br/&amp;gt;1 - GE / V&amp;lt;br/&amp;gt;2 - X  / V&amp;lt;br/&amp;gt;3 - V  / GR&amp;lt;br/&amp;gt;4 - GE / GR&amp;lt;br/&amp;gt;5 - X  / GR&amp;lt;br/&amp;gt;6 - V  / X&amp;lt;br/&amp;gt;7 - GE / X&amp;lt;br/&amp;gt;8 - X  / X&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_morphometry.2</ows:Identifier>
      <ows:Title>Convergence Index (Search Radius)</ows:Title>
      <ows:Abstract>Reference:&amp;lt;br/&amp;gt;Koethe, R. &amp; Lehmeier, F. (1996): SARA - System zur Automatischen Relief-Analyse. User Manual, 2. Edition [Dept. of Geography, University of Goettingen, unpublished]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.6</ows:Identifier>
      <ows:Title>Copy Selection to New Shapes Layer</ows:Title>
      <ows:Abstract>Copies selected shapes to a new shapes layer.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.21</ows:Identifier>
      <ows:Title>Polar to Cartesian Coordinates</ows:Title>
      <ows:Abstract>Polar to Cartesian Coordinates</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.24</ows:Identifier>
      <ows:Title>Merge Tables</ows:Title>
      <ows:Abstract>Merge tables.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.22</ows:Identifier>
      <ows:Title>Generate Shapes</ows:Title>
      <ows:Abstract>The tool allows one to generate point, line or polygon shapes from a table with the following attribute fields:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- identifier&amp;lt;br/&amp;gt;- x coordinate&amp;lt;br/&amp;gt;- y coordinate&amp;lt;br/&amp;gt;- optional: z coordinate (this will create a 3D shapefile)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The table must be sorted in vertex order.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The identifier has different meanings:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;* Point Shapes: The identifier is arbitrary&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;* Line Shapes: The identifier is unique for each line&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;* Polygon Shapes: The identifier is unique for each polygon; the first polygon vertex may but must not be duplicated in order to close the polygon&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.28</ows:Identifier>
      <ows:Title>Copy Shapes</ows:Title>
      <ows:Abstract>Creates a copy of a shapes layer.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.29</ows:Identifier>
      <ows:Title>Focal Mechanism (Beachball Plots)</ows:Title>
      <ows:Abstract>This tool creates a new polygon layer with beachball plots as representation of focal mechanism solution data. Focal mechanism data of earthquakes have to be supplied as strike and dip angles of the fault plane and rake angle (slip vector) as deviation from the strike angle. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.17</ows:Identifier>
      <ows:Title>Split Table/Shapes by Attribute</ows:Title>
      <ows:Abstract>Split Table/Shapes by Attribute</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.25</ows:Identifier>
      <ows:Title>Land Use Scenario Generator</ows:Title>
      <ows:Abstract>This tool generates land use scenarios for fields under agricultural use based on statistics about the amount of crop types grown in the investigated area of interest. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.9</ows:Identifier>
      <ows:Title>Split Shapes Layer Completely</ows:Title>
      <ows:Abstract>Copies each shape of given layer to a separate target layer.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.0</ows:Identifier>
      <ows:Title>Create New Shapes Layer</ows:Title>
      <ows:Abstract>Creates a new empty shapes layer of given type, which might be either point, multipoint, line or polygon.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Possible field types for the attributes table are:&amp;lt;br/&amp;gt;- string&amp;lt;br/&amp;gt;- date&amp;lt;br/&amp;gt;- color&amp;lt;br/&amp;gt;- unsigned 1 byte integer&amp;lt;br/&amp;gt;- signed 1 byte integer&amp;lt;br/&amp;gt;- unsigned 2 byte integer&amp;lt;br/&amp;gt;- signed 2 byte integer&amp;lt;br/&amp;gt;- unsigned 4 byte integer&amp;lt;br/&amp;gt;- signed 4 byte integer&amp;lt;br/&amp;gt;- unsigned 8 byte integer&amp;lt;br/&amp;gt;- signed 8 byte integer&amp;lt;br/&amp;gt;- 4 byte floating point number&amp;lt;br/&amp;gt;- 8 byte floating point number&amp;lt;br/&amp;gt;- binary&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.15</ows:Identifier>
      <ows:Title>Split Shapes Layer</ows:Title>
      <ows:Abstract>Split Shapes Layer</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.26</ows:Identifier>
      <ows:Title>Select Shapes from List</ows:Title>
      <ows:Abstract>Main use of this tool is to support tool chain development, allowing to pick a single shapefile from a shapes list.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.12</ows:Identifier>
      <ows:Title>Create Graticule</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.18</ows:Identifier>
      <ows:Title>Shapes Buffer</ows:Title>
      <ows:Abstract>A vector based buffer construction partly based on the method supposed by Dong et al. (2003).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.23</ows:Identifier>
      <ows:Title>Convert Vertex Type (2D/3D)</ows:Title>
      <ows:Abstract>The tool allows one to convert the vertex type of shapes from 'XY' (2D) to 'XYZ/M' (3D) and vice versa. The conversion from 3D to 2D is not lossless for lines and polygons, as only the Z/M value of one vertex can be retained (currently that of the last vertex).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.16</ows:Identifier>
      <ows:Title>Split Shapes Layer Randomly</ows:Title>
      <ows:Abstract>Randomly splits one layer into to two new layers. Useful to create a control group for model testing. Optionally this can be done category-wise if a category field is specified. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.13</ows:Identifier>
      <ows:Title>Copy Shapes from Region</ows:Title>
      <ows:Abstract>Copies all shapes that belong to the specified region.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.20</ows:Identifier>
      <ows:Title>QuadTree Structure to Shapes</ows:Title>
      <ows:Abstract>QuadTree Structure to Shapes</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.19</ows:Identifier>
      <ows:Title>Get Shapes Extents</ows:Title>
      <ows:Abstract>Get Shapes Extents</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.10</ows:Identifier>
      <ows:Title>Transform Shapes</ows:Title>
      <ows:Abstract>Use this tool to move, rotate and/or scale shapes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_tools.2</ows:Identifier>
      <ows:Title>Merge Layers</ows:Title>
      <ows:Abstract>Merge vector layers.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.21</ows:Identifier>
      <ows:Title>Geographic Distances (Pair of Coordinates)</ows:Title>
      <ows:Abstract>Calculates for all segments of the input lines the planar, great elliptic, and loxodrome distance and re-projects the latter two to the projection of the input lines. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.24</ows:Identifier>
      <ows:Title>UTM Projection (Grid)</ows:Title>
      <ows:Abstract>Project grids into UTM coordinates.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.14</ows:Identifier>
      <ows:Title>Latitude/Longitude Graticule</ows:Title>
      <ows:Abstract>Creates a longitude/latitude graticule for the extent and projection of the input shapes layer. &amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.17</ows:Identifier>
      <ows:Title>Geographic Coordinate Grids</ows:Title>
      <ows:Abstract>Creates for a given grid geographic coordinate information, i.e. two grids specifying the longitude and latitude for each cell. The coordinate system of the input grid has to be defined. &amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.25</ows:Identifier>
      <ows:Title>UTM Projection (Shapes List)</ows:Title>
      <ows:Abstract>Project shapes into UTM coordinates.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.26</ows:Identifier>
      <ows:Title>UTM Projection (Shapes)</ows:Title>
      <ows:Abstract>Project shapes into UTM coordinates.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.1</ows:Identifier>
      <ows:Title>Coordinate Transformation (Shapes List)</ows:Title>
      <ows:Abstract>Coordinate transformation for shapes.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.23</ows:Identifier>
      <ows:Title>UTM Projection (Grid List)</ows:Title>
      <ows:Abstract>Project grids into UTM coordinates.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.16</ows:Identifier>
      <ows:Title>Tissot's Indicatrix</ows:Title>
      <ows:Abstract>Creates a shapes layer with Tissot's indicatrices for chosen projection.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.13</ows:Identifier>
      <ows:Title>Change Longitudinal Range for Grids</ows:Title>
      <ows:Abstract>Change the longitudinal range of grids using geographic coordinates, i.e. from 0 - 360 to -180 - 180 and vice versa.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.20</ows:Identifier>
      <ows:Title>Geographic Distances</ows:Title>
      <ows:Abstract>Calculates for all segments of the input lines the planar, great elliptic, and loxodrome distance and re-projects the latter two to the projection of the input lines. &amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.3</ows:Identifier>
      <ows:Title>Coordinate Transformation (Grid List)</ows:Title>
      <ows:Abstract>Coordinate transformation for grids.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.4</ows:Identifier>
      <ows:Title>Coordinate Transformation (Grid)</ows:Title>
      <ows:Abstract>Coordinate transformation for grids.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_proj4.2</ows:Identifier>
      <ows:Title>Coordinate Transformation (Shapes)</ows:Title>
      <ows:Abstract>Coordinate transformation for shapes.&amp;lt;br/&amp;gt;Projection routines make use of the Proj.4 Cartographic Projections library.&amp;lt;br/&amp;gt;Proj.4 was originally developed by Gerald Evenden and later continued by the United States Department of the Interior, Geological Survey (USGS).&amp;lt;br/&amp;gt;Proj.4 Version is Rel. 5.2.0, September 15th, 2018&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://trac.osgeo.org/proj/"&amp;gt;Proj.4 Homepage&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.6</ows:Identifier>
      <ows:Title>Change Time Format</ows:Title>
      <ows:Abstract>Change Time Format</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.5</ows:Identifier>
      <ows:Title>Change Date Format</ows:Title>
      <ows:Abstract>Change Date Format</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.21</ows:Identifier>
      <ows:Title>Table Field Enumeration (Shapes)</ows:Title>
      <ows:Abstract>Enumeration of a table attribute, i.e. a unique identifier is assigned to identical values of the chosen attribute field. If no attribute is chosen, a simple enumeration is done for all records, and this with respect to the sorting order if the dataset has been indexed.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.24</ows:Identifier>
      <ows:Title>Formatted Text</ows:Title>
      <ows:Abstract>With this tool you can create new text field contents from the contents of other fields. To address other field's contents you have some format options as listed below.&amp;lt;br/&amp;gt;Fields are addressed either by their zero based column number or by their name.&amp;lt;br/&amp;gt;If the use &amp;lt;i&amp;gt;no-data flag&amp;lt;/i&amp;gt; is unchecked and a no-data value appears in a record's input fields, the result will be an empty text string.&amp;lt;br/&amp;gt;Field contents can be combined using the '+' operator. Free text arguments have to be added in quota.&amp;lt;br/&amp;gt;A simple example:&amp;lt;br/&amp;gt;&amp;lt;i&amp;gt;"No. " + index(1) + ": the value of '" + upper(0) + "' is " + number(1, 2)&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;index(offset = 0)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;record's index&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;string(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as it is&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lower(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as lower case text&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;upper(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as upper case text&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;integer(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as integer number&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;real(field, precision)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as real number with optional precision argument&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.22</ows:Identifier>
      <ows:Title>Copy Table</ows:Title>
      <ows:Abstract>Creates a copy of a table.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.25</ows:Identifier>
      <ows:Title>Formatted Text [Shapes]</ows:Title>
      <ows:Abstract>With this tool you can create new text field contents from the contents of other fields. To address other field's contents you have some format options as listed below.&amp;lt;br/&amp;gt;Fields are addressed either by their zero based column number or by their name.&amp;lt;br/&amp;gt;If the use &amp;lt;i&amp;gt;no-data flag&amp;lt;/i&amp;gt; is unchecked and a no-data value appears in a record's input fields, the result will be an empty text string.&amp;lt;br/&amp;gt;Field contents can be combined using the '+' operator. Free text arguments have to be added in quota.&amp;lt;br/&amp;gt;A simple example:&amp;lt;br/&amp;gt;&amp;lt;i&amp;gt;"No. " + index(1) + ": the value of '" + upper(0) + "' is " + number(1, 2)&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;index(offset = 0)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;record's index&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;string(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as it is&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lower(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as lower case text&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;upper(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as upper case text&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;integer(field)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as integer number&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;real(field, precision)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;field's content as real number with optional precision argument&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.9</ows:Identifier>
      <ows:Title>Change Color Format</ows:Title>
      <ows:Abstract>This tool allows one to convert table fields from SAGA RGB to R, G, B values and vice versa.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.0</ows:Identifier>
      <ows:Title>Create New Table</ows:Title>
      <ows:Abstract>Creates a new empty table.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Possible field types are:&amp;lt;br/&amp;gt;- string&amp;lt;br/&amp;gt;- date&amp;lt;br/&amp;gt;- color&amp;lt;br/&amp;gt;- unsigned 1 byte integer&amp;lt;br/&amp;gt;- signed 1 byte integer&amp;lt;br/&amp;gt;- unsigned 2 byte integer&amp;lt;br/&amp;gt;- signed 2 byte integer&amp;lt;br/&amp;gt;- unsigned 4 byte integer&amp;lt;br/&amp;gt;- signed 4 byte integer&amp;lt;br/&amp;gt;- unsigned 8 byte integer&amp;lt;br/&amp;gt;- signed 8 byte integer&amp;lt;br/&amp;gt;- 4 byte floating point number&amp;lt;br/&amp;gt;- 8 byte floating point number&amp;lt;br/&amp;gt;- binary&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.7</ows:Identifier>
      <ows:Title>Change Field Type</ows:Title>
      <ows:Abstract>With this tool you can change the data type of a table's attribute field.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.15</ows:Identifier>
      <ows:Title>Copy Selection</ows:Title>
      <ows:Abstract>Copies selected records to a new table.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.11</ows:Identifier>
      <ows:Title>Delete Fields</ows:Title>
      <ows:Abstract>Deletes selected fields from a table or shapefile. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.1</ows:Identifier>
      <ows:Title>Transpose Table</ows:Title>
      <ows:Abstract>Transposes a table, i.e. to swap rows and columns.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.23</ows:Identifier>
      <ows:Title>Change Field Name</ows:Title>
      <ows:Abstract>With this tool you can change the name of a table's attribute field.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.20</ows:Identifier>
      <ows:Title>Add Indicator Fields for Categories</ows:Title>
      <ows:Abstract>Adds for each unique value found in the category field an indicator field that will show a value of one (1) for all records with this category value and zero (0) for all others. This might be used e.g. for subsequent indicator kriging. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.3</ows:Identifier>
      <ows:Title>Join Attributes from a Table</ows:Title>
      <ows:Abstract>Joins two tables using key attributes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.10</ows:Identifier>
      <ows:Title>Replace Text</ows:Title>
      <ows:Abstract>For the selected attribute or, if not specified, for all text attributes this tool replaces text strings with replacements as defined in table 'Text Replacements'.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.8</ows:Identifier>
      <ows:Title>Append Fields from another Table</ows:Title>
      <ows:Abstract>Append Fields from another Table</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.4</ows:Identifier>
      <ows:Title>Join Attributes from a Table (Shapes)</ows:Title>
      <ows:Abstract>Joins two tables using key attributes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_tools.2</ows:Identifier>
      <ows:Title>Table Field Enumeration</ows:Title>
      <ows:Abstract>Enumeration of a table attribute, i.e. a unique identifier is assigned to identical values of the chosen attribute field. If no attribute is chosen, a simple enumeration is done for all records, and this with respect to the sorting order if the dataset has been indexed.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_fractals.5</ows:Identifier>
      <ows:Title>Gaussian Landscapes</ows:Title>
      <ows:Abstract>Generates Gaussian landscapes.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Halling, H., Moeller, R. (1995): 'Mathematik fuers Auge', Heidelberg, 144p.&amp;lt;br/&amp;gt;- Mandelbrot, B.B. (1983): 'The Fractal Geometry of Nature', New York, 490p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_fractals.0</ows:Identifier>
      <ows:Title>Bifurcation</ows:Title>
      <ows:Abstract>Feigenbaum's Bifurcation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_fractals.1</ows:Identifier>
      <ows:Title>Pythagoras' Tree</ows:Title>
      <ows:Abstract>Pythagoras' Tree.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_fractals.3</ows:Identifier>
      <ows:Title>Fractal Dimension of Grid Surface</ows:Title>
      <ows:Abstract>Calculates surface areas for increasing mesh sizes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.6</ows:Identifier>
      <ows:Title>Point Cloud Reclassifier / Subset Extractor</ows:Title>
      <ows:Abstract>The tool can be used to either reclassify a Point Cloud attribute or to extract a subset of a Point Cloud based on the values of an attribute.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool provides three different options:&amp;lt;br/&amp;gt;(a) reclassification of (or extraction based on) single values,&amp;lt;br/&amp;gt;(b) reclassification of (or extraction based on) a range of values and&amp;lt;br/&amp;gt;(c) reclassification of (or extraction based on) value ranges specified in a lookup table.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Each of these three options provides it's own parameters. The 'new value' parameters are irrelevant in case a subset is extracted.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In addition to these settings, two special cases ('NoData values' and 'other values' not included in the parameter setup) are supported:&amp;lt;br/&amp;gt;In mode (a) and (b) the 'NoData option' is evaluated before the method settings, in mode (c) the option is evaluated only if the NoData value isn't included in the lookup table.&amp;lt;br/&amp;gt;The 'other values' option is always evaluated after checking the method settings.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.5</ows:Identifier>
      <ows:Title>Point Cloud to Shapes</ows:Title>
      <ows:Abstract>Point Cloud to Shapes</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.14</ows:Identifier>
      <ows:Title>Select Point Cloud from List</ows:Title>
      <ows:Abstract>Main use of this tool is to support tool chain development, allowing to pick a single point cloud from a point cloud list.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.9</ows:Identifier>
      <ows:Title>Point Cloud Thinning (Simple)</ows:Title>
      <ows:Abstract>This simple thinning tool reduces the number of points in a point cloud by sequential point removal. It is therefore most suited for points stored in chronological order. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.0</ows:Identifier>
      <ows:Title>Point Cloud Cutter</ows:Title>
      <ows:Abstract>This tool allows one to extract subsets from one or several point cloud datasets. The area-of-interest is defined either by bounding box coordinates, the extent of a grid system or a shapes layer, or by polygons of a shapes layer. Note that the latter does not support the inverse selection in case the shapes layer contains more than one polygon.&amp;lt;br/&amp;gt;In case a polygon shapes layer is used and one or more polygons are selected, only the selected polygons are processed.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.7</ows:Identifier>
      <ows:Title>Drop Point Cloud Attributes</ows:Title>
      <ows:Abstract>The tool can be used to drop attributes from a point cloud. In case the output dataset is not set, the attribute(s) will be dropped from the input dataset, i.e. the input dataset will be overwritten.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.12</ows:Identifier>
      <ows:Title>Merge Point Clouds</ows:Title>
      <ows:Abstract>This tool can be used to merge point clouds. The attribute fields of the merged point cloud resemble those of the first point cloud in the input list. In order to merge the attributes of the additional point cloud layers, these must be consistent (field name and type) with the first point cloud in the input list. Missing attribute values are set to no-data. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.11</ows:Identifier>
      <ows:Title>Cluster Analysis for Point Clouds</ows:Title>
      <ows:Abstract>Cluster analysis for point clouds.&amp;lt;br/&amp;gt;This tool is a port of the 'Cluster Analysis for Grids' tool from the 'Imagery - Classification' tool library. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.13</ows:Identifier>
      <ows:Title>Point Cloud from Table</ows:Title>
      <ows:Abstract>This tool allows one to create a point cloud from a table.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.3</ows:Identifier>
      <ows:Title>Point Cloud from Shapes</ows:Title>
      <ows:Abstract>Point Cloud from Shapes</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.10</ows:Identifier>
      <ows:Title>Point Cloud Attribute Calculator</ows:Title>
      <ows:Abstract>The Point Cloud Attribute Calculator calculates a new attribute based on existing attributes and a mathematical formula. Attribute fields are addressed by the character 'f' (for 'field') followed by the field number (i.e.: f1, f2, ..., fn) or by the field name in square brackets (e.g.: [Field Name]).&amp;lt;br/&amp;gt;Examples:&amp;lt;br/&amp;gt;sin(f1) * f2 + f3&amp;lt;br/&amp;gt;[intensity] / 1000&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The following operators are available for the formula definition:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.8</ows:Identifier>
      <ows:Title>Transform Point Cloud</ows:Title>
      <ows:Abstract>The tool can be used to shift, rotate and/or scale a Point Cloud.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.4</ows:Identifier>
      <ows:Title>Point Cloud to Grid</ows:Title>
      <ows:Abstract>Point Cloud to Grid</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pointcloud_tools.2</ows:Identifier>
      <ows:Title>Point Cloud from Grid Points</ows:Title>
      <ows:Abstract>Point Cloud from Grid Points</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus_bsl.1</ows:Identifier>
      <ows:Title>BSL from File</ows:Title>
      <ows:Abstract>BSL from File</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.6</ows:Identifier>
      <ows:Title>Directional Statistics for Single Grid</ows:Title>
      <ows:Abstract>Calculates for each cell statistical properties (arithmetic mean, minimum, maximum, variance, standard deviation) of all cells lying in given direction based on the input grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.5</ows:Identifier>
      <ows:Title>Zonal Grid Statistics</ows:Title>
      <ows:Abstract>The tool calculates zonal statistics and reports these in a table. The tool can be used to create a contingency table of unique condition units (UCUs). These units are delineated from a zonal grid (e.g. sub catchments) and optional categorical grids (e.g. landcover, soil, ...). It is possible to calculate descriptive statistics (n, min, max, mean, standard deviation and sum) for each UCU from optional grids with continious data (e.g. slope; aspect must be handled specially, please use the "Aspect" input parameter for such a grid). The number of input grids is only limited by available memory.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool has four different modes of operation:&amp;lt;br/&amp;gt;(1) only a zonal grid is used as input. This results in a simple contingency table with the number of grid cells in each zone.&amp;lt;br/&amp;gt;(2) a zonal grid and additional categorical grids are used as input. This results in a contingency table with the number of cells in each UCU.&amp;lt;br/&amp;gt;(3) a zonal grid and additional grids with continuous data are used as input. This results in a contingency table with the number of cells in each zone and some simple statistics for each zone. The statistics are calculated for each continuous grid.&amp;lt;br/&amp;gt;(4) a zonal grid, additional categorical grids and additional grids with continuous data are used as input. This results in a contingency table with the number of cells in each UCU and the corresponding statistics for each continuous grid.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Depending on the mode of operation, the output table contains information about the categorical combination of each UCU, the number of cells in each UCU and the statistics for each UCU. A typical output table may look like this:&amp;lt;br/&amp;gt;&amp;lt;table border="1"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;ID Zone&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;ID 1stCat&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;ID 2ndCat&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Count UCU&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;N 1stCont&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;MIN 1stCont&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;MAX 1stCont&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;MEAN 1stCont&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;STDDEV 1stCont&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;SUM 1stCont&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;0      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;2        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;6        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;6        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;6        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;708.5      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;862.0      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;734.5       &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;62.5          &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;4406.8     &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;0      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;3        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;4        &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;106      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;106      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;829.1      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;910.1      &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;848.8       &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;28.5          &amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;89969.0    &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.14</ows:Identifier>
      <ows:Title>Categorical Coincidence</ows:Title>
      <ows:Abstract>Calculates for each cell the categorical coincidence, which can be useful to compare different classifications.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.17</ows:Identifier>
      <ows:Title>Build Statistics for Grids</ows:Title>
      <ows:Abstract>This tool collects cell-wise basic statistical information from the given input grids. The collected statistics can be used as input for the 'Evaluate Statistics for Grids' tool. You can use this tool with the 'Reset' flag set to false (not available in command line mode) or the 'Add Statistics for Grids' tool to successively add statistical information from further grids by subsequent calls. These three tools (build, add, evaluate) have been designed to inspect a large number of grids that could otherwise not be evaluated simultaneously due to memory restrictions. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.9</ows:Identifier>
      <ows:Title>Multi-Band Variation</ows:Title>
      <ows:Abstract>Calculates for each cell the spectral variation based on feature space distances to the centroid for all cells in specified neighbourhood. The average distance has been used for Spectral Variation Hypothesis (SVH).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.0</ows:Identifier>
      <ows:Title>Fast Representativeness</ows:Title>
      <ows:Abstract>Fast Representativeness</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.7</ows:Identifier>
      <ows:Title>Global Moran's I for Grids</ows:Title>
      <ows:Abstract>Global spatial autocorrelation for grids calculated as Moran's I.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.15</ows:Identifier>
      <ows:Title>Focal PCA on a Grid</ows:Title>
      <ows:Abstract>This tool uses the difference in cell values of a center cell and its neighbours (as specified by the kernel) as features for a Principal Component Analysis (PCA). This method has been used by Thomas and Herzfeld (2004) to parameterize the topography for a subsequent regionalization of climate variables with the principal components as predictors in a regression model. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.12</ows:Identifier>
      <ows:Title>Meridional Grid Statistics</ows:Title>
      <ows:Abstract>Meridional Grid Statistics</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.18</ows:Identifier>
      <ows:Title>Evaluate Statistics for Grids</ows:Title>
      <ows:Abstract>Calculates statistical properties (arithmetic mean, range, variance, standard deviation, percentiles) on a cell-wise base. This tool takes input about basic statistical information as it can be collected with the 'Build/Add Statistics for Grids' tools. These three tools (build, add, evaluate) have been designed to inspect a large number of grids that could otherwise not be evaluated simultaneously due to memory restrictions. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.11</ows:Identifier>
      <ows:Title>Longitudinal Grid Statistics</ows:Title>
      <ows:Abstract>Longitudinal Grid Statistics</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.1</ows:Identifier>
      <ows:Title>Residual Analysis (Grid)</ows:Title>
      <ows:Abstract>Relations of each grid cell to its neighborhood. Wilson &amp; Gallant (2000) used this type of calculation in terrain analysis.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.16</ows:Identifier>
      <ows:Title>Statistics for Grids from Files</ows:Title>
      <ows:Abstract>Calculates statistical properties (arithmetic mean, minimum, maximum, variance, standard deviation) for each cell position for the values of the selected grids. This tool works file based to allow the processing of a large number of grids. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.13</ows:Identifier>
      <ows:Title>Save Grid Statistics to Table</ows:Title>
      <ows:Abstract>Calculates statistical properties (arithmetic mean, minimum, maximum, variance, standard deviation) for each of the given grids and saves it to a table.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.3</ows:Identifier>
      <ows:Title>Radius of Variance (Grid)</ows:Title>
      <ows:Abstract>Find the radius within which the cell values exceed the given variance criterium. This tool is closely related to the representativeness calculation (variance within given search radius). For easier usage, the variance criterium is entered as standard deviation value. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.10</ows:Identifier>
      <ows:Title>Inverse Principal Components Rotation</ows:Title>
      <ows:Abstract>Inverse principal components rotation for grids.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.8</ows:Identifier>
      <ows:Title>Principal Component Analysis</ows:Title>
      <ows:Abstract>Principal Component Analysis (PCA) for grids. PCA implementation is based on F.Murtagh's code as provided by the StatLib web site.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.4</ows:Identifier>
      <ows:Title>Statistics for Grids</ows:Title>
      <ows:Abstract>Calculates statistical properties (arithmetic mean, minimum, maximum, variance, standard deviation) for each cell position for the values of the selected grids.&amp;lt;br/&amp;gt;Optionally you can supply a list of grids with weights. If you want to use weights, the number of value and weight grids have to be the same Value and weight grids are associated by their order in the lists. Weight grids have not to share the grid system of the value grids. In case that no weight can be obtained from a weight grid for value, that value will be ignored. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_grid.2</ows:Identifier>
      <ows:Title>Representativeness (Grid)</ows:Title>
      <ows:Abstract>Representativeness - calculation of the variance within a given search radius.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.6</ows:Identifier>
      <ows:Title>Add Coordinates to Points</ows:Title>
      <ows:Abstract>The tool attaches the x- and y-coordinates of each point to the attribute table. For 3D shapefiles, also the z/m-coordinates are reported.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.5</ows:Identifier>
      <ows:Title>Convert Lines to Points</ows:Title>
      <ows:Abstract>Converts lines to points. Optionally inserts additional points in user-defined distances. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.21</ows:Identifier>
      <ows:Title>Create Random Points</ows:Title>
      <ows:Abstract>Create a layer with randomly distributed points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.14</ows:Identifier>
      <ows:Title>Points Thinning</ows:Title>
      <ows:Abstract>Points Thinning.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.17</ows:Identifier>
      <ows:Title>Aggregate Point Observations</ows:Title>
      <ows:Abstract>Aggregate Point Observations</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.9</ows:Identifier>
      <ows:Title>Separate points by direction</ows:Title>
      <ows:Abstract>Separates points by direction. Direction is determined as average direction of three consecutive points A, B, C. If the angle between the directions of A-B and B-C is higher than given tolerance angle the point is dropped. This tool has been designed to separate GPS tracks recorded by tractors while preparing a field. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.0</ows:Identifier>
      <ows:Title>Convert Table to Points</ows:Title>
      <ows:Abstract>Create Point Theme From Table</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.7</ows:Identifier>
      <ows:Title>Remove Duplicate Points</ows:Title>
      <ows:Abstract>Removes duplicate points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.15</ows:Identifier>
      <ows:Title>Convert Multipoints to Points</ows:Title>
      <ows:Abstract>Converts multipoints to points. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.12</ows:Identifier>
      <ows:Title>Convex Hull</ows:Title>
      <ows:Abstract>Implementation of 'Andrew's Monotone Chain Algorithm' for convex hull construction. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.18</ows:Identifier>
      <ows:Title>Snap Points to Points</ows:Title>
      <ows:Abstract>Snap Points to Points</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.11</ows:Identifier>
      <ows:Title>Points Filter</ows:Title>
      <ows:Abstract>Points Filter</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.16</ows:Identifier>
      <ows:Title>Thiessen Polygons</ows:Title>
      <ows:Abstract>Creates Thiessen or Voronoi polygons for given point data set.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.20</ows:Identifier>
      <ows:Title>Snap Points to Grid</ows:Title>
      <ows:Abstract>Moves all points to grid cell positions that have the highest orlowest value respectively within the given search distance around each point.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.19</ows:Identifier>
      <ows:Title>Snap Points to Lines</ows:Title>
      <ows:Abstract>Snap Points to Lines</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.3</ows:Identifier>
      <ows:Title>Point Distances</ows:Title>
      <ows:Abstract>Computes distances between pairs of points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.10</ows:Identifier>
      <ows:Title>Add Polygon Attributes to Points</ows:Title>
      <ows:Abstract>Spatial join for points. Retrieves for each point the selected attributes from those polygon, which contain the point. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.8</ows:Identifier>
      <ows:Title>Clip Points with Polygons</ows:Title>
      <ows:Abstract>Clip Points with Polygons</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.4</ows:Identifier>
      <ows:Title>Populate Polygons with Points</ows:Title>
      <ows:Abstract>For each selected polygon of the input layer or for all polygons, if none is selected, a multi-point record is created with evenly distributed points trying to meet the specified number of points per polygon. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_points.2</ows:Identifier>
      <ows:Title>Create Point Grid</ows:Title>
      <ows:Abstract>Creates a regular grid of points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_georeference.6</ows:Identifier>
      <ows:Title>World File from Flight and Camera Settings</ows:Title>
      <ows:Abstract>Creates a world file (RST = rotation, scaling, translation) for georeferencing images by direct georeferencing. Direct georeferencing uses extrinsic (position, attitude) and intrinsic (focal length, physical pixel size) camera parameters.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Baumker, M. / Heimes, F.J. (2001): New Calibration and Computing Method for Direct Georeferencing of Image and Scanner Data Using the Position and Angular Data of an Hybrid Inertial Navigation System. OEEPE Workshop, Integrated Sensor Orientation, Hannover 2001. &amp;lt;a target="_blank" href="http://www.hochschule-bochum.de/fileadmin/media/fb_v/veroeffentlichungen/baeumker/baheimesoeepe.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_georeference.5</ows:Identifier>
      <ows:Title>Define Georeference for Grids</ows:Title>
      <ows:Abstract>This tool simply allows definition of grid's cellsize and position. It does not perform any kind of warping but might be helpful, if the grid has lost this information or is already aligned with the coordinate system. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_georeference.4</ows:Identifier>
      <ows:Title>Direct Georeferencing of Airborne Photographs</ows:Title>
      <ows:Abstract>Direct georeferencing of aerial photographs uses extrinsic (position, attitude) and intrinsic (focal length, physical pixel size) camera parameters. Orthorectification routine supports additional data from a Digital Elevation Model (DEM).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Baumker, M. / Heimes, F.J. (2001): New Calibration and Computing Method for Direct Georeferencing of Image and Scanner Data Using the Position and Angular Data of an Hybrid Inertial Navigation System. OEEPE Workshop, Integrated Sensor Orientation, Hannover 2001. &amp;lt;a target="_blank" href="http://www.hochschule-bochum.de/fileadmin/media/fb_v/veroeffentlichungen/baeumker/baheimesoeepe.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.pj_georeference.2</ows:Identifier>
      <ows:Title>Warping Shapes</ows:Title>
      <ows:Abstract>Georeferencing of shapes layers. Either choose the attribute fields (x/y) with the projected coordinates for the reference points (origin) or supply a additional points layer with correspondend points in the target projection. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.6</ows:Identifier>
      <ows:Title>Split Lines with Lines</ows:Title>
      <ows:Abstract>Split Lines with Lines.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.5</ows:Identifier>
      <ows:Title>Line Dissolve</ows:Title>
      <ows:Abstract>Dissolves line shapes, which share the same attribute value(s).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.9</ows:Identifier>
      <ows:Title>Line Crossings</ows:Title>
      <ows:Abstract>Line Crossings</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.0</ows:Identifier>
      <ows:Title>Convert Polygons to Lines</ows:Title>
      <ows:Abstract>Convert polygons to lines.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.7</ows:Identifier>
      <ows:Title>Line Smoothing</ows:Title>
      <ows:Abstract>The tool provides methods for line smoothing including iterative averaging (SIA) and Gaussian filtering.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Iterative averaging (SIA) is described by Mansouryar &amp; Hedayati (2012). A higher smoothing sensitivity results in a stronger smoothing in less iterations and vice versa. The 'improved SIA model' simply applies a preservation factor in the first iteration and then runs the 'basic SIA model' for the following iterations.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Gaussian filtering with shrinkage correction is described by Lowe (1989).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In case the density of line vertices is too high, the 'Line Simplification' tool can be applied first. If the density of line vertices is too low, additional vertices can be inserted by applying the 'Convert Lines to Points' and the 'Convert Points to Line(s)' tools prior to smoothing.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Lowe, D. (1989): Organization of Smooth Image Curves at Multiple Scales. International Journal of Computer Vision, 3: 119-130. (&amp;lt;a target="_blank" href="http://www.cs.ubc.ca/~lowe/papers/iccv88.pdf"&amp;gt;pdf&amp;lt;/a&amp;gt;)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Mansouryar, M. &amp; Hedayati, A. (2012): Smoothing Via Iterative Averaging (SIA) - A Basic Technique for Line Smoothing. International Journal of Computer and Electrical Engineering Vol. 4, No. 3: 307-311. (&amp;lt;a target="_blank" href="http://www.ijcee.org/papers/501-P063.pdf"&amp;gt;pdf&amp;lt;/a&amp;gt;)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.1</ows:Identifier>
      <ows:Title>Convert Points to Line(s)</ows:Title>
      <ows:Abstract>Converts points to line(s).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.3</ows:Identifier>
      <ows:Title>Line-Polygon Intersection</ows:Title>
      <ows:Abstract>Line-polygon intersection.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.8</ows:Identifier>
      <ows:Title>Split Lines at Points</ows:Title>
      <ows:Abstract>Split Lines at Points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.4</ows:Identifier>
      <ows:Title>Line Simplification</ows:Title>
      <ows:Abstract>Line simplification implementing the Ramer-Douglas-Peucker algorithm.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Refererences:&amp;lt;br/&amp;gt;- Ramer, U. (1972): An iterative procedure for the polygonal approximation of plane curves. Computer Graphics and Image Processing, 1(3), 244-256&amp;lt;br/&amp;gt;- Douglas, D., Peucker, T. (1973): Algorithms for the reduction of the number of points required to represent a digitized line or its caricature. The Canadian Cartographer 10(2), 112-122&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Polyline Reduction source code at &amp;lt;a target="_blank" href="http://mappinghacks.com/code/PolyLineReduction/"&amp;gt;mappinghacks.com&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_lines.2</ows:Identifier>
      <ows:Title>Line Properties</ows:Title>
      <ows:Abstract>Line properties: length, number of vertices.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.6</ows:Identifier>
      <ows:Title>07: Extended neighbourhoods - catchment areas (trace flow)</ows:Title>
      <ows:Abstract>Extended Neighbourhoods - Catchment areas.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.5</ows:Identifier>
      <ows:Title>06: Extended neighbourhoods</ows:Title>
      <ows:Abstract>Extended neigbourhoods for grids.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.9</ows:Identifier>
      <ows:Title>10: Dynamic Simulation - Life</ows:Title>
      <ows:Abstract>Conway's game of life. A cellular automate.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.0</ows:Identifier>
      <ows:Title>01: My first tool</ows:Title>
      <ows:Abstract>(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.7</ows:Identifier>
      <ows:Title>08: Extended neighbourhoods - catchment areas (parallel)</ows:Title>
      <ows:Abstract>Extended Neighbourhoods - Catchment areas.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.12</ows:Identifier>
      <ows:Title>13: Reprojecting a shapes layer</ows:Title>
      <ows:Abstract>Copy a shapes layer and move it to a new position.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.11</ows:Identifier>
      <ows:Title>12: First steps with shapes</ows:Title>
      <ows:Abstract>Copy a shapes layer and move it to a new position.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.1</ows:Identifier>
      <ows:Title>02: Pixel by pixel operations with two grids</ows:Title>
      <ows:Abstract>Pixel by pixel operations with two grids.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.13</ows:Identifier>
      <ows:Title>14: Vectorising channel lines</ows:Title>
      <ows:Abstract>Vectorising channel lines.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.3</ows:Identifier>
      <ows:Title>04: Direct neighbours - more...</ows:Title>
      <ows:Abstract>Simple neighbourhood analysis for grid cells.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.10</ows:Identifier>
      <ows:Title>11: Dynamic Simulation - Soil Nitrogen Dynamics</ows:Title>
      <ows:Abstract>Spatially Distributed Simulation of Soil Nitrogen Dynamics. &amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Hugget, R.J. (1993): 'Modelling the Human Impact on Nature', Oxford University Press.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.8</ows:Identifier>
      <ows:Title>09: Extended neighbourhoods - catchment areas (recursive)</ows:Title>
      <ows:Abstract>Extended Neighbourhoods - Use recursive function calls for catchment area calculations.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.4</ows:Identifier>
      <ows:Title>05: Direct neighbours - slope and aspect</ows:Title>
      <ows:Abstract>Simple neighbourhood analysis for grid cells.&amp;lt;br/&amp;gt;- Zevenbergen, L.W. / Thorne, C.R. (1987):&amp;lt;br/&amp;gt;    'Quantitative analysis of land surface topography',&amp;lt;br/&amp;gt;    Earth Surface Processes and Landforms, 12: 47-56.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_learn_to_program.2</ows:Identifier>
      <ows:Title>03: Direct neighbours</ows:Title>
      <ows:Abstract>Simple neighbourhood analysis for grid cells.&amp;lt;br/&amp;gt;(c) 2003 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.6</ows:Identifier>
      <ows:Title>Close One Cell Gaps</ows:Title>
      <ows:Abstract>Closes one cell gaps using the arithmetic mean, median, majority or minority value of the surrounding cell values. If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.5</ows:Identifier>
      <ows:Title>Patching</ows:Title>
      <ows:Abstract>Fill gaps of a grid with data from another grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.21</ows:Identifier>
      <ows:Title>Grid Cell Index</ows:Title>
      <ows:Abstract>Creates an index grid according to the cell values either in ascending or descending order.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.24</ows:Identifier>
      <ows:Title>Grid Masking</ows:Title>
      <ows:Abstract>Cells of the input grid will be set to no-data, if their cell center lies outside or within a no-data cell of the mask grid.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.33</ows:Identifier>
      <ows:Title>Copy Grid</ows:Title>
      <ows:Abstract>Copy a grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.22</ows:Identifier>
      <ows:Title>Grids from classified grid and table</ows:Title>
      <ows:Abstract>Creates several grids using a classified grid and a table with data values for each class.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.28</ows:Identifier>
      <ows:Title>Shrink and Expand</ows:Title>
      <ows:Abstract>Regions with valid data in the input grid can be shrunk or expanded by a certain amount (radius). Shrinking just sets the border of regions with valid data to NoData, expanding sets NoData cells along the border of regions with valid data to a new valid value, computed by the method selected (min, max, mean, majority).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.29</ows:Identifier>
      <ows:Title>Close Gaps with Stepwise Resampling</ows:Title>
      <ows:Abstract>Close gaps of a grid data set (i.e. eliminate no data values). If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.39</ows:Identifier>
      <ows:Title>Change Grid Values - Flood Fill</ows:Title>
      <ows:Abstract>A flood fill algorithm will be used for replacement of grid cell values starting at the positions of the input points. If one or more points are selected, only these will be processed, otherwise all. If the target grid is not set, the changes will be applied to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.17</ows:Identifier>
      <ows:Title>Crop to Data</ows:Title>
      <ows:Abstract>Crop grids to valid data cells</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.25</ows:Identifier>
      <ows:Title>Close Gaps with Spline</ows:Title>
      <ows:Abstract>Close Gaps with Spline</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.9</ows:Identifier>
      <ows:Title>Threshold Buffer</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Threshold Buffer Creation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.0</ows:Identifier>
      <ows:Title>Resampling</ows:Title>
      <ows:Abstract>Resampling of grids.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.7</ows:Identifier>
      <ows:Title>Close Gaps</ows:Title>
      <ows:Abstract>Close gaps of a grid data set (i.e. eliminate no data values). If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.15</ows:Identifier>
      <ows:Title>Reclassify Grid Values</ows:Title>
      <ows:Abstract>The tool can be used to reclassify the values of a grid. It provides three different options:&amp;lt;br/&amp;gt;(a) reclassification of single values&amp;lt;br/&amp;gt;(b) reclassification of a range of values&amp;lt;br/&amp;gt;(c) reclassification of value ranges specified in a lookup table&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In addition to these methods, two special cases (NoData values and values not included in the reclassification setup) are supported.&amp;lt;br/&amp;gt;With reclassification mode (a) and (b), the 'NoData option' is evaluated before the 'Method' settings. In reclassification mode (c) the option is evaluated only if the NoData value is not included in the lookup table.&amp;lt;br/&amp;gt;The 'other values' option is always evaluated after checking the 'Method' settings.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool allows one to define the NoData value of the output grid (header): by default, the output grid gets assigned the NoData value of the input grid. But it is also possible to assign a user defined NoData value.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.26</ows:Identifier>
      <ows:Title>Proximity Grid</ows:Title>
      <ows:Abstract>Calculates a grid with euclidean distance to feature cells (not no-data cells).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.12</ows:Identifier>
      <ows:Title>Change Grid Values</ows:Title>
      <ows:Abstract>Changes values of a grid according to the rules of a user defined lookup table. Values or value ranges that are not listed in the lookup table remain unchanged. If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.18</ows:Identifier>
      <ows:Title>Invert Data/No-Data</ows:Title>
      <ows:Abstract>Converts valid data cells to no-data cells and no-data cells to the user specified value. Mostly suitable when dealing with masks.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.37</ows:Identifier>
      <ows:Title>Combine Classes</ows:Title>
      <ows:Abstract>Based on the look-up table classfication of a grid, this tool allows to change and combine class belongings of the cells. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.11</ows:Identifier>
      <ows:Title>Change Data Storage</ows:Title>
      <ows:Abstract>Changes a grid's data storage type, offset and scaling, e.g. from 4 byte floating point to 2 byte signed integer. This might be useful to increase precision or to save memory. If the target is not set, the original grid's storage type will be changed.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.1</ows:Identifier>
      <ows:Title>Aggregate</ows:Title>
      <ows:Abstract>Resamples a raster layer to a lower resolution, aggregatingthe values of a group of cells. This should be used in any case in which a normalresampling will result in wrong values in the resulting layer, such as, for instance,the number of elements of a given class in each cell.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.30</ows:Identifier>
      <ows:Title>Transpose Grids</ows:Title>
      <ows:Abstract>Transpose Grids</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.31</ows:Identifier>
      <ows:Title>Clip Grids</ows:Title>
      <ows:Abstract>Clip selected grids to specified extent.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.23</ows:Identifier>
      <ows:Title>Create Grid System</ows:Title>
      <ows:Abstract>This tool creates a new user specified Grid System for use with other tools.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;First of all, please consider the following issues before using the tool:&amp;lt;br/&amp;gt;(a) all calculations of the tool refer to the lower left corner of the grid system, i.e. the xMin and yMin values. This coordinate is fixed unless you specify an offset.&amp;lt;br/&amp;gt;(b) the tool follows the philosophy of SAGA in that the values describing the extent refer to the cell centers. If you like to match the extent with the border of a grid, use an offset.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool provides four possibilities to set/determine the extent of the grid system:&amp;lt;br/&amp;gt;(1) by specifying the coordinate of the lower left cell (xMin, yMin) and the number of cells in W-E (NX) and S-N (NY) direction&amp;lt;br/&amp;gt;(2) by specifying the coordinates the of lower left (xMin, yMin) and the upper right (xMax, yMax) cell&amp;lt;br/&amp;gt;(3) by the extent of the shape(s) provided in the Data Objects section&amp;lt;br/&amp;gt;(4) by the extent of the grid(s) provided in the Data Objects section&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;After selecting the appropriate method to determine the extent, the next step is to specify the Cellsize of the new grid system.&amp;lt;br/&amp;gt;For all methods supplied to determine the extent but number (1), three possibilities are provided to adjust Cellsize and grid system extent (please remember, the lower left corner is fixed!):&amp;lt;br/&amp;gt;(I) adjust the extent to match the Cellsize&amp;lt;br/&amp;gt;(II) adjust the Cellsize to match the extent in E-W direction&amp;lt;br/&amp;gt;(III) adjust the Cellsize to match the extent in S-N direction&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Finally it is possible to apply an offset to the lower left corner of the grid system. In this case check the Use Offset option and specify the offset in W-E and S-N direction. Positive values result in a shift in E/N, negative in W/S direction.&amp;lt;br/&amp;gt;In order to create the grid system the tool needs to create a dummy grid.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.35</ows:Identifier>
      <ows:Title>Mirror Grid</ows:Title>
      <ows:Abstract>Mirror a grid at its center axes', either vertically, horizontally or both. If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.27</ows:Identifier>
      <ows:Title>Tiling</ows:Title>
      <ows:Abstract>Tiling</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.20</ows:Identifier>
      <ows:Title>Combine Grids</ows:Title>
      <ows:Abstract>(c) 2005 by Victor Olaya.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.3</ows:Identifier>
      <ows:Title>Mosaicking</ows:Title>
      <ows:Abstract>The tool allows one to merge multiple grids into one single grid. This involves resampling if the input grids have different cell sizes or are not aligned to each other. Besides different resampling methods, the tool provides several options on how to handle overlapping areas. It is also possible to apply a histogram matching. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In order to be able to also merge a large amount of grids, which, for example, would exceed the maximum command line length, the tools has the option to provide a file list as input (instead of using the input grid list). This is a text file with the full path to an input grid on each line. Please note the limitiations: (i) the target grid system is set automatically in this case (the extent is calculated from all inputs and the cell size is set to the smallest one detected) and (ii) the input grids must still fit into memory, i.e. are all loaded at once.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.34</ows:Identifier>
      <ows:Title>Invert Grid</ows:Title>
      <ows:Abstract>Invert a grid, i.e. the highest value becomes the lowest and vice versa. If the target is not set, the changes will be stored to the original grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.32</ows:Identifier>
      <ows:Title>Select Grid from List</ows:Title>
      <ows:Abstract>Main use of this tool is to support tool chain development, allowing to pick a single grid from a grid list. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.10</ows:Identifier>
      <ows:Title>Grid Proximity Buffer</ows:Title>
      <ows:Abstract>This tool calculates the euclidian distance within a buffer distance from all NoData cells to the nearest valid neighbour in a source grid. Additionally, the source cells define the zones that will be used in the euclidean allocation calculations. Cell values in the source grid are treated as IDs (integer) and used in the allocation grid to identify the grid value of the closest source cell. If a cell is at an equal distance to two or more sources, the cell is assigned to the source that is first encountered in the tools scanning process. The buffer grid is a reclassification of the distance grid using a user specified equidistance to create a set of discrete distance buffers from source features. The buffer zones are coded with the maximum distance value of the corresponding buffer interval. The output value type for the distance grid is floating-point. The output values for the allocation and buffer grid are of type integer. The duration of tool execution is dependent on the number of source cells and the buffer distance.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.8</ows:Identifier>
      <ows:Title>Grid Buffer</ows:Title>
      <ows:Abstract>This tool creates buffers around features in a grid. Features are defined by any value greater than zero. With the buffer distance method 'cell's value', the feature grid's cell values are used as buffer distance. In any case the buffer distance has to be specified using map units. The output buffer grid cell values refer to 1 := inside the buffer, 2 := feature location. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.4</ows:Identifier>
      <ows:Title>Constant Grid</ows:Title>
      <ows:Abstract>Constant grid creation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_tools.38</ows:Identifier>
      <ows:Title>Mosaicking (Grid Collections)</ows:Title>
      <ows:Abstract>Merges multiple grid collections into one single grid collection. Input grid collections have to share the same number of grid levels. Attributes and other general properties will be inherited from the first grid collection in input list. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.6</ows:Identifier>
      <ows:Title>Majority/Minority Filter</ows:Title>
      <ows:Abstract>Majority filter for grids.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.5</ows:Identifier>
      <ows:Title>Filter Clumps</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Filter Clumps</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.14</ows:Identifier>
      <ows:Title>Connectivity Analysis</ows:Title>
      <ows:Abstract>Connectivity analysis of a binary input image according to &amp;lt;br/&amp;gt;Burger, W., Burge, M.: Digitale Bildverarbeitung. Springer Verlag 2006, p.208.&amp;lt;br/&amp;gt;Output consists in a symbolic image of the connected foreground regions and a shape of the borders of the foreground regions (outer and inner borders). The shape may contain alternatively the centers or the corners of the border pixels. Optionally, the regions which have contact with the image borders can be removed together with their border shapes. &amp;lt;br/&amp;gt;In addition, an optional morphological filter (erosion-binary reconstruction) can be applied to the input image first. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.17</ows:Identifier>
      <ows:Title>Wombling for Multiple Features (Edge Detection)</ows:Title>
      <ows:Abstract>Continuous Wombling for edge detection. Uses magnitude of gradient to detect edges between adjacent cells. Edge segments connect such edges, when the difference of their gradient directions is below given threshold.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.9</ows:Identifier>
      <ows:Title>Rank Filter</ows:Title>
      <ows:Abstract>Rank filter for grids. Set rank to fifty percent to apply a median filter.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.0</ows:Identifier>
      <ows:Title>Simple Filter</ows:Title>
      <ows:Abstract>Simple standard filters for grids.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.7</ows:Identifier>
      <ows:Title>DTM Filter (slope-based)</ows:Title>
      <ows:Abstract>The tool can be used to filter a digital surface model (DSM), i.e. to classify its cells into bare earth and object cells (ground and nonground cells).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool uses concepts described by VOSSELMAN (2000) and is based on the assumption that a large height difference between two nearby cells is unlikely to be caused by a steep slope in the terrain. The probability that the higher cell could be a ground point decreases if the distance between the two cells decreases. Therefore the filter defines the acceptable height difference between two cells as a function of the distance between the cells. A cell is classified as terrain if there is no other cell within the kernel search radius such that the height difference between these cells is larger than the allowed maximum height difference at the distance between these cells.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The approximate terrain slope parameter is used to modify the filter function to match the overall slope in the study area. A confidence interval may be used to reject outliers.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;VOSSELMAN, G. (2000): Slope based filtering of laser altimetry data. IAPRS, Vol. XXXIII, Part B3, Amsterdam, The Netherlands. pp. 935-942&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.15</ows:Identifier>
      <ows:Title>Sieve Classes</ows:Title>
      <ows:Abstract>The 'Sieve Classes' tool counts the number of adjacent cells sharing the same value (the class identifier). Areas that are formed by less cells than specified by the treshold will be removed (sieved), i.e. they are set to no-data. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.12</ows:Identifier>
      <ows:Title>Geodesic Morphological Reconstruction</ows:Title>
      <ows:Abstract>Geodesic morphological reconstruction according to &amp;lt;br/&amp;gt;L. Vincent (1993): Morphological Grayscale Reconstruction in Image Analysis: Applications and Efficient Algorithms. IEEE Transactions on Image Processing, Vol. 2, No 2&amp;lt;br/&amp;gt;Here we use the algorithm on p. 194: Computing of Regional Maxima and Breadth-first Scanning.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;A marker is derived from the input image INPUT_GRID by subtracting a constant SHIFT_VALUE. Optionally the SHIFT_VALUE can be set to zero at the border of the grid ("Preserve 1px border Yes/No"). OUTPUT_GRID is the difference between the input image and the morphological reconstruction of the marker under the input image as mask. If the Option "Create a binary mask" is selected, the OUTPUT_GRID is thresholded with THRESHOLD, creating a binary image of maxima regions.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.18</ows:Identifier>
      <ows:Title>Simple Filter (Restricted to Polygons)</ows:Title>
      <ows:Abstract>Simple standard filters for grids, evaluation within polygons.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.11</ows:Identifier>
      <ows:Title>Resampling Filter</ows:Title>
      <ows:Abstract>Resampling filter for grids. Resamples in a first step the given grid to desired resampling cell size, expressed as multiple of the original cell size (scale factor). This is an up-scaling through which cell values are aggregated as cell area weighted means. Second step is the down-scaling to original cell size using spline interpolation. Specially for larger search distances this is a comparably fast alternative for simple low and high pass filter operations. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.1</ows:Identifier>
      <ows:Title>Gaussian Filter</ows:Title>
      <ows:Abstract>The Gaussian filter is a smoothing operator that is used to 'blur' or 'soften' data and to remove detail and noise. The degree of smoothing is determined by the standard deviation. For higher standard deviations you need to use a larger search radius.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.16</ows:Identifier>
      <ows:Title>Wombling (Edge Detection)</ows:Title>
      <ows:Abstract>Continuous Wombling for edge detection. Uses magnitude of gradient to detect edges between adjacent cells. Edge segments connect such edges, when the difference of their gradient directions is below given threshold.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.13</ows:Identifier>
      <ows:Title>Binary Erosion-Reconstruction</ows:Title>
      <ows:Abstract>Common binary Opening does not guarantee, that foreground regions which outlast the erosion step are reconstructed to their original shape in the dilation step. Depending on the application, that might be considered as a deficiency. Therefore this tool provides a combination of erosion with the binary Geodesic Morphological Reconstruction, see &amp;lt;br/&amp;gt;L. Vincent (1993): Morphological Grayscale Reconstruction in Image Analysis: Applications and Efficient Algorithms. IEEE Transactions on Image Processing, Vol. 2, No 2&amp;lt;br/&amp;gt;Here we use the algorithm on p. 194: Breadth-first Scanning.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The marker is defined as the eroded INPUT_GRID, whereas the mask is just the INPUT_GRID itself. OUTPUT_GRID is the reconstruction of the marker under the mask.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.3</ows:Identifier>
      <ows:Title>Multi Direction Lee Filter</ows:Title>
      <ows:Abstract>The tool searches for the minimum variance within 16 directions and applies a Lee Filter in the direction of minimum variance. The filter is edge-preserving and can be used to remove speckle noise from SAR images or to smooth DTMs. Applied to DTMs, this filter will preserve slope breaks and narrow valleys.&amp;lt;br/&amp;gt;For more details, please refer to the references. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.10</ows:Identifier>
      <ows:Title>Mesh Denoise</ows:Title>
      <ows:Abstract>Mesh denoising for grids, using the algorithm of Sun et al. (2007).&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Cardiff University: Filtering and Processing of Irregular Meshes with Uncertainties. &amp;lt;a target="_blank" href="http://www.cs.cf.ac.uk/meshfiltering/"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;Stevenson, J.A., Sun, X., Mitchell, N.C. (2010): Despeckling SRTM and other topographic data with a denoising algorithm, Geomorphology, Vol.114, No.3, pp.238-252.&amp;lt;br/&amp;gt;Sun, X., Rosin, P.L., Martin, R.R., Langbein, F.C. (2007): Fast and effective feature-preserving mesh denoising. IEEE Transactions on Visualization and Computer Graphics, Vol.13, No.5, pp.925-938.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.8</ows:Identifier>
      <ows:Title>Morphological Filter</ows:Title>
      <ows:Abstract>Morphological filter for grids. Dilation returns the maximum and erosion the minimum value found in a cell's neighbourhood as defined by the kernel. Opening applies first an erosion followed by a dilation and closing is a dilation followed by an erosion. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.4</ows:Identifier>
      <ows:Title>User Defined Filter</ows:Title>
      <ows:Abstract>User defined filter matrix. The filter can be chosen from loaded tables. If not specified a fixed table with 3 rows (and 3 columns) will be used. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_filter.2</ows:Identifier>
      <ows:Title>Laplacian Filter</ows:Title>
      <ows:Abstract>Other Common Names: Laplacian, Laplacian of Gaussian, LoG, Marr Filter&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Standard kernel 1 (3x3):&amp;lt;br/&amp;gt; 0 | -1 |  0&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt;-1 |  4 | -1&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt; 0 | -1 |  0&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Standard kernel 2 (3x3):&amp;lt;br/&amp;gt;-1 | -1 | -1&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt;-1 |  8 | -1&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt;-1 | -1 | -1&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Standard kernel 3 (3x3):&amp;lt;br/&amp;gt;-1 | -2 | -1&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt;-2 | 12 | -2&amp;lt;br/&amp;gt;-- + -- + --&amp;lt;br/&amp;gt;-1 | -2 | -1&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.6</ows:Identifier>
      <ows:Title>Concentration</ows:Title>
      <ows:Abstract>Cellular automata are simple computational operators, but despite their simplicity, they allow the simulation of highly complex processes. This tool has been created to apply the concept of cellular automata to simulate diffusion and flow processes in shallow water bodies with in- and outflow, where monitoring data show concentration growth or decrease between the inflow and the outflow points. Parameters are for example nutrients like nitrate, which is reduced by denitrification process inside the water body.&amp;lt;br/&amp;gt;Values of mask grid are expected to be 1 for water area, 2 for inlet, 3 for outlet and 0 for non water.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Heinrich, R. / Conrad, O. (2008): Diffusion, Flow and Concentration Gradient Simulation with SAGA GIS using Cellular Automata Methods. In: Boehner, J. / Blaschke, T. / Montanarella, L. [Eds.]: SAGA - Seconds Out. Hamburger Beitraege zur Physischen Geographie und Landschaftsoekologie, Vol.19, p59-70, &amp;lt;a href="http://downloads.sourceforge.net/saga-gis/hbpl19_07.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.5</ows:Identifier>
      <ows:Title>Surface and Gradient</ows:Title>
      <ows:Abstract>Cellular automata are simple computational operators, but despite their simplicity, they allow the simulation of highly complex processes. This tool has been created to apply the concept of cellular automata to simulate diffusion and flow processes in shallow water bodies with in- and outflow, where monitoring data show concentration growth or decrease between the inflow and the outflow points. Parameters are for example nutrients like nitrate, which is reduced by denitrification process inside the water body.&amp;lt;br/&amp;gt;Values of mask grid are expected to be 1 for water area, 2 for inlet, 3 for outlet and 0 for non water.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Heinrich, R. / Conrad, O. (2008): Diffusion, Flow and Concentration Gradient Simulation with SAGA GIS using Cellular Automata Methods. In: Boehner, J. / Blaschke, T. / Montanarella, L. [Eds.]: SAGA - Seconds Out. Hamburger Beitraege zur Physischen Geographie und Landschaftsoekologie, Vol.19, p59-70, &amp;lt;a href="http://downloads.sourceforge.net/saga-gis/hbpl19_07.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.0</ows:Identifier>
      <ows:Title>Soil Moisture Content</ows:Title>
      <ows:Abstract>The WEELS (Wind Erosion on European Light Soils) soil moisture model dynamically calculates the soil moisture based on the rules proposed by the DVWK (1996) with input data about:&amp;lt;br/&amp;gt;- soil properties (grids: field capacity and permanent wilting point)&amp;lt;br/&amp;gt;- land use (grid: crop types)&amp;lt;br/&amp;gt;- climate (table: daily values of precipitation, temperature, air humidity)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- DVWK - Deutscher Verband fuer Wasserwirtschaft und Kulturbau e.V. (1996): 'Ermittlung der Verdunstung von Land- und Wasserflaechen', DVWK Merkblaetter 238/1996, Bonn, 135p.&amp;lt;br/&amp;gt;- Boehner, J., Schaefer, W., Conrad, O., Gross, J., Ringeler, A. (2001): 'The WEELS Model: methods, results and limits of wind erosion modelling', In: Catena, Special Issue&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.7</ows:Identifier>
      <ows:Title>Surface, Gradient and Concentration</ows:Title>
      <ows:Abstract>Cellular automata are simple computational operators, but despite their simplicity, they allow the simulation of highly complex processes. This tool has been created to apply the concept of cellular automata to simulate diffusion and flow processes in shallow water bodies with in- and outflow, where monitoring data show concentration growth or decrease between the inflow and the outflow points. Parameters are for example nutrients like nitrate, which is reduced by denitrification process inside the water body.&amp;lt;br/&amp;gt;Values of mask grid are expected to be 1 for water area, 2 for inlet, 3 for outlet and 0 for non water.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Heinrich, R. / Conrad, O. (2008): Diffusion, Flow and Concentration Gradient Simulation with SAGA GIS using Cellular Automata Methods. In: Boehner, J. / Blaschke, T. / Montanarella, L. [Eds.]: SAGA - Seconds Out. Hamburger Beitraege zur Physischen Geographie und Landschaftsoekologie, Vol.19, p59-70, &amp;lt;a href="http://downloads.sourceforge.net/saga-gis/hbpl19_07.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.1</ows:Identifier>
      <ows:Title>Kinematic Wave Overland Flow</ows:Title>
      <ows:Abstract>This is a simple tool that simulates overland flow with a kinematic wave approach. It is not designed for operational usage. Rather it should give an idea about some principles of dynamic simulation techniques and thus it might become a starting point for more sophisticated and applicable simulation tools. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.3</ows:Identifier>
      <ows:Title>Water Retention Capacity</ows:Title>
      <ows:Abstract>Water Retention Capacity. Plot hole input data must provide five attributes for each soil horizon in the following order and meaning:&amp;lt;br/&amp;gt;horizon depth, TF, L, Ar, Mo.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.4</ows:Identifier>
      <ows:Title>Diffuse Pollution Risk</ows:Title>
      <ows:Abstract>Diffuse Pollution Risk Mapping.&amp;lt;br/&amp;gt;This tool tries to reproduce in parts the methodology of the &amp;lt;a target="_blank" href="http://www.scimap.org.uk/"&amp;gt;SCIMAP - Diffuse Pollution Risk Mapping - Framework&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Lane, S.N.; Brookes, C.J.; Kirkby, M.J.; Holden, J. (2004): A network-index-based version of TOPMODEL for use with high-resolution digital topographic data. In: Hydrological processes. Vol. 18, S. 191-201.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Milledge, D.G.; Lane, N.S.; Heathwait, A.L.; Reaney, S.M. (2012): A monte carlo approach to the invers problem of diffuse pollution risk in agricultural catchments. In: Science of the Total Environment. Vol. 433, S. 434-449.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_hydrology.2</ows:Identifier>
      <ows:Title>TOPMODEL</ows:Title>
      <ows:Abstract>Simple Subcatchment Version of TOPMODEL&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Based on the 'TOPMODEL demonstration program v95.02' by Keith Beven (Centre for Research on Environmental Systems and Statistics, Institute of Environmental and Biological Sciences, Lancaster University, Lancaster LA1 4YQ, UK) and the C translation of the Fortran source codes implemented in GRASS.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;This program allows single or multiple subcatchment calculations but with single average rainfall and potential evapotranspiration inputs to the whole catchment.  Subcatchment discharges are routed to the catchment outlet using a linear routing algorithm with constant main channel velocity and internal subcatchment routing velocity.  The program requires ln(a/tanB) distributions for each subcatchment.  These may be calculated using the GRIDATB program which requires raster elevation data as input. It is recommended that those data should be 50 m resolution or better.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;NOTE that TOPMODEL is not intended to be a traditional model package but is more a collection of concepts that can be used **** where appropriate ****. It is up to the user to verify that the assumptions are appropriate (see discussion in Beven et al.(1994).   This version of the model  will be best suited to catchments with shallow soils and moderate topography which do not suffer from excessively long dry periods.  Ideally predicted contributing areas should be checked against what actually happens in the catchment.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;It includes infiltration excess calculations and parameters based on the exponential conductivity Green-Ampt model of Beven (HSJ, 1984) but if infiltration excess does occur it does so over whole area of a subcatchment.  Spatial variability in conductivities can however be handled by specifying Ko parameter values for different subcatchments, even if they have the same ln(a/tanB) and routing parameters, ie. to represent different parts of the area.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Note that time step calculations are explicit ie. SBAR at start of time step is used to determine contributing area. Thus with long (daily) time steps contributing area depends on initial value together with any volume filling effect of daily inputs.  Also baseflow at start of time step is used to update SBAR at end of time step.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References&amp;lt;br/&amp;gt;- Beven, K., Kirkby, M.J., Schofield, N., Tagg, A.F. (1984):   Testing a physically-based flood forecasting model (TOPMODEL) for threee U.K. catchments,   Journal of Hydrology, H.69, S.119-143.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Beven, K. (1997):   TOPMODEL - a critique,   Hydrological Processes, Vol.11, pp.1069-1085.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.6</ows:Identifier>
      <ows:Title>Change Vector Analysis</ows:Title>
      <ows:Abstract>This tool performs a change vector analysis (CVA) for the given input features. Input features are supplied as grid lists for initial and final state. In both lists features have to be given in the same order. Distance is measured as Euclidean distance in features space. When analyzing two features direction is calculated as angle (radians) by default. Otherwise direction is coded as the quadrant it points to in terms of feature space. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.5</ows:Identifier>
      <ows:Title>Least Cost Paths</ows:Title>
      <ows:Abstract>This tool allows one to compute least cost path profile(s). It takes an accumulated cost surface grid and a point shapefile as input. Each point in the shapefile represents a source for which the least cost path is calculated.&amp;lt;br/&amp;gt;In case the point shapefile has more than one source point defined, a separate least cost path is calculated for each point. The tool outputs a point and a line shapefile for each least cost path.&amp;lt;br/&amp;gt; The tool allows for optional input grids. The cell values of these grids along the least cost path are written to the outputs as additional table fields.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.21</ows:Identifier>
      <ows:Title>Diversity of Categories</ows:Title>
      <ows:Abstract>Grid based analysis of diversity. It is assumed that the input grid provides a classification (i.e. not a contiuous field). For each cell it counts the number of different categories (classes) as well as the connectivity within the chosen search window. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.14</ows:Identifier>
      <ows:Title>Soil Texture Classification</ows:Title>
      <ows:Abstract>Derive soil texture classes from sand, silt and clay contents. Currently supported schemes are USDA and German Kartieranleitung 5. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.17</ows:Identifier>
      <ows:Title>Fragmentation Classes from Density and Connectivity</ows:Title>
      <ows:Abstract>Fragmentation classes:&amp;lt;br/&amp;gt;(1) interior, if Density = 1.0&amp;lt;br/&amp;gt;(2) undetermined, if Density &amp;gt; 0.6 and Density = Connectivity&amp;lt;br/&amp;gt;(3) perforated, if Density &amp;gt; 0.6 and Density - Connectivity &amp;gt; 0&amp;lt;br/&amp;gt;(4) edge, if Density &amp;gt; 0.6 and Density - Connectivity &amp;lt; 0&amp;lt;br/&amp;gt;(5) transitional, if 0.4 &amp;lt; Density &amp;lt; 0.6&amp;lt;br/&amp;gt;(6) patch, if Density &amp;lt; 0.4&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.9</ows:Identifier>
      <ows:Title>Layer of extreme value</ows:Title>
      <ows:Abstract>It creates a new grid containing the ID of the grid with the maximum (minimum) value.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Copyright 2005 Victor Olaya: e-mail: volaya@ya.com</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.0</ows:Identifier>
      <ows:Title>Accumulated Cost</ows:Title>
      <ows:Abstract>Calculation of accumulated cost, either isotropic or anisotropic, if direction of maximum cost is specified. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.7</ows:Identifier>
      <ows:Title>Covered Distance</ows:Title>
      <ows:Abstract>Covered Distance</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.15</ows:Identifier>
      <ows:Title>Fragmentation (Standard)</ows:Title>
      <ows:Abstract>Grid based fragmentation analysis after Riitters et al. (2000).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;(1) interior, if Density = 1.0&amp;lt;br/&amp;gt;(2) undetermined, if Density &amp;gt; 0.6 and Density = Connectivity&amp;lt;br/&amp;gt;(3) perforated, if Density &amp;gt; 0.6 and Density - Connectivity &amp;gt; 0&amp;lt;br/&amp;gt;(4) edge, if Density &amp;gt; 0.6 and Density - Connectivity &amp;lt; 0&amp;lt;br/&amp;gt;(5) transitional, if 0.4 &amp;lt; Density &amp;lt; 0.6&amp;lt;br/&amp;gt;(6) patch, if Density &amp;lt; 0.4&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.12</ows:Identifier>
      <ows:Title>Aggregation Index</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Aggregation Index&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;1. Hong S. He, et al. An aggregation index to quantify spatial patterns of landscapes, Landscape Ecology 15, 591-601,2000&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.18</ows:Identifier>
      <ows:Title>Accumulation Functions</ows:Title>
      <ows:Abstract>Provides "accumulation functions" that can be used to e.g. move material over a "local drain direction" (LDD) network. The LDD net is computed for the supplied surface by MFD and D8 flow-routing algorithms. It is possible to switch from MFD to D8 as soon as a threshold is exceeded.&amp;lt;br/&amp;gt;The input to each cell on the grid can be supplied from e.g. time series and the material can be moved over the net in several ways. All of these, except the "accuflux" operation, compute both the flux and the state for a given cell. For time series modelling (batch processing), the state of each cell at time t can be initialized with the previous state t - 1.&amp;lt;br/&amp;gt;The capacity, fraction, threshold and trigger operations compute the fluxes and cell states at time t + 1 according to cell-specific parameters that control the way the flux is computed. The capacity function limits the cell-to-cell flux by a (channel) capacity control; the fraction function transports only a given proportion of material from cell to cell, the threshold function transports material only once a given threshold has been exceeded, and the trigger function transports nothing until a trigger value has been exceeded (at which point all accumulated material in the state of the cell is discharged to its downstream neighbour(s)).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The following operations are supported:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;	* ACCUFLUX: The accuflux function computes the new state of the attributes for the cell as the sum of the input cell values plus the cumulative sum of all upstream elements draining through the cell.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;	* ACCUCAPACITYFLUX / STATE: The operation modifies the accumulation of flow over the network by a limiting transport capacity given in absolute values.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;	* ACCUFRACTIONFLUX / STATE: The operation limits the flow over the network by a parameter which controls the proportion (0-1) of the material that can flow through each cell.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;	* ACCUTHRESHOLDFLUX / STATE: The operation modifies the accummulation of flow over the network by limiting transport to values greater than a minimum threshold value per cell. No flow occurs if the threshold is not exceeded.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;	* ACCUTRIGGERFLUX / STATE: The operation only allows transport (flux) to occur if a trigger value is exceeded, otherwise no transport occurs and storage accumulates.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.11</ows:Identifier>
      <ows:Title>Ordered Weighted Averaging</ows:Title>
      <ows:Abstract>The ordered weighted averaging (OWA) tool calculates for each cell the weighted average from the values of the supplied grids. The weighting factor for each grid value is defined with the 'Weights' table. If the 'Ordered' flag is unchecked, the order of the weights correspond to the order of the grids in the input list. If the 'Ordered' flag is checked, the grid values will be sorted and the weights will be assigned to the values in their ascending order, i.e. from the lowest to the highest value. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.16</ows:Identifier>
      <ows:Title>Fragmentation (Alternative)</ows:Title>
      <ows:Abstract>(1) interior, if Density = 1.0&amp;lt;br/&amp;gt;(2) undetermined, if Density &amp;gt; 0.6 and Density = Connectivity&amp;lt;br/&amp;gt;(3) perforated, if Density &amp;gt; 0.6 and Density - Connectivity &amp;gt; 0&amp;lt;br/&amp;gt;(4) edge, if Density &amp;gt; 0.6 and Density - Connectivity &amp;lt; 0&amp;lt;br/&amp;gt;(5) transitional, if 0.4 &amp;lt; Density &amp;lt; 0.6&amp;lt;br/&amp;gt;(6) patch, if Density &amp;lt; 0.4&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.13</ows:Identifier>
      <ows:Title>Cross-Classification and Tabulation</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Cross-Classification and Tabulation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.20</ows:Identifier>
      <ows:Title>Soil Texture Classification for Tables</ows:Title>
      <ows:Abstract>Derive soil texture classes from sand, silt and clay contents. Currently supported schemes are USDA and German Kartieranleitung 5. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.19</ows:Identifier>
      <ows:Title>IMCORR - Feature Tracking</ows:Title>
      <ows:Abstract>The tool performs an image correlation based on two raster data sets. Additionally, two DTMs can be given and used to optain 3D displacement vectors.&amp;lt;br/&amp;gt;This is a SAGA implementation of the standalone IMCORR software provided by the National Snow and Ice Data Center in Boulder, Colorado / US.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.10</ows:Identifier>
      <ows:Title>Analytical Hierarchy Process</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Analytical Hierarchy Process</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_analysis.8</ows:Identifier>
      <ows:Title>Pattern Analysis</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Pattern Analysis</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_cellular_automata.0</ows:Identifier>
      <ows:Title>Conway's Game of Life</ows:Title>
      <ows:Abstract>Conway's Game of Life - a classical cellular automat.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;- Eigen, M., Winkler, R. (1985): 'Das Spiel - Naturgesetze steuern den Zufall', Muenchen, 404p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_cellular_automata.1</ows:Identifier>
      <ows:Title>Wa-Tor</ows:Title>
      <ows:Abstract>Wa-Tor - an ecological simulation of predator-prey populations - is based upon A. K. Dewdney's 'Computer Recreations' article in the December 1984 issue of Scientific American.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_geomorphology.0</ows:Identifier>
      <ows:Title>Gravitational Process Path Model</ows:Title>
      <ows:Abstract>The Gravitational Process Path (GPP) model can be used to simulate the process path and run-out area of gravitational processes based on a digital terrain model (DTM). The conceptual model combines several components (process path, run-out length, sink filling and material deposition) to simulate the movement of a mass point from an initiation site to the deposition area. For each component several modeling approaches are provided, which makes the tool configurable for different processes such as rockfall, debris flows or snow avalanches.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool can be applied to regional-scale studies such as natural hazard susceptibility mapping but also contains components for scenario-based modeling of single events. Both the modeling approaches and precursor implementations of the tool have proven their applicability in numerous studies, also including geomorphological research questions such as the delineation of sediment cascades or the study of process connectivity.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Please provide the following reference in your work if you are using the GPP model:</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_maxent.0</ows:Identifier>
      <ows:Title>Maximum Entropy Classifcation</ows:Title>
      <ows:Abstract>Maximum Entropy Classifcation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_maxent.1</ows:Identifier>
      <ows:Title>Maximum Entropy Presence Prediction</ows:Title>
      <ows:Abstract>Maximum Entropy Presence Prediction</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_rivflow.0</ows:Identifier>
      <ows:Title>RiverBasin</ows:Title>
      <ows:Abstract>Parameters of RiverBasin</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_rivflow.1</ows:Identifier>
      <ows:Title>LandFlow Version 1.0 (build 3.5.1b)</ows:Title>
      <ows:Abstract>LandFlow Version 1.0 (build 3.5.1b)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_rivflow.3</ows:Identifier>
      <ows:Title>RiverGridGeneration</ows:Title>
      <ows:Abstract>Generation of RiverCourse-GridCells</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.docs_pdf.1</ows:Identifier>
      <ows:Title>Shapes Summary Report</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. summary.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.docs_pdf.2</ows:Identifier>
      <ows:Title>Terrain Path Cross Sections</ows:Title>
      <ows:Abstract>(c) 2004 Victor Olaya. Cross Sections</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.6</ows:Identifier>
      <ows:Title>Vectorising Grid Classes</ows:Title>
      <ows:Abstract>Vectorising grid classes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.5</ows:Identifier>
      <ows:Title>Contour Lines from Grid</ows:Title>
      <ows:Abstract>Derive contour lines (isolines) from grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.17</ows:Identifier>
      <ows:Title>Gradient Vectors from Directional Components</ows:Title>
      <ows:Abstract>Gradient Vectors from Directional Components</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.9</ows:Identifier>
      <ows:Title>Local Minima and Maxima</ows:Title>
      <ows:Abstract>Extracts local grid value minima and maxima of to vector points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.0</ows:Identifier>
      <ows:Title>Add Grid Values to Points</ows:Title>
      <ows:Abstract>Spatial Join: Retrieves information from the selected grids at the positions of the points of the selected points layer and adds it to the resulting layer.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.7</ows:Identifier>
      <ows:Title>Clip Grid with Polygon</ows:Title>
      <ows:Abstract>Clips the input grid with a polygon shapefile. Select polygons from the shapefile prior to tool execution in case you like to use only a subset from the shapefile for clipping.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.15</ows:Identifier>
      <ows:Title>Gradient Vectors from Surface</ows:Title>
      <ows:Abstract>Create lines indicating the gradient. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.18</ows:Identifier>
      <ows:Title>Grid Classes Area for Polygons</ows:Title>
      <ows:Abstract>Calculates for each polygon the area covered by each grid class.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.11</ows:Identifier>
      <ows:Title>Clip Grid with Rectangle</ows:Title>
      <ows:Abstract>Clips the input grid with the (rectangular) extent of a shapefile. The clipped grid will have the extent of the shapefile.&amp;lt;br/&amp;gt;Select shapes from the shapefile prior to tool execution in case you like to use only a subset from the shapefile for clipping.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.1</ows:Identifier>
      <ows:Title>Add Grid Values to Shapes</ows:Title>
      <ows:Abstract>Spatial Join: Retrieves information from the selected grids at the positions of the shapes of the selected shapes layer and adds it to the resulting shapes layer. For points this is similar to 'Add Grid Values to Points' tool. For lines and polygons average values will be calculated from interfering grid cells. For polygons the 'Grid Statistics for Polygons' tool offers more advanced options. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.16</ows:Identifier>
      <ows:Title>Gradient Vectors from Direction and Length</ows:Title>
      <ows:Abstract>Gradient Vectors from Direction and Length</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.3</ows:Identifier>
      <ows:Title>Grid Values to Points</ows:Title>
      <ows:Abstract>This tool saves grid values to point (grid nodes) or polygon (grid cells) shapes. Optionally only points can be saved, which are contained by polygons of the specified shapes layer. In addition, it is possible to exclude all cells that are coded NoData in the first grid of the grid list.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.10</ows:Identifier>
      <ows:Title>Grid System Extent</ows:Title>
      <ows:Abstract>Creates a polygon (rectangle) from a grid system's extent.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.8</ows:Identifier>
      <ows:Title>Grid Statistics for Points</ows:Title>
      <ows:Abstract>For each given point statistics based on all grid cells in the defined neighbourhood will be calculated.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.4</ows:Identifier>
      <ows:Title>Grid Values to Points (randomly)</ows:Title>
      <ows:Abstract>Extract randomly points from gridded data.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_grid.2</ows:Identifier>
      <ows:Title>Grid Statistics for Polygons</ows:Title>
      <ows:Abstract>Zonal grid statistics. For each polygon statistics based on all covered grid cells will be calculated.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.6</ows:Identifier>
      <ows:Title>Burn Stream Network into DEM</ows:Title>
      <ows:Abstract>Burns a stream network into a Digital Elevation Model (DEM). Stream cells have to be coded with valid data values, all other cells should be set to no data value. First two methods decrease . The third method ensures a steady downstream gradient. An elevation decrease is only applied, if a downstream cell is equally high or higher. You should provide a grid with flow directions for determination of downstream cells. The 'Sink Drainage Route Detection' tool offers such flow directions. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.5</ows:Identifier>
      <ows:Title>Fill Sinks XXL (Wang &amp; Liu)</ows:Title>
      <ows:Abstract>This tool uses an algorithm proposed by Wang &amp; Liu to identify and fill surface depressions in digital elevation models.&amp;lt;br/&amp;gt;The method was enhanced to allow the creation of hydrologic sound elevation models, i.e. not only to fill the depression(s) but also to preserve a downward slope along the flow path. If desired, this is accomplished by preserving a minimum slope gradient (and thus elevation difference) between cells.&amp;lt;br/&amp;gt;This version of the tool is designed to work on large data sets (e.g. LIDAR data), with smaller datasets you might like to check out the fully featured standard version of the tool.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Wang, L. &amp; H. Liu (2006): An efficient method for identifying and filling surface depressions in digital elevation models for hydrologic analysis and modelling. International Journal of Geographical Information Science, Vol. 20, No. 2: 193-213.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.0</ows:Identifier>
      <ows:Title>Flat Detection</ows:Title>
      <ows:Abstract>Flat Detection</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.1</ows:Identifier>
      <ows:Title>Sink Drainage Route Detection</ows:Title>
      <ows:Abstract>Sink Drainage Route Detection</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.3</ows:Identifier>
      <ows:Title>Fill Sinks (Planchon/Darboux, 2001)</ows:Title>
      <ows:Abstract>Depression filling algorithm after Olivier Planchon &amp; Frederic Darboux (2001)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Planchon, O. &amp; F. Darboux (2001): A fast, simple and versatile algorithm to fill the depressions of digital elevation models. Catena 46: 159-176&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.4</ows:Identifier>
      <ows:Title>Fill Sinks (Wang &amp; Liu)</ows:Title>
      <ows:Abstract>This tool uses an algorithm proposed by Wang &amp; Liu to identify and fill surface depressions in digital elevation models.&amp;lt;br/&amp;gt;The method was enhanced to allow the creation of hydrologic sound elevation models, i.e. not only to fill the depression(s) but also to preserve a downward slope along the flow path. If desired, this is accomplished by preserving a minimum slope gradient (and thus elevation difference) between cells.&amp;lt;br/&amp;gt;This is the fully featured version of the tool creating a depression less DEM, a flow path grid and a grid with watershed basins. If you encounter problems processing large data sets (e.g. LIDAR data) with this tool try the basic version (Fill Sinks XXL).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Wang, L. &amp; H. Liu (2006): An efficient method for identifying and filling surface depressions in digital elevation models for hydrologic analysis and modelling. International Journal of Geographical Information Science, Vol. 20, No. 2: 193-213.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_preprocessor.2</ows:Identifier>
      <ows:Title>Sink Removal</ows:Title>
      <ows:Abstract>Sink Removal</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ecosystems_hugget.0</ows:Identifier>
      <ows:Title>01: A Simple Litter System</ows:Title>
      <ows:Abstract>A simple litter system model using the euler method. Carbon storage C is calculated in dependency of litter fall rate (Cinput) and rate constant for litter loss (Closs) as:&amp;lt;br/&amp;gt;C(t + 1) = C(t) + (Cinput - Closs * C(t)) * dt&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Typical values:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Tropical Rainforest:&amp;lt;br/&amp;gt;-- Litter fall rate: 500 [g/m&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;/a]&amp;lt;br/&amp;gt;-- Litter loss rate: 2.0 [1/a]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Temperate forest:&amp;lt;br/&amp;gt;-- Litter fall rate: 240 [g/m&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;/a]&amp;lt;br/&amp;gt;-- Litter loss rate: 0.4 [1/a]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Boreal forest:&amp;lt;br/&amp;gt;-- Litter fall rate: 50 [g/m&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;/a]&amp;lt;br/&amp;gt;-- Litter loss rate: 0.05 [1/a]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Hugget, R.J. (1993): 'Modelling the Human Impact on Nature', Oxford University Press.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ecosystems_hugget.1</ows:Identifier>
      <ows:Title>02: Carbon Cycle Simulation for Terrestrial Biomass</ows:Title>
      <ows:Abstract>Simulation of the Carbon Cycle in Terrestrial Biomass. &amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Hugget, R.J. (1993): 'Modelling the Human Impact on Nature', Oxford University Press.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_ecosystems_hugget.2</ows:Identifier>
      <ows:Title>03: Spatially Distributed Simulation of Soil Nitrogen Dynamics</ows:Title>
      <ows:Abstract>Spatially Distributed Simulation of Soil Nitrogen Dynamics. &amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Hugget, R.J. (1993): 'Modelling the Human Impact on Nature', Oxford University Press.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.6</ows:Identifier>
      <ows:Title>Flow Path Length</ows:Title>
      <ows:Abstract>This tool calculates the average flow path length starting from the seeds, that are given by the optional 'Seeds' grid and optionally from cells without upslope contributing areas (i.e. summits, ridges). Seeds will be all grid cells, that are not 'no data' values. If seeds are not given, only summits and ridges as given by the flow routing will be taken into account. Available flow routing methods are based on the 'Deterministic 8 (D8)' (Callaghan and Mark 1984) and the 'Multiple Flow Direction (FD8)' (Freeman 1991, Quinn et al. 1991) algorithms.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.21</ows:Identifier>
      <ows:Title>Stream Power Index</ows:Title>
      <ows:Abstract>Calculation of stream power index based on slope and specific catchment area (SCA).&amp;lt;br/&amp;gt;SPI = SCA * tan(Slope)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.24</ows:Identifier>
      <ows:Title>TCI Low</ows:Title>
      <ows:Abstract>Terrain Classification Index for Lowlands (TCI Low).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.22</ows:Identifier>
      <ows:Title>LS Factor</ows:Title>
      <ows:Abstract>Calculation of slope length (LS) factor as used by the Universal Soil Loss Equation (USLE), based on slope and specific catchment area (SCA, as substitute for slope length).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.28</ows:Identifier>
      <ows:Title>Flow between fields</ows:Title>
      <ows:Abstract>Flow between fields (identified by ID)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.29</ows:Identifier>
      <ows:Title>Flow Accumulation (Parallelizable)</ows:Title>
      <ows:Abstract>A simple implementation of a parallelizable flow accumulation algorithn.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.25</ows:Identifier>
      <ows:Title>LS-Factor, Field Based</ows:Title>
      <ows:Abstract>Calculation of slope length (LS) factor as used for the Universal Soil Loss Equation (USLE), based on slope and (specific) catchment area, latter as substitute for slope length. This tool takes only a Digital Elevation Model (DEM) as input and derives catchment areas according to Freeman (1991). Optionally field polygons can be supplied. Is this the case, calculations will be performed field by field, i.e. catchment area calculation is restricted to each field's area.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.0</ows:Identifier>
      <ows:Title>Flow Accumulation (Top-Down)</ows:Title>
      <ows:Abstract>Top-down processing of cells for calculation of flow accumulation and related parameters. This set of algorithms processes a DEM downwards from the highest to the lowest cell.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Flow routing methods provided by this tool:&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Deterministic 8 (aka D8, O'Callaghan &amp; Mark 1984)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Braunschweiger Reliefmodell (Bauer et al. 1985)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Rho 8 (Fairfield &amp; Leymarie 1991)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Multiple Flow Direction (Freeman 1991, Quinn et al. 1991)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Deterministic Infinity (Tarboton 1997)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Triangular Multiple Flow Direction (Seibert &amp; McGlynn 2007&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Multiple Flow Direction based on Maximum Downslope Gradient (Qin et al. 2011)&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.7</ows:Identifier>
      <ows:Title>Slope Length</ows:Title>
      <ows:Abstract>Slope Length</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.15</ows:Identifier>
      <ows:Title>SAGA Wetness Index</ows:Title>
      <ows:Abstract>The 'SAGA Wetness Index' is, as the name says, similar to the 'Topographic Wetness Index' (TWI), but it is based on a modified catchment area calculation ('Modified Catchment Area'), which does not think of the flow as very thin film. As result it predicts for cells situated in valley floors with a small vertical distance to a channel a more realistic, higher potential soil moisture compared to the standard TWI calculation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.26</ows:Identifier>
      <ows:Title>Slope Limited Flow Accumulation</ows:Title>
      <ows:Abstract>Flow accumulation is calculated as upslope contributing (catchment) area using the multiple flow direction approach of Freeman (1991). For this tool the approach has been modified to limit the flow portion routed through a cell depending on the local slope. If a cell is not inclined, no flow is routed through it at all. With increasing slopes the portion of flow routed through a cell becomes higher. Cells with slopes greater than a specified slope threshold route their entire accumulated flow downhill. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.18</ows:Identifier>
      <ows:Title>Flow Accumulation (Mass-Flux Method)</ows:Title>
      <ows:Abstract>The Mass-Flux Method (MFM) for the DEM based calculation of flow accumulation as proposed by Gruber and Peckham (2008).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;!!!UNDER DEVELOPMENT!!! To be done: solving the streamline resolution problem</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.1</ows:Identifier>
      <ows:Title>Flow Accumulation (Recursive)</ows:Title>
      <ows:Abstract>Recursive upward processing of cells for calculation of flow accumulation and related parameters. This set of algorithms processes recursively all upwards connected cells until each cell of the DEM has been processed.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Flow routing methods provided by this tool:&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Deterministic 8 (aka D8, O'Callaghan &amp; Mark 1984)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Rho 8 (Fairfield &amp; Leymarie 1991)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Multiple Flow Direction (Freeman 1991, Quinn et al. 1991)&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Deterministic Infinity (Tarboton 1997)&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.23</ows:Identifier>
      <ows:Title>Melton Ruggedness Number</ows:Title>
      <ows:Abstract>Melton ruggedness number (MNR) is a simple flow accumulation related index, calculated as difference between maximum and minimum elevation in catchment area divided by square root of catchment area size. The calculation is performed for each grid cell, therefore minimum elevation is same as elevation at cell's position. Due to the discrete character of a single maximum elevation, flow calculation is simply done with Deterministic 8.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.16</ows:Identifier>
      <ows:Title>Lake Flood</ows:Title>
      <ows:Abstract>This tool can be used to flood a digital elevation model from seed points. Seed points have to be coded either with local water depth or absolute water level.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.13</ows:Identifier>
      <ows:Title>Edge Contamination</ows:Title>
      <ows:Abstract>This tool uses flow directions to estimate possible contamination effects moving from outside of the grid passing the edge into its interior. This means that derived contributing area values might be underestimated for the marked cells. Cells not contamined will be marked as no data. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.27</ows:Identifier>
      <ows:Title>Maximum Flow Path Length</ows:Title>
      <ows:Abstract>This tool calculates the maximum upstream or downstream distance or weighted distance along the flow path for each cell based on 'Deterministic 8 (D8)' (O'Callaghan and Mark 1984) flow directions.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.20</ows:Identifier>
      <ows:Title>Topographic Wetness Index (TWI)</ows:Title>
      <ows:Abstract>Calculation of the slope and specific catchment area (SCA) based Topographic Wetness Index (TWI).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.19</ows:Identifier>
      <ows:Title>Flow Width and Specific Catchment Area</ows:Title>
      <ows:Abstract>Flow width and specific catchment area (SCA) calculation. SCA calculation needs total catchment area (TCA) as input, which can be calculated with one of the flow accumulation tools. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.10</ows:Identifier>
      <ows:Title>Cell Balance</ows:Title>
      <ows:Abstract>Cell Balance</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.4</ows:Identifier>
      <ows:Title>Upslope Area</ows:Title>
      <ows:Abstract>This tool allows you to specify target cells, for which the upslope contributing area shall be identified. The result will give for each cell the percentage of its flow that reaches the target cell(s).&amp;lt;br/&amp;gt;_______&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;This version uses all valid cells (not 'no data' values) of a given target grid to determine the contributing area. In case no target grid is provided as input, the specified x/y coordinates are used as target point.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_hydrology.2</ows:Identifier>
      <ows:Title>Flow Accumulation (Flow Tracing)</ows:Title>
      <ows:Abstract>Flow tracing algorithms for calculations of flow accumulation and related parameters. These algorithms trace the flow of each cell in a DEM separately until it finally leaves the DEM or ends in a sink.&amp;lt;br/&amp;gt;The Rho 8 implementation (Fairfield &amp; Leymarie 1991) adopts the original algorithm only for the flow routing and will give quite different results.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_qm_of_esp.0</ows:Identifier>
      <ows:Title>Diffusive Hillslope Evolution (FTCS)</ows:Title>
      <ows:Abstract>Simulation of diffusive hillslope evolution using a Forward-Time-Centered-Space (FTCS) method.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_qm_of_esp.1</ows:Identifier>
      <ows:Title>Fill Sinks (QM of ESP)</ows:Title>
      <ows:Abstract>Filling in pits and flats in a DEM.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_qm_of_esp.3</ows:Identifier>
      <ows:Title>Successive Flow Routing</ows:Title>
      <ows:Abstract>Calculation of flow accumulation, aka upslope contributing area, with the multiple flow direction method after Freeman (1991).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_qm_of_esp.4</ows:Identifier>
      <ows:Title>Diffusive Hillslope Evolution (ADI)</ows:Title>
      <ows:Abstract>Simulation of diffusive hillslope evolution using an Alternating-Direction-Implicit (ADI) method.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_qm_of_esp.2</ows:Identifier>
      <ows:Title>Flow Accumulation (QM of ESP)</ows:Title>
      <ows:Abstract>Calculation of flow accumulation, aka upslope contributing area, with the multiple flow direction method after Freeman (1991).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grids_tools.6</ows:Identifier>
      <ows:Title>Inverse Distance Weighted (3D)</ows:Title>
      <ows:Abstract>Inverse distance weighted interpolation for 3-dimensional data points. Output will be a grid collection with evenly spaced Z-levels representing the 3rd dimension. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grids_tools.5</ows:Identifier>
      <ows:Title>Nearest Neighbour (3D)</ows:Title>
      <ows:Abstract>Nearest neighbour interpolation for 3-dimensional data points. Output will be a grid collection with evenly spaced Z-levels representing the 3rd dimension. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grids_tools.0</ows:Identifier>
      <ows:Title>Create a Grid Collection</ows:Title>
      <ows:Abstract>Create a new grid collection from existing grids.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grids_tools.3</ows:Identifier>
      <ows:Title>Extract a Grid from a Grid Collection</ows:Title>
      <ows:Abstract>Extracts grid values from the input grid collection using the chosen interpolation either for a constant or a variable z-level as defined by the z-level input grid.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grids_tools.4</ows:Identifier>
      <ows:Title>Add a Grid to a Grid Collection</ows:Title>
      <ows:Abstract>Adds a grid at the specified z-level to an existing grid collection. If no grid collection is supplied it will be created according to the input grid's grid system and data type. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.6</ows:Identifier>
      <ows:Title>Strahler Order</ows:Title>
      <ows:Abstract>This tool allows one to calculate the Strahler stream order on basis of a DEM and the steepest descent (D8) algorithm.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.5</ows:Identifier>
      <ows:Title>Channel Network and Drainage Basins</ows:Title>
      <ows:Abstract>Deterministic 8 based flow network analysis&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.0</ows:Identifier>
      <ows:Title>Channel Network</ows:Title>
      <ows:Abstract>This tool derives a channel network based on gridded digital elevation data.&amp;lt;br/&amp;gt;Use the initiation options to determine under which conditions channels shall start.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.7</ows:Identifier>
      <ows:Title>Valley Depth</ows:Title>
      <ows:Abstract>Valley depth is calculated as difference between the elevation and an interpolated ridge level. Ridge level interpolation uses the algorithm implemented in the 'Vertical Distance to Channel Network' tool. It performs the following steps:&amp;lt;br/&amp;gt; - Definition of ridge cells (using Strahler order on the inverted DEM).&amp;lt;br/&amp;gt; - Interpolation of the ridge level.&amp;lt;br/&amp;gt; - Subtraction of the original elevations from the ridge level.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.1</ows:Identifier>
      <ows:Title>Watershed Basins</ows:Title>
      <ows:Abstract>Watershed Basins</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.3</ows:Identifier>
      <ows:Title>Vertical Distance to Channel Network</ows:Title>
      <ows:Abstract>This tool calculates the vertical distance to a channel network base level. The algorithm consists of two major steps:&amp;lt;br/&amp;gt; 1. Interpolation of a channel network base level elevation&amp;lt;br/&amp;gt; 2. Subtraction of this base level from the original elevations&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.4</ows:Identifier>
      <ows:Title>Overland Flow Distance to Channel Network</ows:Title>
      <ows:Abstract>This tool calculates overland flow distances to a channel network based on gridded digital elevation data and channel network information. The flow algorithm may be either Deterministic 8 (O'Callaghan &amp; Mark 1984) or Multiple Flow Direction (Freeman 1991). Sediment Delivery Rates (SDR) according to Ali &amp; De Boer (2010) can be computed optionally. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_channels.2</ows:Identifier>
      <ows:Title>Watershed Basins (Extended)</ows:Title>
      <ows:Abstract>Extended watershed basin analysis. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_segmentation.0</ows:Identifier>
      <ows:Title>Watershed Segmentation</ows:Title>
      <ows:Abstract>Watershed segmentation. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_segmentation.1</ows:Identifier>
      <ows:Title>Grid Skeletonization</ows:Title>
      <ows:Abstract>Simple skeletonisation methods for grids. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_segmentation.3</ows:Identifier>
      <ows:Title>Seeded Region Growing</ows:Title>
      <ows:Abstract>The tool allows one to apply a seeded region growing algorithm to a stack of input features and thus to segmentize the data for object extraction. The required seed points can be created with the 'Seed Generation' tool, for example. The derived segments can be used, for example, for object based classification.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_segmentation.4</ows:Identifier>
      <ows:Title>Superpixel Segmentation</ows:Title>
      <ows:Abstract>The Superpixel Segmentation tool implements the 'Simple Linear Iterative Clustering' (SLIC) algorithm, an image segmentation method described in Achanta et al. (2010). &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;SLIC is a simple and efficient method to decompose an image in visually homogeneous regions. It is based on a spatially localized version of k-means clustering. Similar to mean shift or quick shift, each pixel is associated to a feature vector. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;This tool is follows the SLIC implementation created by Vedaldi and Fulkerson as part of the VLFeat library. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_segmentation.2</ows:Identifier>
      <ows:Title>Seed Generation</ows:Title>
      <ows:Abstract>The tool allows one to create seed points from a stack of input features. Such seed points can be used, for example, as input in the 'Seeded Region Growing' tool.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_odbc.5</ows:Identifier>
      <ows:Title>Import Table</ows:Title>
      <ows:Abstract>Imports a table from a database via ODBC.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_odbc.9</ows:Identifier>
      <ows:Title>List ODBC Servers</ows:Title>
      <ows:Abstract>Lists all ODBC sources.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_odbc.10</ows:Identifier>
      <ows:Title>List Tables</ows:Title>
      <ows:Abstract>Lists all tables of an ODBC data source.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_odbc.8</ows:Identifier>
      <ows:Title>Import Table from SQL Query</ows:Title>
      <ows:Abstract>Import a SQL table from a database via ODBC.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.db_odbc.4</ows:Identifier>
      <ows:Title>List Table Fields</ows:Title>
      <ows:Abstract>Loads table information from ODBC data source.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.6</ows:Identifier>
      <ows:Title>GWR for Multiple Predictor Grids</ows:Title>
      <ows:Abstract>Geographically Weighted Regression for a multiple predictors supplied as grids, to which the regression model is applied. Further details can be stored optionally.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.5</ows:Identifier>
      <ows:Title>GWR for Multiple Predictors (Gridded Model Output)</ows:Title>
      <ows:Abstract>Geographically Weighted Regression for multiple predictors. Predictors have to be supplied as attributes of ingoing points data. Regression model parameters are generated as continuous fields, i.e. as grids. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.14</ows:Identifier>
      <ows:Title>GWR for Grid Downscaling</ows:Title>
      <ows:Abstract>Geographically Weighted Regression for grid downscaling. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.9</ows:Identifier>
      <ows:Title>Polynomial Trend from Grids</ows:Title>
      <ows:Abstract>Fits for each cell a polynomial trend function. Outputs are the polynomial coefficients for the polynomial trend function of chosen order. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.0</ows:Identifier>
      <ows:Title>Regression Analysis (Points and Predictor Grid)</ows:Title>
      <ows:Abstract>Regression analysis of point attributes with a grid as predictor. The regression function is used to create a new grid with regression based values. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;- Bahrenberg, G., Giese, E., Nipper, J. (1990): 'Statistische Methoden in der Geographie 1 - Univariate und bivariate Statistik', Stuttgart, 233p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.7</ows:Identifier>
      <ows:Title>GWR for Multiple Predictors</ows:Title>
      <ows:Abstract>Geographically Weighted Regression for multiple predictors. Regression details are stored in a copy of input points. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.15</ows:Identifier>
      <ows:Title>Zonal Multiple Regression Analysis (Points and Predictor Grids)</ows:Title>
      <ows:Abstract>Linear regression analysis of point attributes using multiple predictor grids. Details of the regression/correlation analysis will be saved to a table. The regression function is used to create a new grid with regression based values. The multiple regression analysis uses a forward selection procedure. Each polygon in the zones layer is processed as individual zone. &amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;- Bahrenberg, G., Giese, E., Nipper, J. (1992): 'Statistische Methoden in der Geographie 2 - Multivariate Statistik', Stuttgart, 415p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.12</ows:Identifier>
      <ows:Title>Multiple Linear Regression Analysis</ows:Title>
      <ows:Abstract>Multiple linear regression analysis using ordinary least squares.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.11</ows:Identifier>
      <ows:Title>Trend Analysis (Shapes)</ows:Title>
      <ows:Abstract>Trend Analysis (Shapes)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.1</ows:Identifier>
      <ows:Title>Multiple Regression Analysis (Points and Predictor Grids)</ows:Title>
      <ows:Abstract>Linear regression analysis of point attributes with multiple grids. Details of the regression/correlation analysis will be saved to a table. The regression function is used to create a new grid with regression based values. The multiple regression analysis uses a forward selection procedure.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.13</ows:Identifier>
      <ows:Title>Multiple Linear Regression Analysis (Shapes)</ows:Title>
      <ows:Abstract>Multiple linear regression analysis using ordinary least squares.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.3</ows:Identifier>
      <ows:Title>GWR for Single Predictor (Gridded Model Output)</ows:Title>
      <ows:Abstract>This Geographically Weighted Regression tool for a single predictor creates gridded model output.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.10</ows:Identifier>
      <ows:Title>Trend Analysis</ows:Title>
      <ows:Abstract>Trend Analysis</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.8</ows:Identifier>
      <ows:Title>Multiple Regression Analysis (Grid and Predictor Grids)</ows:Title>
      <ows:Abstract>Linear regression analysis of one grid as dependent and multiple grids as indepentent (predictor) variables. Details of the regression/correlation analysis will be saved to a table. Optionally the regression model is used to create a new grid with regression based values. The multiple regression analysis uses a forward selection procedure. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;- Bahrenberg, G., Giese, E., Nipper, J. (1992): 'Statistische Methoden in der Geographie 2 - Multivariate Statistik', Stuttgart, 415p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.4</ows:Identifier>
      <ows:Title>GWR for Single Predictor Grid</ows:Title>
      <ows:Abstract>Geographically Weighted Regression for a single predictor supplied as grid, to which the regression model is applied. Further details can be stored optionally.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_regression.2</ows:Identifier>
      <ows:Title>Polynomial Regression</ows:Title>
      <ows:Abstract>Reference:&amp;lt;br/&amp;gt; - Lloyd, C. (2010): Spatial Data Analysis - An Introduction for GIS Users. Oxford, 206p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.6</ows:Identifier>
      <ows:Title>Convert Polygon/Line Vertices to Points</ows:Title>
      <ows:Abstract>Convert Polygon/Line Vertices to Points</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.5</ows:Identifier>
      <ows:Title>Polygon Dissolve</ows:Title>
      <ows:Abstract>Merges polygons, which share the same attribute value, and (optionally) dissolves borders between adjacent polygon parts. If no attribute or combination of attributes is chosen, all polygons will be merged. Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.21</ows:Identifier>
      <ows:Title>Flatten Polygon Layer</ows:Title>
      <ows:Abstract>Removes invalid polygons, i.e. polygons with less than three vertices, and merges polygons belonging spatially together, i.e. forming outer and inner rings. Inner rings are not preserved as separate polygon, but become new part of the polygon forming the outer ring. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.22</ows:Identifier>
      <ows:Title>Shared Polygon Edges</ows:Title>
      <ows:Abstract>Shared Polygon Edges</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.14</ows:Identifier>
      <ows:Title>Intersect</ows:Title>
      <ows:Abstract>Calculates the geometric intersection of the overlayed polygon layers, i.e. layer A and layer B.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.17</ows:Identifier>
      <ows:Title>Union</ows:Title>
      <ows:Abstract>Calculates the geometric union of the overlayed polygon layers, i.e. the intersection plus the symmetrical difference of layers A and B.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.9</ows:Identifier>
      <ows:Title>Polygons to Edges and Nodes</ows:Title>
      <ows:Abstract>Polygons to Edges and Nodes</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.7</ows:Identifier>
      <ows:Title>Polygon Shape Indices</ows:Title>
      <ows:Abstract>The tool calculates various indices describing the shape of polygons, mostly based on area, perimeter and maximum diameter. If the optional output 'Shape Indices' is not created, the tool attaches the attributes to the input dataset. Otherwise a new dataset is created and attributes existing in the input dataset are dropped.&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;A&amp;lt;/b&amp;gt; area&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;P&amp;lt;/b&amp;gt; perimeter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;P/A&amp;lt;/b&amp;gt; interior edge ratio&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;P/sqrt(A)&amp;lt;/b&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Deqpc&amp;lt;/b&amp;gt; equivalent projected circle diameter (=2*sqrt(A/pi))&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Sphericity&amp;lt;/b&amp;gt; the ratio of the perimeter of the equivalent circle to the real perimeter (=P/(2*sqrt(A*pi)))&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Shape Index&amp;lt;/b&amp;gt; the inverse of the spericity&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Dmax&amp;lt;/b&amp;gt; maximum diameter calculated as maximum distance between two polygon part's vertices&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;DmaxDir&amp;lt;/b&amp;gt; direction of maximum diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Dmax/A&amp;lt;/b&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Dmax/sqrt(A)&amp;lt;/b&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Dgyros&amp;lt;/b&amp;gt; diameter of gyration, calculated as twice the maximum vertex distance to its polygon part's centroid&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fmax&amp;lt;/b&amp;gt; maximum Feret diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;FmaxDir&amp;lt;/b&amp;gt; direction of the maximum Feret diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fmin&amp;lt;/b&amp;gt; minimum Feret diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;FminDir&amp;lt;/b&amp;gt; direction of the minimum Feret diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fmean&amp;lt;/b&amp;gt; mean Feret diameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fmax90&amp;lt;/b&amp;gt; the Feret diameter measured at an angle of 90 degrees to that of the Fmax direction&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fmin90&amp;lt;/b&amp;gt; the Feret diameter measured at an angle of 90 degrees to that of the Fmin direction&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Fvol&amp;lt;/b&amp;gt; the diameter of a sphere having the same volume as the cylinder constructed by Fmin as the cylinder diameter and Fmax as its length&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.15</ows:Identifier>
      <ows:Title>Difference</ows:Title>
      <ows:Abstract>Calculates the geometric difference of the overlayed polygon layers, i.e. layer A less layer B. Sometimes referred to as 'Erase' command.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.12</ows:Identifier>
      <ows:Title>Polygon Self-Intersection</ows:Title>
      <ows:Abstract>Self-intersection of one layer's polygons.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.18</ows:Identifier>
      <ows:Title>Update</ows:Title>
      <ows:Abstract>Updates features of layer A with the features of layer B, i.e. all features of layer B will be supplemented with the difference of layer A less layer B plus. It is assumed, that both input layers share the same attribute structure.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.11</ows:Identifier>
      <ows:Title>Polygon Clipping</ows:Title>
      <ows:Abstract>Clipping of vector layers with a polygon layer.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.1</ows:Identifier>
      <ows:Title>Polygon Centroids</ows:Title>
      <ows:Abstract>Creates a points layer containing the centroids of the input polygon layer.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.23</ows:Identifier>
      <ows:Title>Polygon Generalization</ows:Title>
      <ows:Abstract>A simple generalization tool for polygons. The tool joins polygons with an area size smaller than the specified threshold to their largest neighbouring polygon. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.16</ows:Identifier>
      <ows:Title>Symmetrical Difference</ows:Title>
      <ows:Abstract>Calculates the symmetrical geometric difference of the overlayed polygon layers, i.e. layer A less layer B plus layer B less layer A.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.20</ows:Identifier>
      <ows:Title>Add Point Attributes to Polygons</ows:Title>
      <ows:Abstract>Spatial join for polygons. Retrieves for each polygon the selected attributes from that point, which is contained in the polygon. In case a polygon contains more than one point, the last point wins.&amp;lt;br/&amp;gt;Optionally, the tool allows one to attach the geometrical properties (x,y(z,m)) of each point as additional attributes.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.19</ows:Identifier>
      <ows:Title>Identity</ows:Title>
      <ows:Abstract>Calculates the geometric intersection between both layers and adds the difference of layer A less layer B.&amp;lt;br/&amp;gt;Uses the free and open source software library &amp;lt;b&amp;gt;Clipper&amp;lt;/b&amp;gt; created by Angus Johnson.&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://www.angusj.com/delphi/clipper.php"&amp;gt;Clipper Homepage&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://sourceforge.net/projects/polyclipping/"&amp;gt;Clipper at SourceForge&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.3</ows:Identifier>
      <ows:Title>Convert Lines to Polygons</ows:Title>
      <ows:Abstract>Converts lines to polygons. Line arcs are closed to polygons simply by connecting the last point with the first. Optionally parts of polylines can be merged into one polygon optionally. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.10</ows:Identifier>
      <ows:Title>Polygon Parts to Separate Polygons</ows:Title>
      <ows:Abstract>Splits parts of multipart polygons into separate polygons. This can be done only for islands (outer rings) or for all parts (inner and outer rings) by checking the 'lakes' option.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.8</ows:Identifier>
      <ows:Title>Polygon-Line Intersection</ows:Title>
      <ows:Abstract>Polygon-line intersection. Splits polygons with lines. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.4</ows:Identifier>
      <ows:Title>Point Statistics for Polygons</ows:Title>
      <ows:Abstract>Calculates statistics over all points falling in a polygon.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_polygons.2</ows:Identifier>
      <ows:Title>Polygon Properties</ows:Title>
      <ows:Abstract>Add general and geometric properties of polygons to its atttributes.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.6</ows:Identifier>
      <ows:Title>K-Nearest Neighbours Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for K-Nearest Neighbours classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.5</ows:Identifier>
      <ows:Title>Normal Bayes Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Normal Bayes classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.9</ows:Identifier>
      <ows:Title>Boosting Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Boosted Trees classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.0</ows:Identifier>
      <ows:Title>Morphological Filter (OpenCV)</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;OpenCV - Open Source Computer Vision&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://opencv.willowgarage.com"&amp;gt;http://opencv.willowgarage.com&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.7</ows:Identifier>
      <ows:Title>Support Vector Machine Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Support Vector Machine classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.12</ows:Identifier>
      <ows:Title>Logistic Regression (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Logistic Regression based classification of gridded features. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Optimization algorithms like &amp;lt;i&amp;gt;Batch Gradient Descent&amp;lt;/i&amp;gt; and &amp;lt;i&amp;gt;Mini-Batch Gradient Descent&amp;lt;/i&amp;gt; are supported in Logistic Regression. It is important that we mention the number of iterations these optimization algorithms have to run. The number of iterations can be thought as number of steps taken and learning rate specifies if it is a long step or a short step. This and previous parameter define how fast we arrive at a possible solution. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;In order to compensate for overfitting regularization can be performed. (L1 or L2 norm). &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Logistic regression implementation provides a choice of two training methods with &amp;lt;i&amp;gt;Batch Gradient Descent&amp;lt;/i&amp;gt; or the &amp;lt;i&amp;gt;Mini-Batch Gradient Descent&amp;lt;/i&amp;gt;. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.11</ows:Identifier>
      <ows:Title>Artificial Neural Network Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Artificial Neural Network classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.1</ows:Identifier>
      <ows:Title>Fourier Transformation (OpenCV)</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;OpenCV - Open Source Computer Vision&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://opencv.willowgarage.com"&amp;gt;http://opencv.willowgarage.com&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.10</ows:Identifier>
      <ows:Title>Random Forest Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Random Forest classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.8</ows:Identifier>
      <ows:Title>Decision Tree Classification (OpenCV)</ows:Title>
      <ows:Abstract>Integration of the OpenCV Machine Learning library for Decision Tree classification of gridded features.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.4</ows:Identifier>
      <ows:Title>Stereo Match (OpenCV)</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;OpenCV - Open Source Computer Vision&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://opencv.org"&amp;gt;http://opencv.org&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_opencv.2</ows:Identifier>
      <ows:Title>Single Value Decomposition (OpenCV)</ows:Title>
      <ows:Abstract>References:&amp;lt;br/&amp;gt;OpenCV - Open Source Computer Vision&amp;lt;br/&amp;gt;&amp;lt;a target="_blank" href="http://opencv.willowgarage.com"&amp;gt;http://opencv.willowgarage.com&amp;lt;/a&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_webservices.0</ows:Identifier>
      <ows:Title>Import a Map via Web Map Service (WMS)</ows:Title>
      <ows:Abstract>This tool works as Web Map Service (WMS) client. More information on the WMS specifications can be obtained from the Open Geospatial Consortium (OGC). </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.garden_webservices.2</ows:Identifier>
      <ows:Title>Geocoding</ows:Title>
      <ows:Abstract>Geocoding of addresses using geocoding services. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.5</ows:Identifier>
      <ows:Title>ANGMAP</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;This tool computes the acute angle raster between the topographic surface defined by slope and aspect rasters internally derived from input elevation raster, and a structural plane defined by diop direction- and dip grids. Optionally, the dip direction and dip of the cutting line linears between the two planes can be calculated&amp;lt;br/&amp;gt;Reference: &amp;lt;a href="http://www.sciencedirect.com/science/article/pii/S0098300403000864"&amp;gt;G&amp;uuml;nther, A. (2003). SLOPEMAP: programs for automated mapping of geometrical and kinematical properties of hard rock hill slopes. Computers &amp; Geosciences, 29, 865 - 875&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.0</ows:Identifier>
      <ows:Title>SAFETYFACTOR</ows:Title>
      <ows:Abstract>This tool computes a slope stability (expressed as a factor-of-safety) raster according to the traditional infinite slope model theory (see cf Selby, 1993) The resulting raster represents the ratio of resisting forces/driving forces (fs) on a potential shear plane with fs lesser 1 unstable, fs greater 1 stable. Except for a slope raster (in radians), all input variables can be specified either globally or distributed (through grids). The tool creates a continuous fs raster (values above 10 are truncated), and a binary stability grid with nodata = stable, 1 = unstable (optional).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.1</ows:Identifier>
      <ows:Title>TOBIA</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;This tool computes both a continuous and a categorical TOBIA (Topography Bedding Intersection Angle) Index according to Meentemeyer &amp; Moody (2000) For computation, a slope and a aspect raster (both in radians) determining slope face orientations are required. The categorical TOBIA classifies the alignement of a geological structure to Topography into seven classes:&amp;lt;br/&amp;gt;0) Underdip slope&amp;lt;br/&amp;gt;1) Dip slope&amp;lt;br/&amp;gt;2) Overdip slope&amp;lt;br/&amp;gt;3) Steepened escarpmemt&amp;lt;br/&amp;gt;4) Normal escarpment&amp;lt;br/&amp;gt;5) Subdued escarpment&amp;lt;br/&amp;gt;6) Orthoclinal slope&amp;lt;br/&amp;gt;The continuous TOBIA index ranges from -1 to 1 (parallel orientation)&amp;lt;br/&amp;gt;The structure TOBIA should be calculated with can be set either distributed (through dip direction and dip grids, in degrees!), or globally using integers (dip and dip direction, in degrees!). The tool creates a TOBIA class integer grid, and (optionally) a continuous TOBIA index grid.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference: &amp;lt;a href="http://www.sciencedirect.com/science/article/pii/S009830040000011X"&amp;gt;Meentemeyer R. K., Moody A. (2000). Automated mapping of conformity between topographic and geological surfaces. Computers &amp; Geosciences, 26, 815 - 829&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.3</ows:Identifier>
      <ows:Title>WETNESS</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;This tool calculates a topographic wetness index (TWI) following Montgomery &amp; Dietrich (1994) that can be used to estimate the degree of saturation of unconsolidated, permeable materials above (more or less) impermeable bedrock. In contrast to the common TOPMODEL (Beven &amp; Kirkby, 1979) - based TWI, this index differs in such that it considers hydraulic conductivity to be constant in a soil mantle overlying relatively impermeable bedrock. Also, it uses the sine of the slope rather than its tangens, which is more correct and significantly matters for steeper slopes that give raise to landslides. For computation, a slope (in radians) and a catchment area (in m2) grid are required. Additionally, information on groundwater recharge (m/hr), material hydraulic conductivity (m/hr), and depth to potential shear plane (m) are required that can be specified either globally or through grids. The tool produces a continuous wetness index (-) where cells with WI values &amp;gt; 1 (overland flow) set to 1, and optionally creates a classified WI grid rendering three saturation classes:.&amp;lt;br/&amp;gt;0): Low moisture (WI smaller 0.1)&amp;lt;br/&amp;gt;1): Partially wet (0.1 smaller WI smaller 1)&amp;lt;br/&amp;gt;2): Saturation zone (WI larger 1)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;a href="http://www.tandfonline.com/doi/abs/10.1080/02626667909491834"&amp;gt;Beven, K.J., Kirkby, M.J. (1979) A physically-based variable contributing area model of basin hydrology. Hydrology Science Bulletin, 24, 43-69.&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a href="http://www.agu.org/pubs/crossref/1994/93WR02979.shtml"&amp;gt;Montgomery D. R., Dietrich, W. E. (1994) A physically based model for the topographic control on shallow landsliding. Water Resources Research, 30, 1153-1171.&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.4</ows:Identifier>
      <ows:Title>WEDGEFAIL</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;This tool determines terrain elements where failure (slide- or topple movements) on geological discontinuies are kinematically possible through the spatial application of common frictional feasibility criteria (G&amp;uuml;nther et al. 2012 and references therein). Both the orientation of slope elements specified through aspect- and dip grids (in radians) are required together with the orientation of one planar structure defined through global- or grid dip direction and dip data, or two planar structures defined by plunge direction and plunge information of their intersection line (in degrees). The shear strength of the discontinuities is specified using global or grid-based friction angle data. Optionally, a cone value can be set allowing for some variance in discontinuity dip orientations. The tool operates in slide (testing for plane and wedge sliding) or topple (testing for plane and wedge toppling) modes.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;&amp;lt;a href="http://link.springer.com/article/10.1007/s11069-011-9771-2."&amp;gt;G&amp;uuml;nther A., Wienh&amp;ouml;fer J., Konietzky H. (2012) Automated mapping of rock slope geometry, kinematics and stability with RSS-GIS. Natural Hazards, 61, 29-49.&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_slope_stability.2</ows:Identifier>
      <ows:Title>SHALSTAB</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;This tool is a realization of the SHALSTAB (Shallow Slope Stability) model from Montgomery &amp; Dietrich (1994). The model computes grid cell critical shallow groundwater recharge values (CR in mm/day) as a measure for relative shallow slope stability, utilizing a simple model that combines a steady-state hydrologic model (a topographic wetness index) to predict groundwater pressures with an infinite slope stability model. For computation, a slope (in radians) and a catchment area (in m2) grid are required. Additionally, information on material density (g/cm3), material friction angle (&amp;deg;), material hydraulic conductivity (m/hr), bulk cohesion (MPa) and depth to potential shear plane (m) are required that can be specified either globally or through grids. The tool produces a continuous CR (mm/day) raster with unconditionally stable cells blanked, and unconditionally unstable cells as CR = 0. Optionally, a classified CR grid can be calculated representing seven stability classes.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Reference: &amp;lt;a href="http://www.agu.org/pubs/crossref/1994/93WR02979.shtml"&amp;gt;Montgomery D. R., Dietrich, W. E. (1994) A physically based model for the topographic control on shallow landsliding. Water Resources Research, 30, 1153-1171.&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_kriging.0</ows:Identifier>
      <ows:Title>Ordinary Kriging</ows:Title>
      <ows:Abstract>Ordinary Kriging for grid interpolation from irregular sample points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_kriging.1</ows:Identifier>
      <ows:Title>Simple Kriging</ows:Title>
      <ows:Abstract>Simple Kriging for grid interpolation from irregular sample points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_kriging.3</ows:Identifier>
      <ows:Title>Regression Kriging</ows:Title>
      <ows:Abstract>Regression Kriging for grid interpolation from irregular sample points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_kriging.4</ows:Identifier>
      <ows:Title>Variogram (Dialog)</ows:Title>
      <ows:Abstract>Variogram (Dialog)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_kriging.2</ows:Identifier>
      <ows:Title>Universal Kriging</ows:Title>
      <ows:Abstract>Universal Kriging for grid interpolation from irregular sample points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.shapes_transect.0</ows:Identifier>
      <ows:Title>Transect through polygon shapefile</ows:Title>
      <ows:Abstract>Transect for lines and polygon shapefiles&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The goal of this tool is to create a transect along a line through a polygon map.&amp;lt;br/&amp;gt;Eg&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;|____ST1_____!_ST2_!__ST1__!_______ST#_____|&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;(Soil type 1 etc...)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;This is done by creating a table with the ID of each line, the distance &amp;lt;br/&amp;gt;to the starting point and the different transects:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;pre&amp;gt;|  line_id  |  start  |  end  |  code/field  |&amp;lt;br/&amp;gt;|    0      |    0    |  124  |     ST1      |&amp;lt;br/&amp;gt;|    0      |   124   |  300  |     ST2      |&amp;lt;br/&amp;gt;|    0      |   300   | 1223  |     ST1      |&amp;lt;br/&amp;gt;|    0      |  1223   | 2504  |     ST3      |&amp;lt;br/&amp;gt;|    1      |    0    |  200  |     ST4      |&amp;lt;br/&amp;gt;|   ...     |   ...   |  ...  |     ...      |&amp;lt;/pre&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The tool requires an input shape with all the line transects [Transect_Line] &amp;lt;br/&amp;gt;and a polygon theme [Theme]. You also have to select which field you want to have in &amp;lt;br/&amp;gt;the resulting table [Transect_Result]. This can be an ID of the polygon theme if you &amp;lt;br/&amp;gt;want to link the tables later on, or any other field [Theme_Field].&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.6</ows:Identifier>
      <ows:Title>Kernel Density Estimation</ows:Title>
      <ows:Abstract>Kernel density estimation. If any point is currently in selection only selected points are taken into account.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Fotheringham, A.S., Brunsdon, C., Charlton, M. (2000): Quantitative Geography. Sage. 270p.&amp;lt;br/&amp;gt;- Lloyd, C.D. (2010): Spatial data analysis - An introduction for GIS users. Oxford. 206p.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.5</ows:Identifier>
      <ows:Title>Triangulation</ows:Title>
      <ows:Abstract>Gridding of a shapes layer using Delaunay Triangulation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.9</ows:Identifier>
      <ows:Title>Polygons to Grid</ows:Title>
      <ows:Abstract>Gridding of polygons. If any polygons are selected, only these will be gridded.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.0</ows:Identifier>
      <ows:Title>Shapes to Grid</ows:Title>
      <ows:Abstract>Gridding of a shapes layer. If some shapes are selected, only these will be gridded.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.7</ows:Identifier>
      <ows:Title>Angular Distance Weighted</ows:Title>
      <ows:Abstract>Angular Distance Weighted (ADW) grid interpolation from irregular distributed points.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Shepard, D. (1968): A Two-Dimensional Interpolation Function for Irregularly-Spaced Data. Proceedings of the 1968 23rd ACM National Conference, pp.517-524, &amp;lt;a target="_blank" href="http://champs.cecs.ucf.edu/Library/Conference_Papers/pdfs/A%20two-dimentional%20intepolation%20function%20for%20irregalarly-spaced%20data.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.1</ows:Identifier>
      <ows:Title>Inverse Distance Weighted</ows:Title>
      <ows:Abstract>Inverse distance grid interpolation from irregular distributed points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.3</ows:Identifier>
      <ows:Title>Natural Neighbour</ows:Title>
      <ows:Abstract>Natural Neighbour method for grid interpolation from irregular distributed points. This tool makes use of the 'nn - Natural Neighbours interpolation library' created and maintained by Pavel Sakov, CSIRO Marine Research. Find more information about this library at:&amp;lt;br/&amp;gt;&amp;lt;a href="http://github.com/sakov/nn-c"&amp;gt;github.com/sakov/nn-c&amp;lt;/a&amp;gt;.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.10</ows:Identifier>
      <ows:Title>Polygon Categories to Grid</ows:Title>
      <ows:Abstract>This tool has been designed to rasterize polygons representing categories and selects that category, which has maximum coverage of a cell. The advantage using this tool (instead the more simple 'Shapes to Grid' or 'Polygons to Grid' tools) is that it summarizes all polygon coverages belonging to the same category. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.8</ows:Identifier>
      <ows:Title>Grid Cell Area Covered by Polygons</ows:Title>
      <ows:Abstract>This tool calculates for each grid cell of the selected grid system the area that is covered by the input polygons layer. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.4</ows:Identifier>
      <ows:Title>Modifed Quadratic Shepard</ows:Title>
      <ows:Abstract>Modified  Quadratic Shepard method for grid interpolation from irregular distributed points. This tool is based on Tool 660 in TOMS.&amp;lt;br/&amp;gt;QSHEP2D: Fortran routines implementing the Quadratic Shepard method for bivariate interpolation of scattered data (see R. J. Renka, ACM TOMS 14 (1988) pp.149-150).&amp;lt;br/&amp;gt;Classes: E2b. Interpolation of scattered, non-gridded multivariate data.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_gridding.2</ows:Identifier>
      <ows:Title>Nearest Neighbour</ows:Title>
      <ows:Abstract>Nearest Neighbour method for grid interpolation from irregular distributed points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_points.0</ows:Identifier>
      <ows:Title>Variogram</ows:Title>
      <ows:Abstract>Variogram</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_points.1</ows:Identifier>
      <ows:Title>Variogram Cloud</ows:Title>
      <ows:Abstract>Variogram Cloud</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_points.3</ows:Identifier>
      <ows:Title>Minimum Distance Analysis</ows:Title>
      <ows:Abstract>Minimum Distance Analysis</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_points.4</ows:Identifier>
      <ows:Title>Spatial Point Pattern Analysis</ows:Title>
      <ows:Abstract>Basic measures for spatial point patterns.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.statistics_points.2</ows:Identifier>
      <ows:Title>Variogram Surface</ows:Title>
      <ows:Abstract>Variogram Surface</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.6</ows:Identifier>
      <ows:Title>Cluster Analysis</ows:Title>
      <ows:Abstract>Cluster Analysis for tables.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Iterative Minimum Distance:&amp;lt;br/&amp;gt;- Forgy, E. (1965):&amp;lt;br/&amp;gt;  'Cluster Analysis of multivariate data: efficiency vs. interpretability of classifications',&amp;lt;br/&amp;gt;  Biometrics 21:768&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Hill-Climbing:- Rubin, J. (1967):&amp;lt;br/&amp;gt;  'Optimal Classification into Groups: An Approach for Solving the Taxonomy Problem',&amp;lt;br/&amp;gt;  J. Theoretical Biology, 15:103-144&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.5</ows:Identifier>
      <ows:Title>Running Average</ows:Title>
      <ows:Abstract>Running Average</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.14</ows:Identifier>
      <ows:Title>Cluster Analysis (Shapes)</ows:Title>
      <ows:Abstract>Cluster Analysis for tables.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Iterative Minimum Distance:&amp;lt;br/&amp;gt;- Forgy, E. (1965):&amp;lt;br/&amp;gt;  'Cluster Analysis of multivariate data: efficiency vs. interpretability of classifications',&amp;lt;br/&amp;gt;  Biometrics 21:768&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Hill-Climbing:- Rubin, J. (1967):&amp;lt;br/&amp;gt;  'Optimal Classification into Groups: An Approach for Solving the Taxonomy Problem',&amp;lt;br/&amp;gt;  J. Theoretical Biology, 15:103-144&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.17</ows:Identifier>
      <ows:Title>Record Statistics (Shapes)</ows:Title>
      <ows:Abstract>This tool calculates record-wise the statistics over the selected attribute fields.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.9</ows:Identifier>
      <ows:Title>Fill Gaps in Records</ows:Title>
      <ows:Abstract>This tool fills gaps in the table records. for the chosen attribute field it interpolates values for those records, which have no-data, using existing data from the surrounding records. If no order field is specified, simply the record index is taken as coordinate, for which the interpolation will be performed. Notice: extrapolation is not supported, i.e. only those gaps will be filled that have lower and higher values surrounding them following the record order. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.7</ows:Identifier>
      <ows:Title>Principal Component Analysis</ows:Title>
      <ows:Abstract>Principal Component Analysis (PCA) for tables. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.15</ows:Identifier>
      <ows:Title>Field Statistics</ows:Title>
      <ows:Abstract>The tools allows one to calculate statistics (n, min, max, range, sum, mean, variance and standard deviation) for attribute fields of tables, shapefiles or point clouds.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.12</ows:Identifier>
      <ows:Title>Minimum Redundancy Feature Selection</ows:Title>
      <ows:Abstract>Identify the most relevant features for subsequent classification of tabular data.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The minimum Redundancy Maximum Relevance (mRMR) feature selection algorithm has been developed by Hanchuan Peng &amp;lt;hanchuan.peng@gmail.com&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Feature selection based on mutual information: criteria of max-dependency, max-relevance, and min-redundancy. Hanchuan Peng, Fuhui Long, and Chris Ding, IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. 27, No. 8, pp.1226-1238, 2005.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Minimum redundancy feature selection from microarray gene expression data,&amp;lt;br/&amp;gt;Chris Ding, and Hanchuan Peng, Journal of Bioinformatics and Computational Biology, Vol. 3, No. 2, pp.185-205, 2005.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Hanchuan Peng's mRMR Homepage at &amp;lt;a target="_blank" href="http://penglab.janelia.org/proj/mRMR/"&amp;gt;http://penglab.janelia.org/proj/mRMR/&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.18</ows:Identifier>
      <ows:Title>Aggregate Values by Attributes</ows:Title>
      <ows:Abstract>Aggregate Values by Attributes</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.11</ows:Identifier>
      <ows:Title>Find Field of Extreme Value</ows:Title>
      <ows:Abstract>Identifies from the selected attributes that one, which has the maximum or respectively the minimum value. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.1</ows:Identifier>
      <ows:Title>Field Calculator</ows:Title>
      <ows:Abstract>The table calculator calculates a new attribute from existing attributes based on a mathematical formula. Attributes are addressed by the character 'f' (for 'field') followed by the field number (i.e.: f1, f2, ..., fn) or by the field name in square brackets (e.g.: [Field Name]).&amp;lt;br/&amp;gt;Examples:&amp;lt;br/&amp;gt;- sin(f1) * f2 + f3&amp;lt;br/&amp;gt;- [Population] / [Area]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;If the use no-data flag is unchecked and a no-data value appears in a record's input, no calculation is performed for it and the result is set to no-data.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Following operators are available for the formula definition:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;nodata()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns tables's no-data value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;isnodata(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is a no-data value, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.16</ows:Identifier>
      <ows:Title>Record Statistics</ows:Title>
      <ows:Abstract>This tool calculates record-wise the statistics over the selected attribute fields.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.8</ows:Identifier>
      <ows:Title>Fill Gaps in Ordered Records</ows:Title>
      <ows:Abstract>This tool inserts records where the chosen order field has gaps expecting an increment of one. It is assumed that the order field represents integers.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.table_calculus.2</ows:Identifier>
      <ows:Title>Field Calculator [Shapes]</ows:Title>
      <ows:Abstract>The table calculator calculates a new attribute from existing attributes based on a mathematical formula. Attributes are addressed by the character 'f' (for 'field') followed by the field number (i.e.: f1, f2, ..., fn) or by the field name in square brackets (e.g.: [Field Name]).&amp;lt;br/&amp;gt;Examples:&amp;lt;br/&amp;gt;- sin(f1) * f2 + f3&amp;lt;br/&amp;gt;- [Population] / [Area]&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;If the use no-data flag is unchecked and a no-data value appears in a record's input, no calculation is performed for it and the result is set to no-data.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Following operators are available for the formula definition:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;nodata()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns tables's no-data value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;isnodata(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is a no-data value, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.6</ows:Identifier>
      <ows:Title>Fourier Transform Inverse (ViGrA)</ows:Title>
      <ows:Abstract>Fourier Transform Inverse (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.5</ows:Identifier>
      <ows:Title>Fourier Transform (ViGrA)</ows:Title>
      <ows:Abstract>Fourier Transform (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.9</ows:Identifier>
      <ows:Title>Random Forest Classification (ViGrA)</ows:Title>
      <ows:Abstract>Random Forest Classification (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.0</ows:Identifier>
      <ows:Title>Smoothing (ViGrA)</ows:Title>
      <ows:Abstract>Based on the code example "smooth.cxx" by Ullrich Koethe.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.7</ows:Identifier>
      <ows:Title>Fourier Transform (Real, ViGrA)</ows:Title>
      <ows:Abstract>Fourier Transform (Real, ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.11</ows:Identifier>
      <ows:Title>Random Forest Table Classification (ViGrA)</ows:Title>
      <ows:Abstract>Random Forest Table Classification (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.1</ows:Identifier>
      <ows:Title>Edge Detection (ViGrA)</ows:Title>
      <ows:Abstract>Edge Detection (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.3</ows:Identifier>
      <ows:Title>Distance (ViGrA)</ows:Title>
      <ows:Abstract>Distance to feature cells on a raster. Feature cells are all cells not representing a no-data value.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.10</ows:Identifier>
      <ows:Title>Random Forest Presence Prediction (ViGrA)</ows:Title>
      <ows:Abstract>Random Forest Presence Prediction (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.8</ows:Identifier>
      <ows:Title>Fourier Filter (ViGrA)</ows:Title>
      <ows:Abstract>Fourier Filter (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.4</ows:Identifier>
      <ows:Title>Watershed Segmentation (ViGrA)</ows:Title>
      <ows:Abstract>Note that the watershed algorithm usually results in an oversegmentation (i.e., too many regions), but its boundary localization is quite good.&amp;lt;br/&amp;gt;Based on the code example "watershed.cxx" by Ullrich Koethe.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_vigra.2</ows:Identifier>
      <ows:Title>Morphological Filter (ViGrA)</ows:Title>
      <ows:Abstract>Morphological Filter (ViGrA)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.6</ows:Identifier>
      <ows:Title>Confusion Matrix (Polygons / Grid)</ows:Title>
      <ows:Abstract>Compares a classified polygons layer with grid classes and creates a confusion matrix and derived coefficients. Grid classes have to be defined with a look-up table and values must match those of the polygon classes for the subsequent comparison. This tool is typically used for a quality assessment of a supervised classification. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.5</ows:Identifier>
      <ows:Title>Supervised Classification for Tables</ows:Title>
      <ows:Abstract>Supervised classification for attribute data. To train the classifier choose an attribute that provides class identifiers for those records, for which the target class is known, and no data for all other records.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.0</ows:Identifier>
      <ows:Title>Supervised Classification for Grids</ows:Title>
      <ows:Abstract>Supervised Classification for Grids</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.1</ows:Identifier>
      <ows:Title>K-Means Clustering for Grids</ows:Title>
      <ows:Abstract>This tool implements the K-Means cluster analysis for grids in two variants, iterative minimum distance (Forgy 1965) and hill climbing (Rubin 1967). </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.3</ows:Identifier>
      <ows:Title>Decision Tree</ows:Title>
      <ows:Abstract>Decision Tree</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.4</ows:Identifier>
      <ows:Title>Supervised Classification for Shapes</ows:Title>
      <ows:Abstract>Supervised classification for attribute data. To train the classifier choose an attribute that provides class identifiers for those records, for which the target class is known, and no data for all other records.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_classification.2</ows:Identifier>
      <ows:Title>Confusion Matrix (Two Grids)</ows:Title>
      <ows:Abstract>Compares two classified grids and creates a confusion matrix and derived coefficients as well as the combinations of both classifications as new grid. Grid classes have to be defined with a look-up table and values of both grids must match each other for the subsequent comparison. A typical application is a change detection analysis based on land cover classification of satellite imagery. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.6</ows:Identifier>
      <ows:Title>Visibility (points)</ows:Title>
      <ows:Abstract>This tool computes a visibility analysis using observer points from a point shapefile.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.5</ows:Identifier>
      <ows:Title>Topographic Openness</ows:Title>
      <ows:Abstract>Topographic openness expresses the dominance (positive) or enclosure (negative) of a landscape location. See Yokoyama et al. (2002) for a precise definition. Openness has been related to how wide a landscape can be viewed from any position. It has been proven to be a meaningful input for computer aided geomorphological mapping. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.0</ows:Identifier>
      <ows:Title>Analytical Hillshading</ows:Title>
      <ows:Abstract>This tool performs an analytical hillshade computation for an elevation grid. The 'Standard' method simply calculates the angle at which light coming from the position of the light source would hit the surface. This method can produce angles greater than 90 degree. With the second method all values are kept within the range of 0-90 degree. It can be enhanced with shadowing effects, where shadowed cells will be marked with a value of exactly 90 degree. 'Shadows Only' creates a mask for the shadowed areas and sets all other cells to no-data. 'Combined Shading' takes the values of the standard method and multiplies these with the normalized slope. 'Ambient Occlusion' is based on the concepts of Tarini et al. (2006), but only the northern half-space is considered here. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.7</ows:Identifier>
      <ows:Title>Potential Annual Insolation</ows:Title>
      <ows:Abstract>Calculates the annual potential total insolation for given time steps and stores resulting time series in a grid collection. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.3</ows:Identifier>
      <ows:Title>Sky View Factor</ows:Title>
      <ows:Abstract>Calculation of visible sky, sky view factor (SVF) and related parameters.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.8</ows:Identifier>
      <ows:Title>Geomorphons</ows:Title>
      <ows:Abstract>This tool derives so called geomorphons, which represent categories of terrain forms, from a digital elevation model using a machine vision approach. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_lighting.4</ows:Identifier>
      <ows:Title>Topographic Correction</ows:Title>
      <ows:Abstract>&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Civco, D. L. (1989): 'Topographic Normalization of Landsat Thematic Mapper Digital Imagery', Photogrammetric Engineering and Remote Sensing, 55(9), pp.1303-1309.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Law, K.H., Nichol, J. (2004): 'Topographic Correction for Differential Illumination Effects on Ikonos Satellite Imagery', ISPRS 2004 International Society for Photogrammetry and Remote Sensing, &amp;lt;a href="http://www.cartesia.org/geodoc/isprs2004/comm3/papers/347.pdf"&amp;gt;pdf&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Phua, M.-H., Saito, H. (2003): 'Estimation of biomass of a mountainous tropical forest using Landsat TM data', Canadian Journal of Remote Sensing, 29(4), pp.429-440.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Riano, D., Chuvieco, E. Salas, J., Aguado, I. (2003): 'Assessment of Different Topographic Corrections in Landsat-TM Data for Mapping Vegetation Types', IEEE Transactions on Geoscience and Remote Sensing, 41(5), pp.1056-1061, &amp;lt;a href="http://www.geogra.uah.es/~emilio/pdf/Riano2003b.pdf"&amp;gt;pdf&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Teillet, P.M., Guindon, B., Goodenough, D.G. (1982): 'On the slope-aspect correction of multispectral scanner data', Canadian Journal of Remote Sensing, 8(2), pp.1537-1540.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.5</ows:Identifier>
      <ows:Title>Monthly Global by Latitude</ows:Title>
      <ows:Abstract>Orbital parameters used here are based on the work of Andre L. Berger and its implementation from the NASA Goddard Institute for Space Studies (GISS). Berger's orbital parameters are considered to be valid for approximately 1 million years. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.21</ows:Identifier>
      <ows:Title>PhenIps (Table)</ows:Title>
      <ows:Abstract>A comprehensive phenology model of Ips typographus (L.) (Col., Scolytinae) as a tool for hazard rating of bark beetle infestation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.22</ows:Identifier>
      <ows:Title>PhenIps (Grids)</ows:Title>
      <ows:Abstract>A comprehensive phenology model of Ips typographus (L.) (Col., Scolytinae) as a tool for hazard rating of bark beetle infestation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.14</ows:Identifier>
      <ows:Title>Frost Change Frequency</ows:Title>
      <ows:Abstract>This tool calculates statistics about the frost change frequency either from monthly or daily minimum and maximum temperatures. In case of monthly observations these will be spline interpolated to gain a daily resolution. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.17</ows:Identifier>
      <ows:Title>Snow Cover</ows:Title>
      <ows:Abstract>The 'Snow Cover' tool uses a simple model to estimate snow cover statistics from climate data. When temperature falls below zero any precipitation is accumulated as snow. Temperatures above zero will diminish accumulated snow successively until it is gone completely. Simulation is done on a daily basis. If you supply the tool with monthly averages, temperatures will be interpolated using a spline and precipitation will be splitted into separate events. The latter is done with respect to the monthly mean temperature, i.e. the higher the temperature the more concentrated are precipitation events and vice versa. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.9</ows:Identifier>
      <ows:Title>Sunrise and Sunset</ows:Title>
      <ows:Abstract>This tool calculates the time of sunrise and sunset and the resulting day length for each cell of the target grid. The target grid needs to provide information about its coordinate system. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.0</ows:Identifier>
      <ows:Title>Multi Level to Surface Interpolation</ows:Title>
      <ows:Abstract>Multi Level to Surface Interpolation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.7</ows:Identifier>
      <ows:Title>Daily to Hourly ETpot</ows:Title>
      <ows:Abstract>Derive hourly from daily evapotranspiration using sinusoidal distribution. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.15</ows:Identifier>
      <ows:Title>Thermic Belt Classification</ows:Title>
      <ows:Abstract>Calculates the thermal belts based on mean temperature and length of the growing season.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.18</ows:Identifier>
      <ows:Title>Growing Degree Days</ows:Title>
      <ows:Abstract>This tool calculates growing degree days from daily or from spline interpolated monthly observations.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.11</ows:Identifier>
      <ows:Title>Tree Growth Season</ows:Title>
      <ows:Abstract>The 'Tree Growth Season' tool estimates the potential number of days suitable for tree growth as well as the average temperature for these days. The estimation needs monthly data of mean, minimum, and maximum temperature and precipitation. Internally a soil water balance model is run on a daily basis. Using the given thresholds a relative tree line height can optionally be estimated.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.1</ows:Identifier>
      <ows:Title>Multi Level to Points Interpolation</ows:Title>
      <ows:Abstract>Multi Level to Points Interpolation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.13</ows:Identifier>
      <ows:Title>Wind Effect Correction</ows:Title>
      <ows:Abstract>Wind effect correction using generalized logistic functions.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.20</ows:Identifier>
      <ows:Title>Soil Water Balance</ows:Title>
      <ows:Abstract>This tool calculates the water balance for the selected position on a daily basis. Needed input is monthly data of mean, minimum, and maximum temperature as well as precipitation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.19</ows:Identifier>
      <ows:Title>Climate Classification</ows:Title>
      <ows:Abstract>This tool applies a climate classification scheme using monthly mean temperature and precipitation data. Currently implemented classification schemes are Koeppen-Geiger (1936), Thornthwaite (1931), and Troll-Paffen (1964). Because of some less precise definitions the Troll-Paffen scheme still needs some revisions. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.3</ows:Identifier>
      <ows:Title>Annual Course of Daily Insolation</ows:Title>
      <ows:Abstract>Orbital parameters used here are based on the work of Andre L. Berger and its implementation from the NASA Goddard Institute for Space Studies (GISS). Berger's orbital parameters are considered to be valid for approximately 1 million years. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.10</ows:Identifier>
      <ows:Title>Bioclimatic Variables</ows:Title>
      <ows:Abstract>This tool calculates biogically meaningful variables from monthly climate data (mean, minimum and maximum temperature and precipitation), as provided e.g. by the &amp;lt;a href="http://worldclim.org"&amp;gt;WorldClim - Global Climate Data&amp;lt;/a&amp;gt; project.&amp;lt;br/&amp;gt;&amp;lt;p&amp;gt;The implementation follows the definitions given by Jeremy van der Wal at &amp;lt;a href="https://rforge.net/doc/packages/climates/bioclim.html"&amp;gt;BioClim - Bioclimatic Variables&amp;lt;/a&amp;gt;:&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Annual Mean Temperature:&amp;lt;/b&amp;gt; The mean of all the monthly mean temperatures. Each monthly mean temperature is the mean of that month's maximum and minimum temperature.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Mean Diurnal Range:&amp;lt;/b&amp;gt; The annual mean of all the monthly diurnal temperature ranges. Each monthly diurnal range is the difference between that month's maximum and minimum temperature.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Isothermality:&amp;lt;/b&amp;gt; The mean diurnal range (parameter 2) divided by the annual temperature range (parameter 7).&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Temperature Seasonality:&amp;lt;/b&amp;gt; returns either&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt; the temperature coefficient of variation as the standard deviation of the monthly mean temperatures expressed as a percentage of the mean of those temperatures (i.e. the annual mean). For this calculation, the mean in degrees Kelvin is used. This avoids the possibility of having to divide by zero, but does mean that the values are usually quite small.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt; the standard deviation of the monthly mean temperatures.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Maximum Temperature of Warmest Period:&amp;lt;/b&amp;gt; The highest temperature of any monthly maximum temperature.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Minimum Temperature of Coldest Period:&amp;lt;/b&amp;gt; The lowest temperature of any monthly minimum temperature.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Temperature Annual Range:&amp;lt;/b&amp;gt; The difference between the Maximum Temperature of Warmest Period and the Minimum Temperature of Coldest Period.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Mean Temperature of Wettest Quarter:&amp;lt;/b&amp;gt; The wettest quarter of the year is determined (to the nearest month), and the mean temperature of this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Mean Temperature of Driest Quarter:&amp;lt;/b&amp;gt; The driest quarter of the year is determined (to the nearest month), and the mean temperature of this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Mean Temperature of Warmest Quarter:&amp;lt;/b&amp;gt; The warmest quarter of the year is determined (to the nearest month), and the mean temperature of this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Mean Temperature of Coldest Quarter:&amp;lt;/b&amp;gt; The coldest quarter of the year is determined (to the nearest month), and the mean temperature of this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Annual Precipitation:&amp;lt;/b&amp;gt; The sum of all the monthly precipitation estimates.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Wettest Period:&amp;lt;/b&amp;gt; The precipitation of the wettest month.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Driest Period:&amp;lt;/b&amp;gt; The precipitation of the driest month.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation Seasonality:&amp;lt;/b&amp;gt; The Coefficient of Variation is the standard deviation of the monthly precipitation estimates expressed as a percentage of the mean of those estimates (i.e. the annual mean).&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Wettest Quarter:&amp;lt;/b&amp;gt; The wettest quarter of the year is determined (to the nearest month), and the total precipitation over this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Driest Quarter:&amp;lt;/b&amp;gt; The driest quarter of the year is determined (to the nearest month), and the total precipitation over this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Warmest Quarter:&amp;lt;/b&amp;gt; The warmest quarter of the year is determined (to the nearest month), and the total precipitation over this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Precipitation of Coldest Quarter:&amp;lt;/b&amp;gt; The coldest quarter of the year is determined (to the nearest month), and the total precipitation over this period is calculated.&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The quarterly parameters are not aligned to any calendar quarters. BioClim's definition of a quarter is any consecutive 3 months. For example, the driest quarter will be the 3 consecutive months that are drier than any other set of 3 consecutive months.&amp;lt;/p&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.8</ows:Identifier>
      <ows:Title>ETpot (after Hargreaves, Grid)</ows:Title>
      <ows:Abstract>Estimation of daily potential evapotranspiration from daily average, minimum and maximum temperatures using Hargreave's empirical equation. In order to estimate extraterrestrial net radiation geographic latitude of observation and Julian day have to be supplied too. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.4</ows:Identifier>
      <ows:Title>Daily Insolation over Latitude</ows:Title>
      <ows:Abstract>Orbital parameters used here are based on the work of Andre L. Berger and its implementation from the NASA Goddard Institute for Space Studies (GISS). Berger's orbital parameters are considered to be valid for approximately 1 million years. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.climate_tools.2</ows:Identifier>
      <ows:Title>Earth's Orbital Parameters</ows:Title>
      <ows:Abstract>Orbital parameters used here are based on the work of Andre L. Berger and its implementation from the NASA Goddard Institute for Space Studies (GISS). Berger's orbital parameters are considered to be valid for approximately 1 million years. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.6</ows:Identifier>
      <ows:Title>Destriping with Mask</ows:Title>
      <ows:Abstract>Destriping filter removes straight parallel stripes in raster data. It uses two low-pass filters elongated in the stripes direction; the first one is 1 pixel unit wide while the second one is wide as the striping wavelength. Their difference is the striping error which is removed from the original data to obtain the destriped DEM. This method is equivalent to that proposed by Oimoen (2000). With destriping 2 you can choose a range of value (min-max) from the input grid and a range of value (Mask min - Mask max) from a mask grid to select the target cells. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Oimoen, M.J. (2000): An Effective Filter For Removal Of Production Artifacts. In U.S. Geological Survey 7.5-Minute Digital Elevation Models. Proceedings of the Fourteenth International Conference on Applied Geologic Remote Sensing, 6-8 November, Las Vegas, NV.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Perego, A. (2009): SRTM DEM destriping with SAGA GIS: consequences on drainage network extraction. &amp;lt;a target="_blank" href="http://www.webalice.it/alper78/saga_mod/destriping/destriping.html"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.5</ows:Identifier>
      <ows:Title>Destriping</ows:Title>
      <ows:Abstract>Destriping filter removes straight parallel stripes in raster data. It uses two low-pass filters elongated in the stripes direction; the first one is 1 pixel unit wide while the second one is wide as the striping wavelength. Their difference is the striping error which is removed from the original data to obtain the destriped DEM. This method is equivalent to that proposed by Oimoen (2000). &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Oimoen, M.J. (2000): An Effective Filter For Removal Of Production Artifacts. In U.S. Geological Survey 7.5-Minute Digital Elevation Models. Proceedings of the Fourteenth International Conference on Applied Geologic Remote Sensing, 6-8 November, Las Vegas, NV.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Perego, A. (2009): SRTM DEM destriping with SAGA GIS: consequences on drainage network extraction. &amp;lt;a target="_blank" href="http://www.webalice.it/alper78/saga_mod/destriping/destriping.html"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.0</ows:Identifier>
      <ows:Title>Average With Thereshold 1</ows:Title>
      <ows:Abstract>Average With Thereshold for Grids calculates average in X and Y distances unsing only the values that differ form central pixel less than a specified threshold. It's useful to remove noise whit a known maximum reducing the loss of informations</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.7</ows:Identifier>
      <ows:Title>Directional Average</ows:Title>
      <ows:Abstract>directional1 average for Grids</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.1</ows:Identifier>
      <ows:Title>Average With Thereshold 2</ows:Title>
      <ows:Abstract>Average 2 With Thereshold for Grids calculates average in X and Y distances unsing only the values that differ form central pixel less than a specified threshold. Each value has a weight which is inversely proportional to the distance (method 1).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.3</ows:Identifier>
      <ows:Title>Average With Mask 1</ows:Title>
      <ows:Abstract>Average With Mask 1 calculates average for cells specified by a mask grid. Cell excluded by the mask grid are NOT used in the average calculation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.4</ows:Identifier>
      <ows:Title>Average With Mask 2</ows:Title>
      <ows:Abstract>Average With Mask 2 calculates average for cells specified by a mask grid. However cell excluded by the mask grid are used in the average calculation for right pixels.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.contrib_perego.2</ows:Identifier>
      <ows:Title>Average With Thereshold 3</ows:Title>
      <ows:Abstract>Average 3 With Thereshold for Grids calculates average in X and Y distances unsing only the values that differ form central pixel less than a specified threshold. Each value has a weight which is inversely proportional to the distance (method 2).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_photogrammetry.1</ows:Identifier>
      <ows:Title>Colorisation (PC)</ows:Title>
      <ows:Abstract>This tool attaches the color information from a RGB image to Laser Points.&amp;lt;br/&amp;gt; The RGB Image and the Point Cloud to be colorised are the inputs along with the interior and exterior orientation parameters of the camera. The necessary interior orientation parameters are Focal Length (mm), Pixel Size (um), Principal Point Offsets (pixels) and optionally the Radial Distortion Parameters. The distortion model being used is as follows: &amp;lt;br/&amp;gt;	 x_d = x_u (1 - dR)&amp;lt;br/&amp;gt;	 y_d = y_u (1 - dR) &amp;lt;br/&amp;gt; where, dR = K1 * r_u ^ 2 + K2 * r_u ^ 4 + K3 * r_u ^ 6,&amp;lt;br/&amp;gt; r_u ^ 2  = x_u ^ 2 + y_u ^ 2,&amp;lt;br/&amp;gt; x_u, y_u are the undistorted (corrected) image coordinates in mm,&amp;lt;br/&amp;gt; x_d, y_d are the distorted (observed) image coordinates in mm,&amp;lt;br/&amp;gt; K1 is in [mm ^ -2], K2 is in [mm ^ -4],  K3 is in [mm ^ -6].&amp;lt;br/&amp;gt;The necessary exterior orientation parameters are the coordinates of the Projection Center and the Cardan angles Omega, Kappa and Alpha. The Cardan angles refer to the following transformation between image coordinates (x_image) and global coordinates (X_Global): &amp;lt;br/&amp;gt; x_image = R_1(omega) * R_2(kappa) * R_3(alpha) * X_Global &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt; [Optional] If the Time Stamp of the RGB Image is given, an acceptable time difference between the points and the image must provided in order to colorise only those points falling that range. If no time is given all points are colorised.&amp;lt;br/&amp;gt; The result is a colorised point cloud.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_landscape_evolution.0</ows:Identifier>
      <ows:Title>SaLEM</ows:Title>
      <ows:Abstract>This is the implementation of a Soil and Landscape Evolution Model (SaLEM) for the spatiotemporal investigation of soil parent material evolution following a lithologically differentiated approach. The model needs a digital elevation model and (paleo-)climatic data for the simulation of weathering, erosion and transport processes. Weathering is controlled by user defined functions in dependence of climate conditions, local slope, regolith cover and outcropping bedrock lithology. Lithology can be supplied as a set of grids, of which each grid represents the top elevation of the underlying bedrock type. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_svm.0</ows:Identifier>
      <ows:Title>SVM Classification</ows:Title>
      <ows:Abstract>Support Vector Machine (SVM) based classification for grids.&amp;lt;br/&amp;gt;Reference:&amp;lt;br/&amp;gt;Chang, C.-C. / Lin, C.-J. (2011): A library for support vector machines. ACM Transactions on Intelligent Systems and Technology, vol.2/3, p.1-27. &amp;lt;a target="_blank" href="http://www.csie.ntu.edu.tw/~cjlin/libsvm"&amp;gt;LIBSVM Homepage&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.6</ows:Identifier>
      <ows:Title>Colour Normalized Spectral Sharpening</ows:Title>
      <ows:Abstract>Colour normalized spectral sharpening.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.5</ows:Identifier>
      <ows:Title>Colour Normalized Brovey Sharpening</ows:Title>
      <ows:Abstract>Colour normalized (Brovey) sharpening.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.14</ows:Identifier>
      <ows:Title>Import Landsat Scene</ows:Title>
      <ows:Abstract>Import Landsat scenes including metadata from Landsat metadata files. Band data have to be stored in the same folder as the chosen metadata file in uncompressed GeoTIFF format. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.9</ows:Identifier>
      <ows:Title>Automated Cloud Cover Assessment</ows:Title>
      <ows:Abstract>Automated Cloud-Cover Assessment (ACCA) for Landsat TM/ETM+ imagery as proposed by Irish (2000). This tool incorporates E.J. Tizado's GRASS GIS implementation (i.landsat.acca).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.0</ows:Identifier>
      <ows:Title>Vegetation Index (Distance Based)</ows:Title>
      <ows:Abstract>Distance based vegetation indices.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.7</ows:Identifier>
      <ows:Title>Principal Component Based Image Sharpening</ows:Title>
      <ows:Abstract>Principal component based image sharpening.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.12</ows:Identifier>
      <ows:Title>Local Statistical Measures</ows:Title>
      <ows:Abstract>&amp;lt;hr&amp;gt;&amp;lt;h4&amp;gt;References&amp;lt;/h4&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;b&amp;gt;Zhang, Y. (2001):&amp;lt;/b&amp;gt; Texture-integrated classification of urban treed areas in high-resolution color-infrared imagery. Photogrammetric Engineering and Remote Sensing 67(12), 1359-1365. &amp;lt;a href="http://web.pdx.edu/~nauna/2001_dec_1359-1365.pdf"&amp;gt;online&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.11</ows:Identifier>
      <ows:Title>Textural Features</ows:Title>
      <ows:Abstract>Textural Features</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.1</ows:Identifier>
      <ows:Title>Vegetation Index (Slope Based)</ows:Title>
      <ows:Abstract>Slope based vegetation indices.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Difference Vegetation Index&amp;lt;br/&amp;gt;    DVI = NIR - R&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Normalized Difference Vegetation Index (Rouse et al. 1974)&amp;lt;br/&amp;gt;    NDVI = (NIR - R) / (NIR + R)&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Ratio Vegetation Index (Richardson and Wiegand, 1977)&amp;lt;br/&amp;gt;    RVI = R / NIR&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Normalized Ratio Vegetation Index (Baret and Guyot, 1991)&amp;lt;br/&amp;gt;    NRVI = (RVI - 1) / (RVI + 1)&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Transformed Vegetation Index (Deering et al., 1975)&amp;lt;br/&amp;gt;    TVI = [(NIR - R) / (NIR + R) + 0.5]^0.5&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Corrected Transformed Ratio Vegetation Index (Perry and Lautenschlager, 1984)&amp;lt;br/&amp;gt;    CTVI = [(NDVI + 0.5) / abs(NDVI + 0.5)] * [abs(NDVI + 0.5)]^0.5&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Thiam's Transformed Vegetation Index (Thiam, 1997)&amp;lt;br/&amp;gt;    RVI = [abs(NDVI) + 0.5]^0.5&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;li&amp;gt;Soil Adjusted Vegetation Index (Huete, 1988)&amp;lt;br/&amp;gt;    SAVI = [(NIR - R) / (NIR + R)] * (1 + S)&amp;lt;/li&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/ul&amp;gt;(NIR = near infrared, R = red, S = soil adjustment factor)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.13</ows:Identifier>
      <ows:Title>Universal Image Quality Index</ows:Title>
      <ows:Abstract>The Universal Image Quality Index compares two grids (greyscale images) using the three parameters luminance, contrast and structure. This is done for each pixel using a moving window as specified by the kernel radius. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.3</ows:Identifier>
      <ows:Title>Tasseled Cap Transformation</ows:Title>
      <ows:Abstract>Tasseled Cap Transformation as proposed for Landsat Thematic Mapper.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.10</ows:Identifier>
      <ows:Title>Landsat Import with Options</ows:Title>
      <ows:Abstract>This tool facilitates the import and display of Landsat scenes, which have each band given as a single GeoTIFF file.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The development of this tool has been requested and sponsored by Rohan Fisher, Charles Darwin University, Australia. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.4</ows:Identifier>
      <ows:Title>IHS Sharpening</ows:Title>
      <ows:Abstract>Intensity, hue, saturation (IHS) sharpening.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.imagery_tools.2</ows:Identifier>
      <ows:Title>Enhanced Vegetation Index</ows:Title>
      <ows:Abstract>Enhanced Vegetation Index (EVI).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.sim_erosion.0</ows:Identifier>
      <ows:Title>MMF-SAGA Soil Erosion Model</ows:Title>
      <ows:Abstract>Soil erosion modelling with a modified MMF (Morgan-Morgan-Finney) model (Morgan &amp; Duzant 2008).&amp;lt;br/&amp;gt;This tool is called MMF-SAGA because some things have been implemented differently compared to the original publication. The most important are:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;the extension of the model to support spatially distributed modelling&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;the introduction of a "Channel Network" layer&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;the introduction of a "rainfall duration" (time span) parameter&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;the exposure of the flow depth parameter&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;A more detailed description of the model, its modifications, and model application is provided by Setiawan (2012), chapter 6.&amp;lt;br/&amp;gt;Currently, a number of additional grid datasets are outputted to facilitate model evaluation. This can be easily changed within the source code.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;Morgan, R.P.C. (2001)&amp;lt;/b&amp;gt;: A simple approach to soil loss prediction: a revised Morgan-Morgan-Finney model. Catena 44: 305-322.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;Morgan, R.P.C., Duzant, J.H. (2008)&amp;lt;/b&amp;gt;: Modified MMF (Morgan-Morgan-Finney) model for evaluating effects of crops and vegetation cover on soil erosion. Earth Surf. Process. Landforms 32: 90-106.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a href="http://sourceforge.net/projects/saga-gis/files/SAGA%20-%20Documentation/Modules/MMF-SAGA_Setiawan.pdf"&amp;gt;&amp;lt;b&amp;gt;Setiawan, M. A. (2012)&amp;lt;/b&amp;gt;: Integrated Soil Erosion Management in the upper Serayu Watershed, Wonosobo District, Central Java Province, Indonesia. Dissertation at the Faculty of Geo- and Atmospheric Sciences of the University of Innsbruck, Austria.&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.6</ows:Identifier>
      <ows:Title>Flow Accumulation (Parallel)</ows:Title>
      <ows:Abstract>Calculates the catchment area based on the selected elevation values.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.5</ows:Identifier>
      <ows:Title>Flow Accumulation (Trace)</ows:Title>
      <ows:Abstract>Calculates the catchment area based on the selected elevation values.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.0</ows:Identifier>
      <ows:Title>Grid to TIN</ows:Title>
      <ows:Abstract>Creates a TIN from grid points. No data values will be ignored.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.1</ows:Identifier>
      <ows:Title>Grid to TIN (Surface Specific Points)</ows:Title>
      <ows:Abstract>Creates a TIN by identifying (surface) specific points of a grid.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.3</ows:Identifier>
      <ows:Title>TIN to Shapes</ows:Title>
      <ows:Abstract>Converts a TIN data set to shapes layers.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.4</ows:Identifier>
      <ows:Title>Gradient</ows:Title>
      <ows:Abstract>Calculates the gradient based on the values of each triangle's points.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.tin_tools.2</ows:Identifier>
      <ows:Title>Shapes to TIN</ows:Title>
      <ows:Abstract>Convert a shapes layer to a TIN&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.6</ows:Identifier>
      <ows:Title>Histogram Surface</ows:Title>
      <ows:Abstract>Histogram Surface</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.5</ows:Identifier>
      <ows:Title>Color Triangle Composite</ows:Title>
      <ows:Abstract>Similar to 'RGB Composite', but the three colors representing intensity of each data set can be chosen by user. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.9</ows:Identifier>
      <ows:Title>Split RGB Composite</ows:Title>
      <ows:Abstract>Split red-green-blue channels of an rgb coded grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.7</ows:Identifier>
      <ows:Title>Aspect-Slope Grid</ows:Title>
      <ows:Abstract>This tool creates an aspect-slope map which shows both the aspect and the slope of the terrain. Aspect is symbolized by different hues, while slope is mapped with saturation.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Brewer, C.A. &amp; Marlow, K.A. (1993): Color Representation of Aspect and Slope simultaneously. Proceedings, Eleventh International Symposium on Computer-Assisted Cartography (Auto-Carto-11), Minneapolis, October/November 1993, pp. 328-337.&amp;lt;br/&amp;gt;&amp;lt;a href="http://www.personal.psu.edu/cab38/Terrain/AutoCarto.html"&amp;gt;http://www.personal.psu.edu/cab38/Terrain/AutoCarto.html&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;a href="http://blogs.esri.com/esri/arcgis/2008/05/23/aspect-slope-map/"&amp;gt;http://blogs.esri.com/esri/arcgis/2008/05/23/aspect-slope-map/&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.11</ows:Identifier>
      <ows:Title>Create a Table from Look-up Table</ows:Title>
      <ows:Abstract>Creates a table object from a look-up table for visual data object classifications. Useful in combination with tool chains. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.3</ows:Identifier>
      <ows:Title>RGB Composite</ows:Title>
      <ows:Abstract>Create red-green-blue overlays of grids. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.8</ows:Identifier>
      <ows:Title>Terrain Map View</ows:Title>
      <ows:Abstract>This tool allows one to create different terrain visualisations from an elevation dataset:&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;* Topography: a simple map with an analytical hillshading of the terrain&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;* Morphology: a map which visualizes the terrain by combining positive and negative openness (Yokoyama et al. 2002) with terrain slope in a single map. In contrast to conventional shading methods this has the advantage of being independent from the direction of the light source.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;Yokoyama, R. / Shirasawa, M. / Pike, R.J. (2002): Visualizing topography by openness: A new application of image processing to digital elevation models. Photogrammetric Engineering and Remote Sensing, Vol.68, pp.251-266. &amp;lt;a target="_blank" href="http://info.asprs.org/publications/pers/2002journal/march/2002_mar_257-265.pdf"&amp;gt;online at ASPRS&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_visualisation.4</ows:Identifier>
      <ows:Title>Create 3D Image</ows:Title>
      <ows:Abstract>Create 3D Image</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_profiles.5</ows:Identifier>
      <ows:Title>Profile from points</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Creates a profile from coordinates stored in a table</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_profiles.3</ows:Identifier>
      <ows:Title>Cross Profiles</ows:Title>
      <ows:Abstract>Create cross profiles from a grid based DEM for given lines.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_profiles.4</ows:Identifier>
      <ows:Title>Profiles from Lines</ows:Title>
      <ows:Abstract>Create profiles from a grid based DEM for each line of a lines layer. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.6</ows:Identifier>
      <ows:Title>Random Terrain</ows:Title>
      <ows:Abstract>(c) 2004 by Victor Olaya. Random Terrain Generation</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.5</ows:Identifier>
      <ows:Title>Geometric Figures</ows:Title>
      <ows:Abstract>Construct grids from geometric figures (planes, cones).&amp;lt;br/&amp;gt;(c) 2001 by Olaf Conrad, Goettingen&amp;lt;br/&amp;gt;email: oconrad@gwdg.de</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.21</ows:Identifier>
      <ows:Title>Histogram Matching</ows:Title>
      <ows:Abstract>This tool alters the values of a grid so that its value distribution (its histogram), matches that of a reference grid. The first method simply uses arithmetic mean and standard deviation for adjustment, which usually is sufficient for normal distributed values. The second method performs a more precise adjustment based on the grids' histograms. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.14</ows:Identifier>
      <ows:Title>Metric Conversions</ows:Title>
      <ows:Abstract>Metric Conversions</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.17</ows:Identifier>
      <ows:Title>Fractal Brownian Noise</ows:Title>
      <ows:Abstract>This tool uses uniform random to create a grid that resembles fractal Brownian noise (FBN). The advantage of FBN noise is that it appears to have texture to the human eye, that resembles the types of textures that are observed in nature; terrains, algae growth, clouds, etc. The degree of texture observed in the FBN grid is dependent upon the sizes of the wavelengths chosen. The wavelengths should be chosen so they increase in size (a doubling of successive wavelengths is a good point to start). The greater the magnitude of the "ramp" of successive wavelengths the greater the texture in the FBN grid. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.9</ows:Identifier>
      <ows:Title>Grids Product</ows:Title>
      <ows:Abstract>Cellwise multiplication of grid values.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.0</ows:Identifier>
      <ows:Title>Grid Normalization</ows:Title>
      <ows:Abstract>Normalise the values of a grid. Rescales all grid values to fall in the range 'Minimum' to 'Maximum', usually 0 to 1. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.7</ows:Identifier>
      <ows:Title>Random Field</ows:Title>
      <ows:Abstract>Create a grid with pseudo-random numbers as grid cell values. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.15</ows:Identifier>
      <ows:Title>Gradient Vector from Cartesian to Polar Coordinates</ows:Title>
      <ows:Abstract>Converts gradient vector from directional components (Cartesian) to polar coordinates (direction or aspect angle and length or tangens of slope).&amp;lt;br/&amp;gt;The tool supports three conventions on how to measure and output the angle of direction:&amp;lt;br/&amp;gt;(a) mathematical: direction angle is zero in East direction and the angle increases counterclockwise&amp;lt;br/&amp;gt;(b) geographical: direction angle is zero in North direction and the angle increases clockwise&amp;lt;br/&amp;gt;(c) zero direction and orientation are user defined&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.12</ows:Identifier>
      <ows:Title>Fuzzy Intersection (AND)</ows:Title>
      <ows:Abstract>Calculates the intersection (min operator) for each grid cell of the selected grids.&amp;lt;br/&amp;gt; e-mail Gianluca Massei: g_massa@libero.it &amp;lt;br/&amp;gt;e-mail Antonio Boggia: boggia@unipg.it &amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.18</ows:Identifier>
      <ows:Title>Grid Division</ows:Title>
      <ows:Abstract>Grid Division</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.11</ows:Identifier>
      <ows:Title>Fuzzify</ows:Title>
      <ows:Abstract>Translates grid values into fuzzy set membership as preparation for fuzzy set analysis. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.1</ows:Identifier>
      <ows:Title>Grid Calculator</ows:Title>
      <ows:Abstract>The Grid Calculator calculates a new grid based on existing grids and a mathematical formula. The grid variables in the formula begin with the letter 'g' followed by a position index, which corresponds to the order of the grids in the input grid list (i.e.: g1, g2, g3, ... correspond to the first, second, third, ... grid in list). Grids from other systems than the default one can be addressed likewise using the letter 'h' (h1, h2, h3, ...), which correspond to the 'Grids from different Systems' list.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Example:	 sin(g1) * g2 + 2 * h1&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The following operators are available for the formula definition:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;xpos(), ypos()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the x/y coordinates for the current cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;col(), row()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the current cell's column/row index&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ncols(), nrows()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the number of columns/rows&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;nodata()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns resulting grid's no-data value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.16</ows:Identifier>
      <ows:Title>Gradient Vector from Polar to Cartesian Coordinates</ows:Title>
      <ows:Abstract>Converts gradient vector from polar coordinates (direction or aspect angle and length or tangens of slope) to directional components (Cartesian).&amp;lt;br/&amp;gt;The tool supports three conventions on how the angle of direction can be supplied:&amp;lt;br/&amp;gt;(a) mathematical: direction angle is zero in East direction and the angle increases counterclockwise&amp;lt;br/&amp;gt;(b) geographical: direction angle is zero in North direction and the angle increases clockwise&amp;lt;br/&amp;gt;(c) zero direction and orientation are user defined&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.13</ows:Identifier>
      <ows:Title>Fuzzy Union (OR)</ows:Title>
      <ows:Abstract>Calculates the union (max operator) for each grid cell of the selected grids.&amp;lt;br/&amp;gt; e-mail Gianluca Massei: g_massa@libero.it &amp;lt;br/&amp;gt;e-mail Antonio Boggia: boggia@unipg.it &amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.20</ows:Identifier>
      <ows:Title>Grid Collection Calculator</ows:Title>
      <ows:Abstract>The Grid Collection Calculator creates a new grid collection combining existing ones using the given formula. It is assumed that all input grid collections have the same number of grid layers. The variables in the formula begin with the letter 'g' followed by a position index, which corresponds to the order of the grid collections in the input grid collection list (i.e.: g1, g2, g3, ... correspond to the first, second, third, ... grid collection in list). Grid collections from other systems than the default one can be addressed likewise using the letter 'h' (h1, h2, h3, ...), which correspond to the 'Grid collections from different Systems' list.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Example:	 sin(g1) * g2 + 2 * h1&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The following operators are available for the formula definition:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;xpos(), ypos()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the x/y coordinates for the current cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;col(), row()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the current cell's column/row index&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ncols(), nrows()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Get the number of columns/rows&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;nodata()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns resulting grid's no-data value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.19</ows:Identifier>
      <ows:Title>Spherical Harmonic Synthesis</ows:Title>
      <ows:Abstract>Synthesis of a completely normalized spherical harmonic expansion. The coefficients are read from the input file (ASCII file, columns separated by space).&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.3</ows:Identifier>
      <ows:Title>Grid Difference</ows:Title>
      <ows:Abstract>Grid Difference</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.10</ows:Identifier>
      <ows:Title>Grid Standardization</ows:Title>
      <ows:Abstract>Standardize the values of a grid. The standard score (z) is calculated as raw score (x) less arithmetic mean (m) divided by standard deviation (s) and multiplied with the stretch factor (d):&amp;lt;br/&amp;gt;z = d * (x - m) / s</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.8</ows:Identifier>
      <ows:Title>Grids Sum</ows:Title>
      <ows:Abstract>Cellwise addition of grid values.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_calculus.4</ows:Identifier>
      <ows:Title>Function Plotter</ows:Title>
      <ows:Abstract>Generate a grid based on a functional expression. The function interpreter uses an formula expression parser that offers the following operators:&amp;lt;br/&amp;gt;&amp;lt;table border="0"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;+&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Addition&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;-&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Subtraction&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;*&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Multiplication&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;/&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Division&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;abs(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Absolute Value&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;mod(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the floating point remainder of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;int(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the integer part of floating point value x&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqr(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sqrt(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Square Root&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;exp(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Exponential&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pow(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x ^ y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x raised to the power of y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ln(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Natural Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;log(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Base 10 Logarithm&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;pi()&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the value of Pi&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;sin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Sine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;cos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Cosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;tan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Tangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;asin(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arcsine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;acos(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arccosine&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan(x)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;atan2(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Arctangent of x/y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;min(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the minimum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;max(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns the maximum of values x and y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;gt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;gt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is greater than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;lt(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x &amp;lt; y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x is less than y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;eq(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;x = y&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if x equals y, else false (0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;and(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if both x and y are true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;or(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns true (1), if at least one of both x and y is true (i.e. not 0)&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;ifelse(c, x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Returns x, if condition c is true (i.e. not 0), else y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_u(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, uniform distribution with minimum x and maximum y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;b&amp;gt;rand_g(x, y)&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Random number, Gaussian distribution with mean x and standard deviation y&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.6</ows:Identifier>
      <ows:Title>Cubic Spline Approximation</ows:Title>
      <ows:Abstract>This tool approximates irregular scalar 2D data in specified points using C1-continuous bivariate cubic spline.&amp;lt;br/&amp;gt;Minimal Number of Points:                minimal number of points locally involved                in spline calculation (normally = 3)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Maximal Number of Points:npmax:          maximal number of points locally involved                in spline calculation (required &amp;gt; 10,                recommended 20 &amp;lt; npmax &amp;lt; 60)&amp;lt;br/&amp;gt;Tolerance:                relative tolerance multiple in fitting                spline coefficients: the higher this                value, the higher degree of the locally                fitted spline (recommended 80 &amp;lt; k &amp;lt; 200)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Points per square:                average number of points per square                (increase if the point distribution is strongly non-uniform                to get larger cells)&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Author:         Pavel Sakov,                CSIRO Marine Research&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;Purpose:        2D data approximation with bivariate C1 cubic spline.                A set of library functions + standalone utility.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.5</ows:Identifier>
      <ows:Title>Multilevel B-Spline from Grid Points</ows:Title>
      <ows:Abstract>Multilevel B-spline algorithm for spatial interpolation of scattered data as proposed by Lee, Wolberg and Shin (1997). The algorithm makes use of a coarse-to-fine hierarchy of control lattices to generate a sequence of bicubic B-spline functions, whose sum approaches the desired interpolation function. Large performance gains are realized by using B-spline refinement to reduce the sum of these functions into one equivalent B-spline function. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The 'Maximum Level' determines the maximum size of the final B-spline matrix and increases exponential with each level. Where level=10 requires about 1mb level=12 needs about 16mb and level=14 about 256mb(!) of additional memory. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.7</ows:Identifier>
      <ows:Title>Multilevel B-Spline for Categories</ows:Title>
      <ows:Abstract>The 'Multilevel B-Spline for Categories' tool is comparable to indicator Kriging except that uses the Multilevel B-spline algorithm for interpolation. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.1</ows:Identifier>
      <ows:Title>Thin Plate Spline</ows:Title>
      <ows:Abstract>Creates a 'Thin Plate Spline' function for each grid point based on all of the scattered data points that are within a given distance. The number of points can be limited to a maximum number of closest points. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;References:&amp;lt;br/&amp;gt;- Donato G., Belongie S. (2002): 'Approximation Methods for Thin Plate Spline Mappings and Principal Warps', In Heyden, A., Sparr, G., Nielsen, M., Johansen, P. (Eds.): 'Computer Vision - ECCV 2002: 7th European Conference on Computer Vision, Copenhagen, Denmark, May 28-31, 2002', Proceedings, Part III, Lecture Notes in Computer Science. Springer-Verlag Heidelberg; pp.21-31.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;- Elonen, J. (2005): 'Thin Plate Spline editor - an example program in C++', &amp;lt;a target="_blank" href="http://elonen.iki.fi/code/tpsdemo/index.html"&amp;gt;http://elonen.iki.fi/code/tpsdemo/index.html&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.3</ows:Identifier>
      <ows:Title>B-Spline Approximation</ows:Title>
      <ows:Abstract>Calculates B-spline functions for chosen level of detail. This tool serves as the basis for the 'Multilevel B-spline Interpolation' and is not suited as is for spatial data interpolation from scattered data. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.8</ows:Identifier>
      <ows:Title>Multilevel B-Spline (3D)</ows:Title>
      <ows:Abstract>Multilevel B-spline algorithm for spatial interpolation of scattered data as proposed by Lee, Wolberg and Shin (1997) modified for 3D data.&amp;lt;br/&amp;gt;The algorithm makes use of a coarse-to-fine hierarchy of control lattices to generate a sequence of bicubic B-spline functions, whose sum approaches the desired interpolation function. Performance gains are realized by using B-spline refinement to reduce the sum of these functions into one equivalent B-spline function. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The 'Maximum Level' determines the maximum size of the final B-spline matrix and increases exponential with each level. Where level=10 requires about 1mb level=12 needs about 16mb and level=14 about 256mb(!) of additional memory. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.4</ows:Identifier>
      <ows:Title>Multilevel B-Spline</ows:Title>
      <ows:Abstract>Multilevel B-spline algorithm for spatial interpolation of scattered data as proposed by Lee, Wolberg and Shin (1997).&amp;lt;br/&amp;gt;The algorithm makes use of a coarse-to-fine hierarchy of control lattices to generate a sequence of bicubic B-spline functions, whose sum approaches the desired interpolation function. Performance gains are realized by using B-spline refinement to reduce the sum of these functions into one equivalent B-spline function. &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;The 'Maximum Level' determines the maximum size of the final B-spline matrix and increases exponential with each level. Where level=10 requires about 1mb level=12 needs about 16mb and level=14 about 256mb(!) of additional memory. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.grid_spline.2</ows:Identifier>
      <ows:Title>Thin Plate Spline (TIN)</ows:Title>
      <ows:Abstract>Creates a 'Thin Plate Spline' function for each triangle of a TIN and uses it for subsequent gridding. The TIN is internally created from the scattered data points input. The 'Neighbourhood' option determines the number of points used for the spline generation. 'Immediate neighbourhood' includes the points of the triangle as well as the immediate neighbour points. 'Level 1' adds the neighbours of the immediate neighbourhood and 'level 2' adds the neighbours of 'level 1' neighbours too. A higher neighbourhood degree reduces sharp breaks but also increases the computation time. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>SAGA.ta_compound.0</ows:Identifier>
      <ows:Title>Basic Terrain Analysis</ows:Title>
      <ows:Abstract>A selection of basic parameters and objects to be derived from a Digital Terrain Model using standard settings.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MultiImageSamplingRate</ows:Identifier>
      <ows:Title>Compute sampling rate for an input set of images.</ows:Title>
      <ows:Abstract>The application computes sampling rates for a set of input images. Before calling this application, each pair of image and training vectors has to be analysed with the application PolygonClassStatistics. The statistics file is then used to compute the sampling rates for each class in each image. Several types of sampling  are implemented. Each one is a combination of a mono-image strategy and a multi-image mode. The mono-image strategies are :  * smallest (default) : select the same number of sample in each class so that the smallest one is fully sampled.  * constant : select the same number of samples N in each class (with N below or equal to the size of the smallest class).  * byclass : set the required number for each class manually, with an input CSV file (first column is class name, second one is the required samples number).The multi-image modes (mim) are proportional, equal and custom. The custom mode lets the users choose the distribution of samples among the images. The different behaviours are described below. Ti(c) and Ni(c)  refers resp. to the total number and needed number of samples in image i for class c. Let's call L the total number of images.  * strategy = all    - Same behaviour for all modes : take all samples  * strategy = constant : let's call M the global number of samples required per class. For each image i and each class c:    - if mim = proportional, then Ni( c ) = M * Ti( c ) / sum_k( Tk(c) )    - if mim = equal       , then Ni( c ) = M / L    - if mim = custom      , then Ni( c ) = Mi where Mi is the custom requested number of samples for image i  * strategy = byClass : let's call M(c) the global number of samples for class c). For each image i and each class c:    - if mim = proportional, then Ni( c ) = M(c) * Ti( c ) / sum_k( Tk(c) )    - if mim = equal       , then Ni( c ) = M(c) / L    - if mim = custom      , then Ni( c ) = Mi(c) where Mi(c) is the custom requested number of samples for image i and class c  * strategy = percent : For each image i and each class c:    - if mim = proportional, then Ni( c ) = p * Ti( c ) where p is the global percentage of samples    - if mim = equal       , then Ni( c ) = p * sum_k(Tk(c)]/L where p is the global percentage of samples    - if mim = custom      , then Ni( c ) = p(i) * Ti(c) where p(i) is the percentage of samples for image i. c  * strategy = total : For each image i and each class c:    - if mim = proportional, then Ni( c ) = total * (sum_k(Ti(k))/sum_kl(Tl(k))) * (Ti(c)/sum_k(Ti(k))) where total is the total number of samples specified.    - if mim = equal       , then Ni( c ) = (total / L) * (Ti(c)/sum_k(Ti(k))) where total is the total number of samples specified.    - if mim = custom      , then Ni( c ) = total(i) * (Ti(c)/sum_k(Ti(k))) where total(i) is the total number of samples specified for image i.   * strategy = smallest class    - if mim = proportional, then the smallest class size (computed globally) is used for the strategy constant+proportional.    - if mim = equal       , then the smallest class size (computed globally) is used for the strategy constant+equal.    - if mim = custom      , then the smallest class is computed and used for each image separately.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorDataDSValidation</ows:Identifier>
      <ows:Title>Vector data validation based on the fusion of features using Dempster-Shafer evidence theory framework.</ows:Title>
      <ows:Abstract>This application validates or unvalidate the studied samples using the Dempster-Shafer theory.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SARDeburst</ows:Identifier>
      <ows:Title>This application performs deburst of Sentinel1 IW SLC images by removing redundant lines.</ows:Title>
      <ows:Abstract>Sentinel1 IW SLC products are composed of several burst overlapping in azimuth time for each subswath, separated by black lines [1]. The deburst operation consist in generating a continuous image in terms of azimuth time, by removing black separation lines as well as redundant lines between bursts.Note that the output sensor model is updated accordingly. This deburst operation is the perfect preprocessing step to orthorectify S1 IW SLC product with OTB [2] without suffering from artifacts caused by bursts separation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LocalStatisticExtraction</ows:Identifier>
      <ows:Title>Computes local statistical moments on every pixel in the selected channel of the input image</ows:Title>
      <ows:Abstract>This application computes the 4 local statistical moments on every pixel in the selected channel of the input image, over a specified neighborhood. The output image is multi band with one statistical moment (feature) per band. Thus, the 4 output features are the Mean, the Variance, the Skewness and the Kurtosis. They are provided in this exact order in the output image.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SplitImage</ows:Identifier>
      <ows:Title>Split a N multiband image into N images.</ows:Title>
      <ows:Abstract>This application splits a N-bands image into N mono-band images. The output images filename will be generated from the output parameter. Thus, if the input image has 2 channels, and the user has set as output parameter, outimage.tif, the generated images will be outimage_0.tif and outimage_1.tif.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LargeScaleMeanShift</ows:Identifier>
      <ows:Title>Large-scale segmentation using MeanShift</ows:Title>
      <ows:Abstract>This application chains together the 4 steps of the MeanShit framework, that is the MeanShiftSmoothing [1], the LSMSSegmentation [2], the LSMSSmallRegionsMerging [3] and the LSMSVectorization [4].This application can be a preliminary step for an object-based analysis.It generates a vector data file containing the regions extracted with the MeanShift algorithm. The spatial and range radius parameters allow adapting the sensitivity of the algorithm depending on the image dynamic and resolution. There is a step to remove small regions whose size (in pixels) is less than the given 'minsize' parameter. These regions are merged to a similar neighbor region. In the output vectors, there are additional fields to describe each region. In particular the mean and standard deviation (for each band) is computed for each region using the input image as support. If an optional 'imfield' image is given, it will be used as support image instead.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SampleAugmentation</ows:Identifier>
      <ows:Title>Generates synthetic samples from a sample data file.</ows:Title>
      <ows:Abstract>The application takes a sample data file as generated by the SampleExtraction application and generates synthetic samples to increase the number of available samples.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SampleExtraction</ows:Identifier>
      <ows:Title>Extracts samples values from an image.</ows:Title>
      <ows:Abstract>The application extracts samples values from animage using positions contained in a vector data file. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Quicklook</ows:Identifier>
      <ows:Title>Generates a subsampled version of an image extract</ows:Title>
      <ows:Abstract>Generates a subsampled version of an extract of an image defined by ROIStart and ROISize. This extract is subsampled using the ratio OR the output image Size.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.TrainVectorClassifier</ows:Identifier>
      <ows:Title>Train a classifier based on labeled geometries and a list of features to consider.</ows:Title>
      <ows:Abstract>This application trains a classifier based on labeled geometries and a list of features to consider for classification.This application is based on LibSVM, OpenCV Machine Learning (2.3.1 and later), and Shark ML The output of this application is a text model file, whose format corresponds to the ML model type chosen. There is no image nor vector data output.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ComputePolylineFeatureFromImage</ows:Identifier>
      <ows:Title>This application computes the chosen descriptors for each studied polyline contained in the input VectorData.</ows:Title>
      <ows:Abstract>The first step in the classifier fusion based validation is to compute the chosen descriptors for each studied polyline. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ObtainUTMZoneFromGeoPoint</ows:Identifier>
      <ows:Title>UTM zone determination from a geographic point.</ows:Title>
      <ows:Abstract>This application returns the UTM zone of an input geographic point.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.CompareImages</ows:Identifier>
      <ows:Title>Estimator between 2 images.</ows:Title>
      <ows:Abstract>This application computes MSE (Mean Squared Error), MAE (Mean Absolute Error) and PSNR (Peak Signal to Noise Ratio) between the channel of two images (reference and measurement). The user has to set the used channel and can specify a ROI.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.PredictRegression</ows:Identifier>
      <ows:Title>Performs a prediction of the input image according to a regression model file.</ows:Title>
      <ows:Abstract>This application predict output values from an input image, based on a regression model file produced by the TrainRegression application. Pixels of the output image will contain the predicted values fromthe regression model (single band). The input pixels can be optionally centered and reduced according to the statistics file produced by the ComputeImagesStatistics application. An optional input mask can be provided, in which case only input image pixels whose corresponding mask value is greater than 0 will be processed. The remaining of pixels will be given the value 0 in the output image.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.BlockMatching</ows:Identifier>
      <ows:Title>Performs block-matching to estimate pixel-wise disparities between two images.</ows:Title>
      <ows:Abstract>This application allows one to performs block-matching to estimate pixel-wise disparities for a pair of images in epipolar geometry.This application is part of the stereovision pipeline. It can be used after having computed epipolar grids (with StereoRectificationGridGenerator) and resampled each input image into epipolar geometry (with GridBasedImageResampling).The application searches locally for the displacement between a reference image and a secondary image. The correspondence is evaluated for each pixel, based on a pair of local neighborhood windows. The displacement evaluated can be 1D (along lines) or 2D. Parameters allow setting the minimum and maximum disparities to search (both for horizontal and vertical directions). A winner-take-all approach is used to select the best match. There are different metrics implemented to evaluate the match between two local windows:  * SSD : Sum of Squared Distances  * NCC : Normalized Cross-Correlation  * Lp  : Lp pseudo normOnce the best integer disparity is found, an optional step of sub-pixel disparity estimation can be performed, with various algorithms (triangular interpolation, parabollic interpolation, dichotimic search). As post-processing, there is an optional step of median filtering on the disparities. One can chose input masks (related to the left and right input image) of pixels for which the disparity should be investigated. Additionally, two criteria can be optionally used to disable disparity investigation for some pixel: a no-data value, and a threshold on the local variance. This allows one to speed-up computation by avoiding to investigate disparities that will not be reliable anyway. For efficiency reasons, if the image of optimal metric values is desired, it will be concatenated to the output image (which will then have three bands : horizontal disparity, vertical disparity and metric value). One can split these images afterward.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.RadiometricIndices</ows:Identifier>
      <ows:Title>Compute radiometric indices.</ows:Title>
      <ows:Abstract>This application computes radiometric indices using the relevant channels of the input image. The output is a multi band image into which each channel is one of the selected indices.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ComputeModulusAndPhase</ows:Identifier>
      <ows:Title>This application computes the modulus and the phase of a complex SAR image.</ows:Title>
      <ows:Abstract>This application computes the modulus and the phase of a complex SAR image. The input should be a single band image with complex pixels.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SARDecompositions</ows:Identifier>
      <ows:Title>From one-band complex images (each one related to an element of the Sinclair matrix), returns the selected decomposition.</ows:Title>
      <ows:Abstract>From one-band complex images (HH, HV, VH, VV), returns the selected decomposition. All the decompositions implemented are intended for the mono-static case (transmitter and receiver are co-located).There are two kinds of decomposition : coherent ones and incoherent ones.In the coherent case, only the Pauli decomposition is available.In the incoherent case, there the decompositions available : Huynen, Barnes, and H-alpha-A.User must provide three one-band complex images HH, HV or VH, and VV (mono-static case </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.RigidTransformResample</ows:Identifier>
      <ows:Title>Resample an image with a rigid transform</ows:Title>
      <ows:Abstract>This application performs a parametric transform on the input image. Scaling, translation and rotation with scaling factor are handled. Parameters of the transform is expressed in physical units, thus particular attention must be paid on pixel size (value, and sign). Moreover transform is expressed from input space to output space (on the contrary ITK Transforms are expressed form output space to input space). </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ImageEnvelope</ows:Identifier>
      <ows:Title>Extracts an image envelope.</ows:Title>
      <ows:Abstract>Build a vector data containing the image envelope polygon. Useful for some projection, you can set the polygon with more points with the sr parameter. This filter supports user-specified output projection. If no projection is defined, the standard WGS84 projection will be used.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ExtractROI</ows:Identifier>
      <ows:Title>Extract a ROI defined by the user.</ows:Title>
      <ows:Abstract>This application extracts a Region Of Interest with user parameters. There are four mode of extraction. The standard mode allows the user to enter one point (upper left corner of the region to extract) and a size. The extent mode needs two points (upper left corner and lower right) and the radius mode need the center of the region and the radius : it will extract the rectangle containing the circle defined and limited by the image dimension. The fit mode needs a reference image or vector and the dimension of the extracted region will be the same as the extent of the reference. Different units are available such as pixel, image physical space or longitude and latitude.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorClassifier</ows:Identifier>
      <ows:Title>Performs a classification of the input vector data according to a model file.</ows:Title>
      <ows:Abstract>This application performs a vector data classification based on a model file produced by the TrainVectorClassifier application.Features of the vector data output will contain the class labels decided by the classifier (maximal class label = 65535). There are two modes: 1) Update mode: add of the 'cfield' field containing the predicted class in the input file. 2) Write mode: copies the existing fields of the input file in the output file  and add the 'cfield' field containing the predicted class. If you have declared the output file, the write mode applies. Otherwise, the input file update mode will be applied.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.PolygonClassStatistics</ows:Identifier>
      <ows:Title>Computes statistics on a training polygon set.</ows:Title>
      <ows:Abstract>The application processes a set of geometries intended for training (they should have a field giving the associated class). The geometries are analyzed against a support image to compute statistics :   - number of samples per class  - number of samples per geometryAn optional raster mask can be used to discard samples. Different types of geometry are supported : polygons, lines, points. The behaviour is different for each type of geometry :  - polygon: select pixels whose center is inside the polygon  - lines  : select pixels intersecting the line  - points : select closest pixel to the point</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Despeckle</ows:Identifier>
      <ows:Title>Perform speckle noise reduction on SAR image.</ows:Title>
      <ows:Abstract>SAR images are affected by speckle noise that inherently exists in and which degrades the image quality. It is caused by the coherent nature of back-scattered waves from multiple distributed targets. It is locally strong and it increases the mean Grey level of a local area. Reducing the speckle noise enhances radiometric resolution but tend to decrease the spatial resolution.Several different methods are used to eliminate speckle noise, based upon different mathematical models of the phenomenon. The application includes four methods: Lee [1], Frost [2], GammaMAP [3] and Kuan [4]. We sum up below the basic principle of this four methods:  * Lee : Estimate the signal by mean square error minimization (MMSE) on a sliding window.  * Frost : Also derived from the MMSE criteria with a weighted sum of the values within the window. The weighting factors decrease with distance from the pixel of interest.  * GammaMAP  : Derived under the assumption of the image follows a Gamma distribution.  * Kuan : Also derived from the MMSE criteria under the assumption of non stationary mean and variance. It is quite similar to Lee filter in form.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.BinaryMorphologicalOperation</ows:Identifier>
      <ows:Title>Performs morphological operations on an input image channel</ows:Title>
      <ows:Abstract>This application performs binary morphological operations on a mono band image or a channel of the input.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SARCalibration</ows:Identifier>
      <ows:Title>Perform radiometric calibration of SAR images. Following sensors are supported: TerraSAR-X, Sentinel1 and Radarsat-2.Both Single Look Complex(SLC) and detected products are supported as input.</ows:Title>
      <ows:Abstract>The objective of SAR calibration is to provide imagery in which the pixel values can be directly related to the radar backscatter of the scene. This application allows computing Sigma Naught (Radiometric Calibration) for TerraSAR-X, Sentinel1 L1 and Radarsat-2 sensors. Metadata are automatically retrieved from image products.The application supports complex and non-complex images (SLC or detected products).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LSMSVectorization</ows:Identifier>
      <ows:Title>This application performs the fourth step of the exact Large-Scale Mean-Shift segmentation workflow [1].</ows:Title>
      <ows:Abstract>Given a segmentation result (label image), that may come from the LSMSSegmentation [2] application (out parameter) or have been processed for small regions merging [3] (out parameter), it will convert it to a GIS vector file containing one polygon per segment. Each polygon contains additional fields: mean and variance of each channels from input image (in parameter), segmentation image label, number of pixels in the polygon. For large images one can use the tilesizex and tilesizey parameters for tile-wise processing, with the guarantees of identical results.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Rasterization</ows:Identifier>
      <ows:Title>Rasterize a vector dataset.</ows:Title>
      <ows:Abstract>This application allows reprojecting and rasterize a vector dataset. The grid of the rasterized output can be set by using a reference image, or by setting all parmeters (origin, size, spacing) by hand. In the latter case, at least the spacing (ground sampling distance) is needed (other parameters are computed automatically). The rasterized output can also be in a different projection reference system than the input dataset. There are two rasterize mode available in the application. The first is the binary mode: it allows rendering all pixels belonging to a geometry of the input dataset in the foreground color, while rendering the other in background color. The second one allows rendering pixels belonging to a geometry woth respect to an attribute of this geometry. The field of the attribute to render can be set by the user. In the second mode, the background value is still used for unassociated pixels.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.RefineSensorModel</ows:Identifier>
      <ows:Title>Perform least-square fit of a sensor model to a set of tie points</ows:Title>
      <ows:Abstract>This application reads a geom file containing a sensor model and a text file containing a list of ground control point, and performs a least-square fit of the sensor model adjustable parameters to these tie points. It produces an updated geom file as output, as well as an optional ground control points based statistics file and a vector file containing residues. The output geom file can then be used to ortho-rectify the data more accurately. Plaease note that for a proper use of the application, elevation must be correctly set (including DEM and geoid file). The map parameters allows one to choose a map projection in which the accuracy will be estimated in meters.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LSMSSmallRegionsMerging</ows:Identifier>
      <ows:Title>This application performs the third (optional) step of the exact Large-Scale Mean-Shift segmentation workflow [1].</ows:Title>
      <ows:Abstract>Given a segmentation result (can be the out output parameter of the LSMSSegmentation application [2]) and the original image, it will merge segments whose size in pixels is lower than minsize parameter with the adjacent segments with the adjacent segment with closest radiometry and acceptable size.Small segments will be processed by increasing size: first all segments for which area is equal to 1 pixel will be merged with adjacent segments, then all segments of area equal to 2 pixels will be processed, until segments of area minsize. For large images one can use the tilesizex and tilesizey parameters for tile-wise processing, with the guarantees of identical results.The output of this application can be passed to the LSMSVectorization application [3] to complete the LSMS workflow.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Segmentation</ows:Identifier>
      <ows:Title>Performs segmentation of an image, and output either a raster or a vector file. In vector mode, large input datasets are supported.</ows:Title>
      <ows:Abstract>This application allows one to perform various segmentation algorithms on a multispectral image.Available segmentation algorithms are two different versions of Mean-Shift segmentation algorithm (one being multi-threaded), simple pixel based connected components according to a user-defined criterion, and watershed from the gradient of the intensity (norm of spectral bands vector). The application has two different modes that affects the nature of its output.In raster mode, the output of the application is a classical image of unique labels identifying the segmented regions. The labeled output can be passed to the ColorMapping application to render regions with contrasted colours. Please note that this mode loads the whole input image into memory, and as such can not handle large images.  To segment large data, one can use the vector mode. In this case, the output of the application is a vector file or database. The input image is split into tiles (whose size can be set using the tilesize parameter), and each tile is loaded, segmented with the chosen algorithm, vectorized, and written into the output file or database. This piece-wise behavior ensure that memory will never get overloaded, and that images of any size can be processed. There are few more options in the vector mode. The simplify option allows simplifying the geometry (i.e. remove nodes in polygons) according to a user-defined tolerance. The stitch option tries to stitch together the polygons corresponding to segmented region that may have been split by the tiling scheme. </ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.HaralickTextureExtraction</ows:Identifier>
      <ows:Title>Computes Haralick textural features on the selected channel of the input image</ows:Title>
      <ows:Abstract>This application computes three sets of Haralick features [1][2].  * simple: a set of 8 local Haralick features: Energy (texture uniformity) , Entropy (measure of randomness of intensity image), Correlation (how correlated a pixel is to its neighborhood), Inverse Difference Moment (measures the texture homogeneity), Inertia (intensity contrast between a pixel and its neighborhood), Cluster Shade, Cluster Prominence, Haralick Correlation;  * advanced: a set of 10 advanced Haralick features : Mean, Variance (measures the texture heterogeneity), Dissimilarity, Sum Average, Sum Variance, Sum Entropy, Difference of Entropies, Difference of Variances, IC1, IC2;  * higher: a set of 11 higher Haralick features : Short Run Emphasis (measures the texture sharpness), Long Run Emphasis (measures the texture roughness), Grey-Level Nonuniformity, Run Length Nonuniformity, Run Percentage (measures the texture sharpness homogeneity), Low Grey-Level Run Emphasis, High Grey-Level Run Emphasis, Short Run Low Grey-Level Emphasis, Short Run High Grey-Level Emphasis, Long Run Low Grey-Level Emphasis and Long Run High Grey-Level Emphasis.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.TrainRegression</ows:Identifier>
      <ows:Title>Train a classifier from multiple images to perform regression.</ows:Title>
      <ows:Abstract>This application trains a classifier from multiple input images or a csv file, in order to perform regression. Predictors are composed of pixel values in each band optionally centered and reduced using an XML statistics file produced by the ComputeImagesStatistics application. The output value for each predictor is assumed to be the last band (or the last column for CSV files). Training and validation predictor lists are built such that their size is inferior to maximum bounds given by the user, and the proportion corresponds to the balance parameter. Several classifier parameters can be set depending on the chosen classifier. In the validation process, the mean square error is computed between the ground truth and the estimated model. This application is based on LibSVM and on OpenCV Machine Learning classifiers, and is compatible with OpenCV 2.3.1 and later.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ComputeImagesStatistics</ows:Identifier>
      <ows:Title>Computes global mean and standard deviation for each band from a set of images and optionally saves the results in an XML file.</ows:Title>
      <ows:Abstract>This application computes a global mean and standard deviation for each band of a set of images and optionally saves the results in an XML file. The output XML is intended to be used as an input for the TrainImagesClassifier application to normalize samples before learning. You can also normalize the image with the XML file in the ImageClassifier application.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.OrthoRectification</ows:Identifier>
      <ows:Title>This application allows ortho-rectifying optical and radar images from supported sensors.</ows:Title>
      <ows:Abstract>This application uses inverse sensor modelling combined with a choice of interpolation functions to resample a sensor geometry image into a ground geometry regular grid. The ground geometry regular grid is defined with respect to a map projection (see map parameter). The application offers several modes to estimate the output grid parameters (origin and ground sampling distance), including automatic estimation of image size, ground sampling distance, or both, from image metadata, user-defined ROI corners, or another ortho-image.A digital Elevation Model along with a geoid file can be specified to account for terrain deformations.In case of SPOT5 images, the sensor model can be approximated by an RPC model in order to speed-up computation.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ConvertCartoToGeoPoint</ows:Identifier>
      <ows:Title>Convert cartographic coordinates to geographic ones.</ows:Title>
      <ows:Abstract>This application computes the geographic coordinates from cartographic ones. User has to give the X and Y coordinate and the cartographic projection (see mapproj parameter for details).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorDataReprojection</ows:Identifier>
      <ows:Title>Reproject a vector data using support image projection reference, or a user specified map projection</ows:Title>
      <ows:Abstract>This application allows reprojecting a vector data using support image projection reference, or a user given map projection. If given, image keywordlist can be added to reprojected vectordata.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.TileFusion</ows:Identifier>
      <ows:Title>Fusion of an image made of several tile files.</ows:Title>
      <ows:Abstract>Automatically mosaic a set of non overlapping tile files into a single image. Images must have a matching number of bands and they must be listed in lexicographic order.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MorphologicalClassification</ows:Identifier>
      <ows:Title>Performs morphological convex, concave and flat classification on an input image channel</ows:Title>
      <ows:Abstract>This algorithm is based on the following publication:Martino Pesaresi and Jon Alti Benediktsson, Member, IEEE: A new approach for the morphological segmentation of high resolution satellite imagery.IEEE Transactions on geoscience and remote sensing, vol. 39, NO. 2, February 2001, p. 309-320.This application perform the following decision rule to classify a pixel between the three classes Convex, Concave and Flat. Let :math:`f` denote the input image and :math:`\psi_</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DisparityMapToElevationMap</ows:Identifier>
      <ows:Title>Projects a disparity map into a regular elevation map.</ows:Title>
      <ows:Abstract>This application uses a disparity map computed from a stereo image pair to produce an elevation map on the ground area covered by the stereo pair.This application is part of the stereo reconstruction pipeline. It can be used after having computed the disparity map with BlockMatching.The needed inputs are : the disparity map, the stereo pair (in original geometry) and the epipolar deformation grids. These grids (computed by StereoRectificationGridGenerator) have to contain the transform between the original geometry (stereo pair) and the epipolar geometry (disparity map). The algorithm for each disparity is the following :  * skip if position is discarded by the disparity mask  * compute left ray : transform the current position from epipolar geometry to left sensor geometry (left rectification grid)  * compute right ray : shift the current position with current disparity and transform from epipolar geometry to right sensor (right rectification grid)  * estimate best 3D intersection between left and right rays  * for the ground cell of the obtained 3D point, keep its elevation if greater than current elevation (keeps the maximum of elevations of all 3D points in each cell)Minimum and maximum elevations settings are here to bound the reconstructed DEM.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Pansharpening</ows:Identifier>
      <ows:Title>Perform P+XS pansharpening</ows:Title>
      <ows:Abstract>This application performs P+XS pansharpening. Pansharpening is a process of merging high-resolution panchromatic and lower resolution multispectral imagery to create a single high-resolution color image. Algorithms available in the applications are: RCS, bayesian fusion and Local Mean and Variance Matching(LMVM).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.FineRegistration</ows:Identifier>
      <ows:Title>Estimate disparity map between two images.</ows:Title>
      <ows:Abstract>This application computes a disparity map between two images that correspond to the same scene. It is intended for case where small misregistration between images should be estimated and fixed. The search is performed in 2D.The algorithm uses an iterative approach to estimate a best match between local patches. The typical use case is registration betwween similar bands, or between two acquisitions. The output image contains X and Y offsets, as well as the metric value. A sub-pixel accuracy can be expected. The input images should have the same size and same physical space.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorDataTransform</ows:Identifier>
      <ows:Title>Apply a transform to each vertex of the input VectorData</ows:Title>
      <ows:Abstract>This application iterates over each vertex in the input vector data file and performs a transformation on this vertex.It is the equivalent of [1] that transforms images. For instance, if you extract the envelope of an image with [2], and you transform this image with [1], you may want to use this application to operate the same transform on the envelope.The applied transformation is a 2D similarity. It manages translation, rotation, scaling, and can be centered or not. Note that the support image is used to define the reference coordinate system in which the transform is applied. For instance the input vector data can have WGS84 coordinates, the support image is in UTM, so a translation of 1 pixel along X corresponds to the X pixel size of the input image along the X axis of the UTM coordinates frame. This image can also be in sensor geometry.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.GeneratePlyFile</ows:Identifier>
      <ows:Title>Generate a 3D Ply file from a DEM and a color image.</ows:Title>
      <ows:Abstract>The application converts an image containing elevations into a PLY file, which is a file format to store 3D models. This format is adpated for visualization on software such as MeshLab [2] or CloudCompare [3]This application is part of the stereo reconstruction framework. The input data can be produced by the application DisparityMapToElevationMap.There are two types of supported input images:  * A DEM image, with a ground projection, containing elevation values. Each elevation value can be considered as a 3D point.  * A 3D grid image, containing 5 bands (the first 3 are the 3D coordinates of each point, the 5th is a validity mask where valid values are larger or equal to 1)The user shall also give a support image that contains color values for each 3D point. The color values will be embedded in the PLY file.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.FusionOfClassifications</ows:Identifier>
      <ows:Title>Fuses several classifications maps of the same image on the basis of class labels.</ows:Title>
      <ows:Abstract>This application allows you to fuse several classification maps and produces a single more robust classification map. Fusion is done either by mean of Majority Voting, or with the Dempster Shafer combination method on class labels.  - MAJORITY VOTING: for each pixel, the class with the highest number of votes is selected.  - DEMPSTER SHAFER: for each pixel, the class label for which the Belief Function is maximal is selected. This Belief Function is calculated by mean of the Dempster Shafer combination of Masses of Belief, and indicates the belief that each input classification map presents for each label value. Moreover, the Masses of Belief are based on the input confusion matrices of each classification map, either by using the PRECISION or RECALL rates, or the OVERALL ACCURACY, or the KAPPA coefficient. Thus, each input classification map needs to be associated with its corresponding input confusion matrix file for the Dempster Shafer fusion.  - Input pixels with the NODATA label are not handled in the fusion of classification maps. Moreover, pixels for which all the input classifiers are set to NODATA keep this value in the output fused image.  - In case of number of votes equality, the UNDECIDED label is attributed to the pixel.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MorphologicalMultiScaleDecomposition</ows:Identifier>
      <ows:Title>Perform a geodesic morphology based image analysis on an input image channel</ows:Title>
      <ows:Abstract>This application recursively apply geodesic decomposition. This algorithm is derived from the following publication:Martino Pesaresi and Jon Alti Benediktsson, Member, IEEE: A new approach for the morphological segmentation of high resolution satellite imagery.IEEE Transactions on geoscience and remote sensing, vol. 39, NO. 2, February 2001, p. 309-320.It provides a geodesic decomposition of the input image, with the following scheme. Let :math:`f_0` denote the input image, :math:`\stackrel</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorDataExtractROI</ows:Identifier>
      <ows:Title>Perform an extract ROI on the input vector data according to the input image extent</ows:Title>
      <ows:Abstract>This application extracts the vector data features belonging to a region specified by the support image envelope. Any features intersecting the support region is copied to output. The output geometries are NOT cropped.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.GenerateRPCSensorModel</ows:Identifier>
      <ows:Title>Generate a RPC sensor model from a list of Ground Control Points.</ows:Title>
      <ows:Abstract>This application generates a RPC sensor model from a list of Ground Control Points. At least 20 points are required for estimation without elevation support, and 40 points for estimation with elevation support. Elevation support will be automatically deactivated if an insufficient amount of points is provided. The application can optionally output a file containing accuracy statistics for each point, and a vector file containing segments representing points residues. The map projection parameter allows defining a map projection in which the accuracy is evaluated.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SARPolarSynth</ows:Identifier>
      <ows:Title>Gives, for each pixel, the power that would have been received by a SAR system with a basis different from the classical (H,V) one (polarimetric synthetis).</ows:Title>
      <ows:Abstract>This application gives, for each pixel, the power that would have been received by a SAR system with a basis different from the classical (H,V) one (polarimetric synthetis).The new basis A and B are indicated through two Jones vectors, defined by the user thanks to orientation (psi) and ellipticity (khi) parameters.These parameters are namely psii, khii, psir and khir. The suffixes (i) and (r) refer to the transmitting antenna and the receiving antenna respectively.Orientations and ellipticities are given in degrees, and are between -90/90 degrees and -45/45 degrees respectively. Four polarization architectures can be processed : 1. HH_HV_VH_VV : full polarization, general bistatic case.2. HH_HV_VV or HH_VH_VV : full polarization, monostatic case (transmitter and receiver are co-located).3. HH_HV : dual polarization.4. VH_VV : dual polarization.The application takes a complex vector image as input, where each band correspond to a particular emission/reception polarization scheme.User must comply with the band order given above, since the bands are used to build the Sinclair matrix.In order to determine the architecture, the application first relies on the number of bands of the input image.1. Architecture HH_HV_VH_VV is the only one with four bands, there is no possible confusion.2. Concerning HH_HV_VV and HH_VH_VV architectures, both correspond to a three channels image. But they are processed in the same way, as the Sinclair matrix is symmetric in the monostatic case.3. Finally, the two last architectures (dual polarizations), can't be distinguished only by the number of bands of the input image. User must then use the parameters emissionh and emissionv to indicate the architecture of the system : emissionh=1 and emissionv=0 --&gt; HH_HV,  emissionh=0 and emissionv=1 --&gt; VH_VV.Note : if the architecture is HH_HV, khii and psii are automatically both set to 0 degree; if the architecture is VH_VV, khii and psii are automatically set to 0 degree and 90 degrees respectively.It is also possible to force the calculation to co-polar or cross-polar modes.In the co-polar case, values for psir and khir will be ignored and forced to psii and khii; same as the cross-polar mode, where khir and psir will be forced to (psii + 90 degrees) and -khii.Finally, the result of the polarimetric synthetis is expressed in the power domain, through a one-band scalar image.Note: this application doesn't take into account the terms which do not depend on the polarization of the antennas. The parameter gain can be used for this purpose.More details can be found in the OTB CookBook (SAR processing chapter).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Convert</ows:Identifier>
      <ows:Title>Convert an image to a different format, optionally rescaling the data and/or changing the pixel type.</ows:Title>
      <ows:Abstract>This application performs an image pixel type conversion (short, ushort, uchar, int, uint, float and double types are handled). The output image is written in the specified format (ie. that corresponds to the given extension). The conversion can include a rescale of the data range, by default it's set from 2% to 98% of the data values. The rescale can be linear or log2.  The choice of the output channels can be done with the extended filename, but less easy to handle. To do this, a 'channels' parameter allows you to select the desired bands at the output. There are 3 modes, the available choices are:  * grayscale :  to display mono image as standard color image  * rgb : select 3 bands in the input image (multi-bands)  * all : keep all bands.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LineSegmentDetection</ows:Identifier>
      <ows:Title>Detect line segments in raster</ows:Title>
      <ows:Abstract>This application detects locally straight contours in a image. It is based on Burns, Hanson, and Riseman method and use an a contrario validation approach (Desolneux, Moisan, and Morel). The algorithm was published by Rafael Gromponevon Gioi, Jérémie Jakubowicz, Jean-Michel Morel and Gregory Randall. The given approach computes gradient and level lines of the image and detects aligned points in line support region. The application allows exporting the detected lines in a vector data.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.EdgeExtraction</ows:Identifier>
      <ows:Title>This application computes edge features on every pixel of the input image selected channel</ows:Title>
      <ows:Abstract>This application computes edge features on a selected channel of the input.It uses different filter such as gradient, Sobel and Touzi</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.PixelValue</ows:Identifier>
      <ows:Title>Get the value of a pixel.</ows:Title>
      <ows:Abstract>This application gives the value of a selected pixel. There are three ways to designate a pixel, with its index, its physical coordinate (in the physical space attached to the image), and with geographical coordinate system. Coordinates will be interpreted differently depending on which mode is chosen.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SARPolarMatrixConvert</ows:Identifier>
      <ows:Title>This applications allows converting classical polarimetric matrices to each other.</ows:Title>
      <ows:Abstract>This application allows converting classical polarimetric matrices to each other.For instance, it is possible to get the coherency matrix from the Sinclar one, or the Mueller matrix from the coherency one.The filters used in this application never handle matrices, but images where each band is related to their elements.As most of the time SAR polarimetry handles symmetric/hermitian matrices, only the relevant elements are stored, so that the images representing them have a minimal number of bands.For instance, the coherency matrix size is 3x3 in the monostatic case, and 4x4 in the bistatic case : it will thus be stored in a 6-band or a 10-band complex image (the diagonal and the upper elements of the matrix).The Sinclair matrix is a special case : it is always represented as 3 or 4 one-band complex images (for mono- or bistatic case).The available conversions are listed below:--- Monostatic case ---1 msinclairtocoherency --&gt; Sinclair matrix to coherency matrix (input : 3 x 1 complex channel (HH, HV or VH, VV) | output :  6 complex channels)2 msinclairtocovariance --&gt; Sinclair matrix to covariance matrix (input : 3 x 1 complex channel (HH, HV or VH, VV) | output :  6 complex channels)3 msinclairtocircovariance --&gt; Sinclair matrix to circular covariance matrix (input : 3 x 1 complex channel (HH, HV or VH, VV) | output :  6 complex channels)4 mcoherencytomueller --&gt; Coherency matrix to Mueller matrix (input : 6 complex channels | 16 real channels)5 mcovariancetocoherencydegree --&gt; Covariance matrix to coherency degree (input : 6 complex channels | 3 complex channels)6 mcovariancetocoherency --&gt; Covariance matrix to coherency matrix (input : 6 complex channels | 6 complex channels)7 mlinearcovariancetocircularcovariance --&gt; Covariance matrix to circular covariance matrix (input : 6 complex channels | output : 6 complex channels)--- Bistatic case ---8 bsinclairtocoherency --&gt; Sinclair matrix to coherency matrix (input : 4 x 1 complex channel (HH, HV, VH, VV) | 10 complex channels)9 bsinclairtocovariance --&gt; Sinclair matrix to covariance matrix (input : 4 x 1 complex channel (HH, HV, VH, VV) | output : 10 complex channels)10 bsinclairtocircovariance --&gt; Sinclair matrix to circular covariance matrix (input : 4 x 1 complex channel (HH, HV, VH, VV) | output : 10 complex channels)--- Both cases ---11 sinclairtomueller --&gt; Sinclair matrix to Mueller matrix (input : 4 x 1 complex channel (HH, HV, VH, VV) | output : 16 real channels)12 muellertomcovariance --&gt; Mueller matrix to covariance matrix (input : 16 real channels | output : 6 complex channels)13 muellertopoldegandpower --&gt; Mueller matrix to polarization degree and power (input : 16 real channels | output : 4 real channels)</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ComputeOGRLayersFeaturesStatistics</ows:Identifier>
      <ows:Title>Compute statistics of the features in a set of OGR Layers</ows:Title>
      <ows:Abstract>Compute statistics (mean and standard deviation) of the features in a set of OGR Layers, and write them in an XML file. This XML file can then be used by the training application.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.StereoRectificationGridGenerator</ows:Identifier>
      <ows:Title>Generates two deformation fields to resample in epipolar geometry, a pair of stereo images up to the sensor model precision</ows:Title>
      <ows:Abstract>This application generates a pair of deformation grid to stereo-rectify a pair of stereo images according to sensor modelling and a mean elevation hypothesis.This application is the first part of the stereo reconstruction framework. The output deformation grids can be passed to the GridBasedImageResampling application for actual resampling into epipolar geometry.There are several ways to set the elevation source:  * An arbitrary constant elevation  * A DEM directory  * Compute an average elevation from a DEMIf needed, the application can compute inverse resampling grids (from epipolar to original sensor geometry). Don't forget to check the other outputs from the application. For instance, the application gives the X and Y size of the rectified images, along with an estimated baseline ratio.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MeanShiftSmoothing</ows:Identifier>
      <ows:Title>This application smooths an image using the MeanShift algorithm.</ows:Title>
      <ows:Abstract>MeanShift [1,2,3] is an iterative edge-preserving image smoothing algorithm often used in image processing and as a first step for image segmentation. The MeanShift algorithm can be applied to multispectral images.At first iteration, for any given pixel of the input image, the filtered value correspond to the average spectral signature of neighborhood pixels that are both spatially closer than the spatial radius parameter (spatialr) and with spectral signature that have an euclidean distance to the input pixel lower than the range radius (ranger), that is, pixels that are both close in space and in spectral signatures. Subsequent iterations will repeat this process by considering that the pixel signature corresponds to the average spectral signature computed during previous iteration, and that the pixel position corresponds to the average position of pixels used to compute the average signature.The algorithm stops when the maximum number of iterations (maxiter) is reached, or when the position and spectral signature does not change much between iterations, according to the convergence threshold (thres). If the modesearch option is used then convergence will also stops if the spatial position reaches a pixel that has already converged. This will speed-up convergence, at the expense of stability of the result.The application outputs the image of the final averaged spectral signatures (fout), and can also optionally output the 2D displacement field between input pixel position and final pixel position after convergence (foutpos).Note that computing an euclidean distance between spectral signatures may be inaccurate and that techniques such as color space transform or image normalisation could be applied before using this application. Also note that most satellite images noise model is not gaussian, since noise variance linearly depends on radiance (the higher the radiance, the higher the noise variance). To account for such noise model, the application provides the range radius ramp option (rangeramp), which will vary the range radius linearly with the central pixel intensity. Default value is 1. (no ramp).This application is the first step of the large scale MeanShift method depicted in [4]. Both outputs (fout and foutpos) can be passed to the large scale MeanShift segmentation application [5]. If the application is used for large scale MeanShift, modesearch option should be off.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DownloadSRTMTiles</ows:Identifier>
      <ows:Title>Download or list SRTM tiles</ows:Title>
      <ows:Abstract>This application allows selecting the appropriate SRTM tiles that covers a list of images. It builds a list of the required tiles. Two modes are available: the first one download those tiles from the USGS SRTM3 website (http://dds.cr.usgs.gov/srtm/version2_1/SRTM3/), the second one list those tiles in a local directory. In both cases, you need to indicate the directory in which directory  tiles will be download or the location of local SRTM files.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DSFuzzyModelEstimation</ows:Identifier>
      <ows:Title>Estimate feature fuzzy model parameters using 2 vector data (ground truth samples and wrong samples).</ows:Title>
      <ows:Abstract>Estimate feature fuzzy model parameters using 2 vector data (ground truth samples and wrong samples).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.LSMSSegmentation</ows:Identifier>
      <ows:Title>This application performs the second step of the exact Large-Scale Mean-Shift segmentation workflow (LSMS) [1].</ows:Title>
      <ows:Abstract>This application will produce a labeled image where neighbor pixels whose range distance is below range radius (and optionally spatial distance below spatial radius) will be grouped together into the same cluster. For large images one can use the tilesizex and tilesizey parameters for tile-wise processing, with the guarantees of identical results.Filtered range image and spatial image should be created with the MeanShiftSmoothing application outputs (fout and foutpos) [2], with modesearch parameter disabled. If spatial image is not set, the application will only process the range image and spatial radius parameter will not be taken into account.Please note that this application will generate a lot of temporary files (as many as the number of tiles), and will therefore require twice the size of the final result in term of disk space. The cleanup option (activated by default) allows removing all temporary file as soon as they are not needed anymore (if cleanup is activated, tmpdir set and tmpdir does not exists before running the application, it will be removed as well during cleanup). The tmpdir option allows defining a directory where to write the temporary files.Please also note that the output image type should be set to uint32 to ensure that there are enough labels available.The output of this application can be passed to the LSMSSmallRegionMerging [3] or LSMSVectorization [4] applications to complete the LSMS workflow.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.BandMath</ows:Identifier>
      <ows:Title>Outputs a monoband image which is the result of a mathematical operation on several multi-band images.</ows:Title>
      <ows:Abstract>This application performs a mathematical operation on several multi-band images and outputs the result into a monoband image. The given expression is computed at each pixel position. Evaluation of the mathematical formula is done by the muParser libraries.The formula can be written using:  * numerical values ( 2.3, -5, 3.1e4, ...)  * variables containing pixel values (e.g. : 'im2b3' is the pixel value in 2nd image, 3rd band)  * binary operators:    * '+' addition, '-' subtraction, '*' multiplication, '/' division    * '^' raise x to the power of y    * '</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Rescale</ows:Identifier>
      <ows:Title>Rescale the image between two given values.</ows:Title>
      <ows:Abstract>This application scales the given image pixel intensity between two given values.By default min (resp. max) value is set to 0 (resp. 255).Input minimum and maximum values is automatically computed for all image bands.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DomainTransform</ows:Identifier>
      <ows:Title>Domain Transform application for wavelet and fourier</ows:Title>
      <ows:Abstract>Domain Transform application for wavelet and fourier</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SOMClassification</ows:Identifier>
      <ows:Title>SOM image classification.</ows:Title>
      <ows:Abstract>Unsupervised Self Organizing Map image classification.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ReadImageInfo</ows:Identifier>
      <ows:Title>Get information about the image</ows:Title>
      <ows:Abstract>Display information about the input image like: image size, origin, spacing, metadata, projections...</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.OGRLayerClassifier</ows:Identifier>
      <ows:Title>Classify an OGR layer based on a machine learning model and a list of features to consider.</ows:Title>
      <ows:Abstract>This application will apply a trained machine learning model on the selected feature to get a classification of each geometry contained in an OGR layer. The list of feature must match the list used for training. The predicted label is written in the user defined field for each geometry.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ColorMapping</ows:Identifier>
      <ows:Title>Maps an input label image to 8-bits RGB using look-up tables.</ows:Title>
      <ows:Abstract>This application allows one to map a label image to a 8-bits RGB image (in both ways) using different methods. -The custom method allows one to use a custom look-up table. The look-up table is loaded from a text file where each line describes an entry. The typical use of this method is to colorise a classification map. -The continuous method allows mapping a range of values in a scalar input image to a colored image using continuous look-up table, in order to enhance image interpretation. Several look-up tables can been chosen with different color ranges.-The optimal method computes an optimal look-up table. When processing a segmentation label image (label to color), the color difference between adjacent segmented regions is maximized. When processing an unknown color image (color to label), all the present colors are mapped to a continuous label list. - The support image method uses a color support image to associate an average color to each region.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SampleSelection</ows:Identifier>
      <ows:Title>Selects samples from a training vector data set.</ows:Title>
      <ows:Abstract>The application selects a set of samples from geometries intended for training (they should have a field giving the associated class). First of all, the geometries must be analyzed by the PolygonClassStatistics application to compute statistics about the geometries, which are summarized in an xml file. Then, this xml file must be given as input to this application (parameter instats).The input support image and the input training vectors shall be given in parameters 'in' and 'vec' respectively. Only the sampling grid (origin, size, spacing)will be read in the input image.There are several strategies to select samples (parameter strategy) :   - smallest (default) : select the same number of sample in each class so that the smallest one is fully sampled.  - constant : select the same number of samples N in each class (with N below or equal to the size of the smallest class).  - byclass : set the required number for each class manually, with an input CSV file (first column is class name, second one is the required samples number).  - percent: set a target global percentage of samples to use. Class proportions will be respected.   - total: set a target total number of samples to use. Class proportions will be respected. There is also a choice on the sampling type to performs :   - periodic : select samples uniformly distributed  - random : select samples randomly distributedOnce the strategy and type are selected, the application outputs samples positions(parameter out).The other parameters to look at are :   - layer : index specifying from which layer to pick geometries.  - field : set the field name containing the class.  - mask : an optional raster mask can be used to discard samples.  - outrates : allows outputting a CSV file that summarizes the sampling rates for each class.As with the PolygonClassStatistics application, different types  of geometry are supported : polygons, lines, points. The behavior of this application is different for each type of geometry :   - polygon: select points whose center is inside the polygon  - lines  : select points intersecting the line  - points : select closest point to the provided point</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DEMConvert</ows:Identifier>
      <ows:Title>Converts a geo-referenced DEM image into a general raster file compatible with OTB DEM handling.</ows:Title>
      <ows:Abstract>In order to be understood by the Orfeo ToolBox and the underlying OSSIM library, a geo-referenced Digital Elevation Model image can be converted into a general raster image, which consists in 3 files with the following extensions: .ras, .geom and .omd. Once converted, you have to place these files in a separate directory, and you can then use this directory to set the "DEM Directory" parameter of a DEM based OTB application or filter.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ContrastEnhancement</ows:Identifier>
      <ows:Title>This application is the implementation of the histogram equalization algorithm. It can be used to enhance contrast in an image or to reduce the dynamic of the image without losing too much contrast. It offers several options as a no data value, a contrast limitation factor, a local version of the algorithm and also a mode to equalize the luminance of the image.</ows:Title>
      <ows:Abstract>This application is the implementation of the histogram equalization algorithm. The idea of the algorithm is to use the whole available dynamic. In order to do so it computes a histogram over the image and then use the whole dynamic: meaning flattening the histogram. That gives us gain for each bin that transform the original histogram into the flat one. This gain is then apply on the original image.The application proposes several options to allow a finer result: - There is an option to limit contrast. We choose to limit the contrast by modifying the original histogram. To do so we clip the histogram at a given height and redistribute equally among the bins the clipped population. Then we add a local version of the algorithm. - It is possible to apply the algorithm on tiles of the image, instead of on the whole image. That gives us gain depending on the value of the pixel and its position in the image. In order to smoothen the result we interpolate the gain between tiles.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ManageNoData</ows:Identifier>
      <ows:Title>Manage No-Data</ows:Title>
      <ows:Abstract>This application has two modes. The first allows building a mask of no-data pixels from the no-data flags read from the image file. The second allows updating the change the no-data value of an image (pixels value and metadata). This last mode also allows replacing NaN in images with a proper no-data value. To do so, one should activate the NaN is no-data option.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.TrainImagesClassifier</ows:Identifier>
      <ows:Title>Train a classifier from multiple pairs of images and training vector data.</ows:Title>
      <ows:Abstract>This application performs a classifier training from multiple pairs of input images and training vector data. Samples are composed of pixel values in each band optionally centered and reduced using an XML statistics file produced by the ComputeImagesStatistics application. The training vector data must contain polygons with a positive integer field representing the class label. The name of this field can be set using the "Class label field" parameter. Training and validation sample lists are built such that each class is equally represented in both lists. One parameter allows controlling the ratio between the number of samples in training and validation sets. Two parameters allow managing the size of the training and validation sets per class and per image. Several classifier parameters can be set depending on the chosen classifier. In the validation process, the confusion matrix is organized the following way: rows = reference labels, columns = produced labels. In the header of the optional confusion matrix output file, the validation (reference) and predicted (produced) class labels are ordered according to the rows/columns of the confusion matrix. This application is based on LibSVM, OpenCV Machine Learning (2.3.1 and later), and Shark ML. The output of this application is a text model file, whose format corresponds to the ML model type chosen. There is no image nor vector data output.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Smoothing</ows:Identifier>
      <ows:Title>Apply a smoothing filter to an image</ows:Title>
      <ows:Abstract>This application applies a smoothing filter to an image. Three methodes can be used : a gaussian filter , a mean filter , or an anisotropic diffusion using the Perona-Malik algorithm.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.HyperspectralUnmixing</ows:Identifier>
      <ows:Title>Estimate abundance maps from an hyperspectral image and a set of endmembers.</ows:Title>
      <ows:Abstract>The application applies a linear unmixing algorithmto an hyperspectral data cube. This method supposes that the mixture betweenaterials in the scene is macroscopic and simulates a linear mixing model ofspectra.The Linear Mixing Model (LMM) acknowledges that reflectancespectrum associated with each pixel is a linear combination of purematerials in the recovery area, commonly known as endmembers. Endmembers canbe estimated using the VertexComponentAnalysis application.The application allows estimating the abundance maps with several algorithms :  * Unconstrained Least Square (ucls)  * Image Space Reconstruction Algorithm (isra)  * Non-negative constrained  * Least Square (ncls)  * Minimum Dispersion Constrained Non Negative Matrix Factorization (MDMDNMF).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VectorDataSetField</ows:Identifier>
      <ows:Title>Set a field in vector data.</ows:Title>
      <ows:Abstract>Set a specified field to a specified value on all features of a vector data.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.HooverCompareSegmentation</ows:Identifier>
      <ows:Title>Compare two segmentations with Hoover metrics</ows:Title>
      <ows:Abstract>This application compares a machine segmentation (MS) with a partial ground truth segmentation (GT). The Hoover metrics are used to estimate scores for correct detection, over-segmentation, under-segmentation and missed detection. The application can output the overall Hoover scores along with coloredimages of the MS and GT segmentation showing the state of each region (correct detection, over-segmentation, under-segmentation, missed) The Hoover metrics are described in : Hoover et al., "An experimental comparison of range image segmentation algorithms", IEEE PAMI vol. 18, no. 7, July 1996.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MultiResolutionPyramid</ows:Identifier>
      <ows:Title>Build a multi-resolution pyramid of the image.</ows:Title>
      <ows:Abstract>This application builds a multi-resolution pyramid of the input image. User can specified the number of levels of the pyramid and the subsampling factor. To speed up the process, you can use the fast scheme option</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ClassificationMapRegularization</ows:Identifier>
      <ows:Title>Filters the input labeled image using Majority Voting in a ball shaped neighbordhood.</ows:Title>
      <ows:Abstract>This application filters the input labeled image (with a maximal class label = 65535) using Majority Voting in a ball shaped neighbordhood. Majority Voting takes the more representative value of all the pixels identified by the ball shaped structuring element and then sets the center pixel to this majority label value.    -NoData is the label of the NOT classified pixels in the input image. These input pixels keep their NoData label in the output image.    -Pixels with more than 1 majority class are marked as Undecided if the parameter 'ip.suvbool == true', or keep their Original labels otherwise.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MorphologicalProfilesAnalysis</ows:Identifier>
      <ows:Title>Performs morphological profiles analysis on an input image channel.</ows:Title>
      <ows:Abstract>This algorithm is derived from the following publication:Martino Pesaresi and Jon Alti Benediktsson, Member, IEEE: A new approachfor the morphological segmentation of high resolution satellite imagery.IEEE Transactions on geoscience and remote sensing, vol. 39, NO. 2,February 2001, p. 309-320.Depending of the profile selection, the application provides::- The multi scale geodesic morphological opening or closing profile of the input image.- The multi scale derivative of the opening or closing profile.- The parameter (called characteristic) of the maximum derivative value of the multi scale closing or opening profile for which this maxima occurs.- The labeled classification of the input image.The behavior of the classification is :Given :math:`x_1` and :math:`x_2` two membership values,:math:`L_1, L_2` two labels associated, and :math:`\sigma` a tolerancevalue, the following decision rule is applied::math:`L = \begin</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ConnectedComponentSegmentation</ows:Identifier>
      <ows:Title>Connected component segmentation and object based image filtering of the input image according to user-defined criterions.</ows:Title>
      <ows:Abstract>This application allows one to perform a masking, connected components segmentation and object based image filtering. First and optionally, a mask can be built based on user-defined criterions to select pixels of the image which will be segmented. Then a connected component segmentation is performed with a user defined criterion to decide whether two neighbouring pixels belong to the same segment or not. After this segmentation step, an object based image filtering is applied using another user-defined criterion reasoning on segment properties, like shape or radiometric attributes. Criterions are mathematical expressions analysed by the MuParser library (http://muparser.sourceforge.net/). For instance, expression "((b1&gt;80) and intensity&gt;95)" will merge two neighbouring pixel in a single segment if their intensity is more than 95 and their value in the first image band is more than 80. See parameters documentation for a list of available attributes. The output of the object based image filtering is vectorized and can be written in shapefile or KML format. If the input image is in raw geometry, resulting polygons will be transformed to WGS84 using sensor modelling before writing, to ensure consistency with GIS software. For this purpose, a Digital Elevation Model can be provided to the application. The whole processing is done on a per-tile basis for large images, so this application can handle images of arbitrary size.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ConcatenateImages</ows:Identifier>
      <ows:Title>Concatenate a list of images of the same size into a single multi-channel one.</ows:Title>
      <ows:Abstract>This application performs images channels concatenation. It reads the input image list (single or multi-channel) and generates a single multi-channel image. The channel order is the same as the list.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ImageClassifier</ows:Identifier>
      <ows:Title>Performs a classification of the input image according to a model file.</ows:Title>
      <ows:Abstract>This application performs an image classification based on a model file produced by the TrainImagesClassifier application. Pixels of the output image will contain the class labels decided by the classifier (maximal class label = 65535). The input pixels can be optionally centered and reduced according to the statistics file produced by the ComputeImagesStatistics application. An optional input mask can be provided, in which case only input image pixels whose corresponding mask value is greater than 0 will be classified. By default, the remaining of pixels will be given the label 0 in the output image.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ConcatenateVectorData</ows:Identifier>
      <ows:Title>Concatenate vector data files</ows:Title>
      <ows:Abstract>This application concatenates a list of vector data files to produce a unique vector data output file.This application will gather all the geometries from the input files and write them into an output vector data file. Any format supported by OGR can be used. Ideally, all inputs should have the same set of fields and the same spatial reference system.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.OSMDownloader</ows:Identifier>
      <ows:Title>Download vector data from OSM and store it to file</ows:Title>
      <ows:Abstract>The application connects to Open Street Map server, downloads the data corresponding to the spatial extent of the support image, and filters the geometries based on OSM tags to produce a vector data file.This application can be used to download reference data to perform the training of a machine learning model (see for instance [1]).By default, the entire layer is downloaded. The application has a special mode to provide the list of available classes in the layers. The downloaded features are filtered by giving an OSM tag 'key'. In addition, the user can also choose what 'value' this key should have. More information about the OSM project at [2].</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.SFSTextureExtraction</ows:Identifier>
      <ows:Title>Computes Structural Feature Set textures on every pixel of the input image selected channel</ows:Title>
      <ows:Abstract>Structural Feature Set [1] are based on the histograms of the pixels in multiple directions of the image. The SFSTextureExtraction application computes the  6 following features: SFS'Length, SFS'Width, SFS'PSI, SFS'W-Mean, SFS'Ratio and SFS'SD (Standard Deviation). The texture indices are computed from the neighborhood of each pixel. It is possible to change the length of the calculation line (spatial threshold), as well as the maximum difference between a pixel of the line and the pixel at the center of the neighborhood (spectral threshold) [2].</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.HomologousPointsExtraction</ows:Identifier>
      <ows:Title>Compute homologous points between images using keypoints</ows:Title>
      <ows:Abstract>This application allows computing homologous points between images using keypoints.  SIFT or SURF keypoints can be used and the band on which keypoints are computed can be set independently for both images. The application offers two modes : the first is the full mode where keypoints are extracted from the full extent of both images (please note that in this mode large image file are not supported). The second mode, called geobins, allows one to set-up spatial binning to get fewer points spread across the entire image. In this mode, the corresponding spatial bin in the second image is estimated using geographical transform or sensor modelling, and is padded according to the user defined precision. Last, in both modes the application can filter matches whose colocalisation in first image exceed this precision. The elevation parameters are to deal more precisely with sensor modelling in case of sensor geometry data. The outvector option allows creating a vector file with segments corresponding to the localisation error between the matches. It can be useful to assess the precision of a registration for instance. The vector file is always reprojected to EPSG:4326 to allow display in a GIS. This is done via reprojection or by applying the image sensor models.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.MultivariateAlterationDetector</ows:Identifier>
      <ows:Title>Change detection by Multivariate Alteration Detector (MAD) algorithm</ows:Title>
      <ows:Abstract>This application performs change detection between two multispectral images using the Multivariate Alteration Detector (MAD) [1] algorithm.The MAD algorithm produces a set of N change maps (where N is the maximum number of bands in first and second input images), with the following properties: - Change maps are differences of a pair of linear combinations of  bands from image 1 and bands from image 2 chosen to maximize the  correlation,  - Each change map is orthogonal to the others. This is a statistical method which can handle different modalities and even different bands and number of bands between images.  The application will output all change maps into a single multiband image. If numbers of bands in image 1 and 2 are equal, then change maps are sorted by increasing correlation. If number of bands is different, the change maps are sorted by decreasing correlation.  The application will also print the following information:- Mean1 and Mean2 which are the mean values of bands for both input images,- V1 and V2 which are the two linear transform that are applied to input image 1 and input image 2 to build the change map,- Rho, the vector of correlation associated to each change map. The OTB filter used in this application has been implemented from the Matlab code kindly made available by the authors here [2]. Both cases (same and different number of bands) have been validated by comparing the output image to the output produced by the Matlab  code, and the reference images for testing have been generated from  the Matlab code using Octave.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.GrayScaleMorphologicalOperation</ows:Identifier>
      <ows:Title>Performs morphological operations on a grayscale input image</ows:Title>
      <ows:Abstract>This application performs grayscale morphological operations on a mono band image</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.KmzExport</ows:Identifier>
      <ows:Title>Export the input image in a KMZ product.</ows:Title>
      <ows:Abstract>This application exports the input image in a kmz product that can be display in the Google Earth software. The user can set the size of the product size, a logo and a legend to the product. Furthemore, to obtain a product that fits the relief, a DEM can be used.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ConvertSensorToGeoPoint</ows:Identifier>
      <ows:Title>Sensor to geographic coordinates conversion.</ows:Title>
      <ows:Abstract>This Application converts a sensor point of an input image to a geographic point using the Forward Sensor Model of the input image.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.BundleToPerfectSensor</ows:Identifier>
      <ows:Title>Perform P+XS pansharpening</ows:Title>
      <ows:Abstract>This application performs P+XS pansharpening. The default mode use Pan and XS sensor models to estimate the transformation to superimpose XS over Pan before the fusion ("default mode"). The application provides also a PHR mode for Pleiades images which does not use sensor models as Pan and XS products are already coregistered but only estimate an affine transformation to superimpose XS over the Pan.Note that this option is automatically activated in case Pleiades images are detected as input.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.ComputeConfusionMatrix</ows:Identifier>
      <ows:Title>Computes the confusion matrix of a classification</ows:Title>
      <ows:Abstract>This application computes the confusion matrix of a classification map relative to a ground truth dataset. This ground truth can be given as a raster or a vector data. Only reference and produced pixels with values different from NoData are handled in the calculation of the confusion matrix. The confusion matrix is organized the following way: rows = reference labels, columns = produced labels. In the header of the output file, the reference and produced class labels are ordered according to the rows/columns of the confusion matrix.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.GridBasedImageResampling</ows:Identifier>
      <ows:Title>Resamples an image according to a resampling grid</ows:Title>
      <ows:Abstract>This application allows performing image resampling from an input resampling grid.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.DynamicConvert</ows:Identifier>
      <ows:Title>Change the pixel type and rescale the image's dynamic</ows:Title>
      <ows:Abstract>This application performs an image pixel type conversion (short, ushort, uchar, int, uint, float and double types are handled). The output image is written in the specified format (ie. that corresponds to the given extension). The conversion can include a rescale of the data range, by default it's set between the 2nd to the 98th percentile. The rescale can be linear or log2.  The choice of the output channels can be done with the extended filename, but less easy to handle. To do this, a 'channels' parameter allows you to select the desired bands at the output. There are 3 modes, the available choices are:  * grayscale :  to display mono image as standard color image  * rgb : select 3 bands in the input image (multi-bands)  * all : keep all bands.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.Superimpose</ows:Identifier>
      <ows:Title>Using available image metadata, project one image onto another one</ows:Title>
      <ows:Abstract>This application performs the projection of an image into the geometry of another one.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>OTB.VertexComponentAnalysis</ows:Identifier>
      <ows:Title>Given a set of mixed spectral vectors, estimatereference substances also known as endmembers using the VertexComponent Analysis algorithm.</ows:Title>
      <ows:Abstract>Apply the Vertex Component Analysis [1] toan hyperspectral image to extract endmembers. Given a set of mixedspectral vectors (multispectral or hyperspectral), the applicationestimates the spectral signature of reference substances also knownas endmembers.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>securityOut</ows:Identifier>
      <ows:Title>Basic out filtering </ows:Title>
      <ows:Abstract>This service can be executed as a filter for OGC API - Processes requests after handling them (non-blocking)</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>securityIn</ows:Identifier>
      <ows:Title>Basic in filtering </ows:Title>
      <ows:Abstract>This service can be executed as a filter for OGC API - Processes requests before handling them</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>HelloPy</ows:Identifier>
      <ows:Title>Create a welcome message string.</ows:Title>
      <ows:Abstract>Create a welcome string.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>RVoronoi</ows:Identifier>
      <ows:Title>Voronoi Diagram. </ows:Title>
      <ows:Abstract>Computes the edges of Voronoi diagram for a set of data points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>securityInFailed</ows:Identifier>
      <ows:Title>Convert raster data from one format to another. </ows:Title>
      <ows:Abstract>http://www.gdal.org/gdal_translate.html</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>failR</ows:Identifier>
      <ows:Title>HelloWorld Service in R</ows:Title>
      <ows:Abstract>Output and Hello Wolrd string</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>org.n52.javaps.test.echo</ows:Identifier>
      <ows:Title>Echo input</ows:Title>
      <ows:Abstract>Simply echo the value provided as input</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>org.n52.javaps.test.EchoProcess</ows:Identifier>
      <ows:Title>Echo input</ows:Title>
      <ows:Abstract>Simply echo the value provided as input</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Gdal_Contour</ows:Identifier>
      <ows:Title>Builds vector contour lines from a raster elevation model.</ows:Title>
      <ows:Abstract>http://www.gdal.org/gdal_contour.html</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>demo</ows:Identifier>
      <ows:Title>Demo long process. </ows:Title>
      <ows:Abstract>This service doesn't do anything except taking its time to return an error message, it demonstrates how to use the update_status function of the Python ZOO-API from your services code.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>SymDifference</ows:Identifier>
      <ows:Title>Compute symmetric difference. </ows:Title>
      <ows:Abstract>This service shall return a feature collection representing the closure of the symmetric difference of two Geometries. The symmetric difference is the set of points which lie on either InputEntity1 or InputEntity2 but not in both.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Simplify</ows:Identifier>
      <ows:Title>Simplifies polygons geometries. </ows:Title>
      <ows:Abstract>This service shall return a feature collection representing all simplified geometries with all their vertices within the distance of the original geometry defined by the given tolerance.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>ConvexHull</ows:Identifier>
      <ows:Title>Compute convex hull.</ows:Title>
      <ows:Abstract>This service shall return a feature collection that represents the convex hull of geometry InputPolygon. The convex hull is the smallest convex polygon that contains all points of the geometry. The convex Hull for a geometry of encoding data type Point is the point itself</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Gdal_Translate</ows:Identifier>
      <ows:Title>Convert raster data from one format to another. </ows:Title>
      <ows:Abstract>http://www.gdal.org/gdal_translate.html</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>IsSimple</ows:Identifier>
      <ows:Title>IsSimple test </ows:Title>
      <ows:Abstract>This service shall return a true value if and only if geometry g has no anomalous geometric points, such as self intersection or self tangency. Simple curves intersect themselves only at their endpoints (only if they are also closed, see next function).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Contains</ows:Identifier>
      <ows:Title>Contains</ows:Title>
      <ows:Abstract>This service shall return a true value if and only if the geometry g2 lies in the closure (boundary union interior) of geometry g1 - the inverse of Within(g1: Geometry, g2: Geometry).</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Intersects</ows:Identifier>
      <ows:Title>Intersects test</ows:Title>
      <ows:Abstract>This service shall return a true value if and only if the geometries g1 and g2 have at least one boundary point in common, but no interior points.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Crosses</ows:Identifier>
      <ows:Title>Crosses test</ows:Title>
      <ows:Abstract>This service shall return a true value if and only if the geometries g1 and g2 share some but neither is containe in the other, and the dimension of the intersection is less than that of both of the geometries.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Voronoi</ows:Identifier>
      <ows:Title>Voronoi Diagram. </ows:Title>
      <ows:Abstract>Computes the edges of Voronoi diagram for a set of data points.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Ogr2Ogr</ows:Identifier>
      <ows:Title>Converts vector data from one format to another. </ows:Title>
      <ows:Abstract>http://www.gdal.org/ogr2ogr.html</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Boundary</ows:Identifier>
      <ows:Title>Computes boundary.</ows:Title>
      <ows:Abstract>This service shall return a feature callection representing the combinatorial boundary of each geometry in the InputPolygon feature collection.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Difference</ows:Identifier>
      <ows:Title>Compute difference. </ows:Title>
      <ows:Abstract>This function shall return a bag of geometry values representing the closure of the set difference between the two geometries InputEntity1 and InputEntity2. The difference is the set of all points which lie on InputEntity1 but not on InputEntity2.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Delaunay</ows:Identifier>
      <ows:Title>Delaunay Triangulation. </ows:Title>
      <ows:Abstract>Computes the edges of a Delaunay triangulation for a set of data points.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Within</ows:Identifier>
      <ows:Title>Within test</ows:Title>
      <ows:Abstract>This service shall return a true value if and only if the geometry InputEntity1 is spatially within geometry InputEntity2; that is if every point on InputEntity1 is also on InputEntity2.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Gdal_Dem</ows:Identifier>
      <ows:Title>Tools to analyze and visualize DEMs.</ows:Title>
      <ows:Abstract>http://www.gdal.org/gdaldem.html</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>echo</ows:Identifier>
      <ows:Title>Echo input</ows:Title>
      <ows:Abstract>Simply echo the value provided as input</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Touches</ows:Identifier>
      <ows:Title>Compute intersection. </ows:Title>
      <ows:Abstract>Generates a new geometry which is the region of intersection of the two geometries operated on.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Disjoint</ows:Identifier>
      <ows:Title>Disjoint </ows:Title>
      <ows:Abstract>This servuce shall return a true value if and only if the geometries g1 and g2 have no point in common.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Gdal_Grid</ows:Identifier>
      <ows:Title>Computes a regular grid (raster) from scattered data read from a vector data source. </ows:Title>
      <ows:Abstract>http://www.gdal.org/gdal_grid.html</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Centroid</ows:Identifier>
      <ows:Title>Computes the centroid of a polygon. </ows:Title>
      <ows:Abstract>This service shall return the point that is the geometric centre of gravity of the geometry InputPolygon.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Intersection</ows:Identifier>
      <ows:Title>Compute intersection. </ows:Title>
      <ows:Abstract>This function SHALL return a bag of geometry values representing the Point set intersection of geometry InputEntity1 and geometry InputEntity2.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>IsValid</ows:Identifier>
      <ows:Title>IsValid test </ows:Title>
      <ows:Abstract>This service shall return a TRUE value if and only if the geometry g is valid</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>GetStatus</ows:Identifier>
      <ows:Title>Produce an updated ExecuteResponse document. </ows:Title>
      <ows:Abstract>Create an ExecuteResponse document from a sid (Service ID), it will use the niternal ZOO Kernel mechanisms to access the current status from a running Service and update the percentCompleted from the original backup file used by the ZOO Kernel when running a Service in background. </ows:Abstract>
      <ows:Metadata xlink:title="Demo GetStatus request"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Distance</ows:Identifier>
      <ows:Title>Compute the distance between two geometries</ows:Title>
      <ows:Abstract>Compute the distance between two geometries</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>GdalExtractProfile</ows:Identifier>
      <ows:Title>Extract elevation values along a line. </ows:Title>
      <ows:Abstract>Fetch the x,y,z values of a DEM raster file along a linestring</ows:Abstract>
      <ows:Metadata xlink:title="My Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>EchoProcess</ows:Identifier>
      <ows:Title>Echo input</ows:Title>
      <ows:Abstract>Simply echo the value provided as input</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>Gdal_Warp</ows:Identifier>
      <ows:Title>GDAL Warp Tool</ows:Title>
      <ows:Abstract>The gdalwarp utility is an image mosaicing, reprojection and warping utility. The program can reproject to any supported projection, and can also apply GCPs stored with the image if the image is "raw" with control information.</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Buffer</ows:Identifier>
      <ows:Title>Create a buffer around a polygon. </ows:Title>
      <ows:Abstract>This service shall return a feature collection representing the buffer of geometry InputPolygon at distance BufferDistance. The buffer of a geometry at distance d is the Polygon or MultiPolygon which contains all points within a distance d of the geometry.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Equals</ows:Identifier>
      <ows:Title>Equals </ows:Title>
      <ows:Abstract>This service shall return a true value if and only if the geometries g1 and g2 are equal</ows:Abstract>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>Union</ows:Identifier>
      <ows:Title>Compute union. </ows:Title>
      <ows:Abstract>This service shall return a bag of geometry values representing a Point set union of geometry InputEntity1 with geometry InputEntity2.</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
    <wps:Process wps:processVersion="1">
      <ows:Identifier>longProcess</ows:Identifier>
      <ows:Title>Demo long process. </ows:Title>
      <ows:Abstract>This service doesn't do anything except taking its time, it demonstrates how to use the updateStatus function from your ZOO Service. </ows:Abstract>
      <ows:Metadata xlink:title="Demo GetStatus request"/>
    </wps:Process>
    <wps:Process wps:processVersion="2">
      <ows:Identifier>GetArea</ows:Identifier>
      <ows:Title>Compute geometry area.</ows:Title>
      <ows:Abstract>Computes the area of a geometry</ows:Abstract>
      <ows:Metadata xlink:title="Demo"/>
    </wps:Process>
  </wps:ProcessOfferings>
  <wps:Languages>
    <wps:Default>
      <ows:Language>fr-FR</ows:Language>
    </wps:Default>
    <wps:Supported>
      <ows:Language>fr-FR</ows:Language>
      <ows:Language>en-CA</ows:Language>
      <ows:Language>en-US</ows:Language>
    </wps:Supported>
  </wps:Languages>
</wps:Capabilities>
